[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "src/Coach.js",
    "content": "import {camelCase, isFunction} from 'lodash-bound';\nimport assert                  from 'power-assert';\nimport {Observable}            from './libs/expect-rxjs.js';\nimport $                       from './libs/jquery.js';\nimport Machine                 from './util/Machine';\nimport {Point2D}               from './util/svg';\nimport {ValueTracker}          from 'utilities';\n\nconst $$domEvents   = Symbol('$$domEvents');\nconst $$tools       = Symbol('$$tools');\nconst $$initialized = Symbol('$$initialized');\n\n\n/**\n * The central hub of the artefacts and tools of a boxer canvas.\n * Creating one is among the first steps in using the boxer library.\n */\nexport class Coach extends ValueTracker {\n\t\n\t/**\n\t * the main state machine toggling between `'IDLE'` and `'BUSY'`,\n\t * used to coordinate between the local state machines of tools\n\t * @type {Machine}\n\t */\n\tstateMachine = new Machine('Coach', { state: 'IDLE' });\n\t\n\t/**\n\t * Create a new `Coach` instance rooted at a specific `Canvas` artefact.\n\t * @param options\n\t * @param {Canvas} options.root - the canvas making up the root of our boxer svg artefact tree\n\t */\n\tconstructor(options) {\n\t\tsuper();\n\t\tconst {root} = options;\n\t\tthis.root = root;\n\t\tthis[$$domEvents] = {};\n\t\t\n\t\t// /* keep track of canvas offset */\n\t\t// this._offset = {\n\t\t// \tleft: 0,\n\t\t// \ttop: 0\n\t\t// };\n\t\t// setInterval(() => {\n\t\t// \tthis._offset = this.root.svg.main.offset();\n\t\t// }, 1000);\n\t}\n\t\n\t/**\n\t * Register a new tool. Assumes that the coach has not yet started.\n\t * @param {Tool} tool - the new tool\n\t * @return {Coach} this coach object\n\t */\n\taddTool(tool) {\n\t\tassert(!this[$$initialized], \"You can't add tools to a Coach after starting it.\");\n\t\tthis[tool.constructor.name::camelCase()] = tool;\n\t\tif (!this[$$tools]) { this[$$tools] = new Set }\n\t\tthis[$$tools].add(tool);\n\t\ttool.init({ coach: this });\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Activate a given set of registered tools and turn off all others.\n\t * @param {Iterable<Tool>} chosenTools - the tools to activate\n\t */\n\tactivateExclusiveTools(chosenTools) {\n\t\tchosenTools = [...chosenTools];\n\t\tfor (let tool of this[$$tools]) {\n\t\t\tlet makeActive =\n\t\t\t\tchosenTools.includes(tool)                  ||\n\t\t\t\tchosenTools.includes(tool.constructor)      ||\n\t\t\t\tchosenTools.includes(tool.constructor.name) ||\n\t\t\t\tchosenTools.includes(tool.constructor.name::camelCase());\n\t\t\tif (makeActive !== tool.active) {\n\t\t\t\ttool.active = makeActive;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Start this coach, indicating that all tools have been registered.\n\t */\n\tstart() {\n\t\tthis[$$initialized] = true;\n\t\tfor (let tool of this[$$tools]) {\n\t\t\tif (tool.postInit::isFunction()) {\n\t\t\t\ttool.postInit({ coach: this });\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Let the coach know that it should start listening to specific types\n\t * of DOM events on artefacts, and to provide a way to subscribe to them.\n\t * It uses jQuery's delegation feature, so it is relatively efficient,\n\t * and it normalizes event objects and supplies them with additional\n\t * quick-access data, like the mouse event coordinates as a `Point2D`.\n\t * @param {Array<string>} events - a set of DOM event names, e.g., `'click'`, `'mouseover'`\n\t */\n\tregisterArtefactEvent(...events) {\n\t\tfor (let e of events) {\n\t\t\tif (!this[$$domEvents][e]) {\n\t\t\t\tthis[$$domEvents][e] = Observable.merge(\n\t\t\t\t\tObservable.fromEventPattern(\n\t\t\t\t\t\t(fn) => { $(this.root.svg.main).on (e, '.boxer > .handles *', fn) },\n\t\t\t\t\t\t(fn) => { $(this.root.svg.main).off(e, '.boxer > .handles *', fn) }\n\t\t\t\t\t),\n\t\t\t\t\tObservable.fromEventPattern(\n\t\t\t\t\t\t(fn) => { $(this.root.svg.main).on (e, fn) },\n\t\t\t\t\t\t(fn) => { $(this.root.svg.main).off(e, fn) }\n\t\t\t\t\t)\n\t\t\t\t).do(::this.enrichMouseEvent);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Enrich a mouse event object with a `Point2D` object representing\n\t * screen coordinates.\n\t * @private\n\t * @param {jQuery.Event} event - a jQuery event object\n\t */\n\tenrichMouseEvent(event) {\n\t\tevent.stopPropagation();\n\t\tevent.point = new Point2D({\n\t\t\tx:                event.pageX,\n\t\t\ty:                event.pageY,\n\t\t\tcoordinateSystem: this.root.svg.main\n\t\t});\n\t}\n\t\n\t/**\n\t * @param {String} e - the type of event to get a stream of\n\t * @returns {Observable} a stream of `e` events on the root canvas element\n\t */\n\trootE(e) { return Observable.fromEvent($(this.root.svg.main), e).do(::this.enrichMouseEvent) }\n\t\n\t/**\n\t * @param {String} e - the type of event to get a stream of\n\t * @returns {Observable} a stream of `e` events on the `window` DOM element\n\t */\n\twindowE(e) { return Observable.fromEvent($(window), e).do(::this.enrichMouseEvent) }\n\t\n\t/**\n\t * @param {String} e - the type of event to get a stream of\n\t * @returns {Observable} a stream of `e` events on the `document` DOM element\n\t */\n\tdocumentE(e) { return Observable.fromEvent($(document), e).do(::this.enrichMouseEvent) }\n\t\n\t/**\n\t * @param {String} e - the type of event to get a stream of\n\t * @returns {Observable} a stream of `e` events on any artefact\n\t */\n\te(e) { return this[$$domEvents][e] }\n\t\n}\n\n/**\n * @return {SvgArtefact} the artefact controller in charge of a given SVG DOM element\n * @param {SVGElement} element - the element for which to get the controller\n */\nexport function elementController(element) {\n\telement = $(element instanceof $.Event ? element.target : element); // take an event or an element\n\tlet controller = null;\n\tdo {\n\t\tcontroller = element.data('boxer-controller');\n\t\telement = element.parent();\n\t} while (!controller && element.length > 0);\n\treturn controller;\n}\n\n\n/** @private */\nexport function getHandler(key) {\n\tif (this) { return this.handlers[key] }\n\treturn (artefact) => artefact.handlers[key];\n}\n\n/**\n * Take an event stream and transform it into a stream of handler information\n * for only specifically requested handler types.\n * @this {Observable<jQuery.Event>}\n * @returns {Observable<Object>} information on relevant boxer handlers\n * @param {string} key - the handler type we're interested in, e.g., `'clickable'`, or `'*'` for all types\n */\nexport function handleBoxer(key) {\n\treturn this\n\t\t.map((event)=> {\n\t\t\tif (event instanceof $.Event) {\n\t\t\t\treturn [event.point, elementController(event), $(event.target).data('boxer-handlers')[key]];\n\t\t\t} else if (event) {\n\t\t\t\tconst controller = event.artefact;\n\t\t\t\treturn [event.point, controller, controller.handlers[key]];\n\t\t\t}\n\t\t})\n\t    .filter(v => key === '*' || !!v[2])\n\t\t.map(([point, controller, handlers]) => {\n\t\t\tlet originalArtefact = controller;\n\t\t\thandlers = (key === '*' ? {} : handlers);\n\t\t\treturn {\n\t\t\t\t...handlers,\n\t\t\t\thandlerType: key,\n\t\t\t\toriginalArtefact,\n\t\t\t\tartefact: handlers && handlers.artefact || originalArtefact,\n\t\t\t\tpoint\n\t\t\t}\n\t\t});\n}\n",
    "static": true,
    "longname": "src/Coach.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/Coach.js",
    "static": true,
    "longname": "src/Coach.js~_extends",
    "access": null,
    "export": false,
    "importPath": "boxer/src/Coach.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2,
    "kind": "variable",
    "name": "$$domEvents",
    "memberof": "src/Coach.js",
    "static": true,
    "longname": "src/Coach.js~$$domEvents",
    "access": null,
    "export": false,
    "importPath": "boxer/src/Coach.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3,
    "kind": "variable",
    "name": "$$tools",
    "memberof": "src/Coach.js",
    "static": true,
    "longname": "src/Coach.js~$$tools",
    "access": null,
    "export": false,
    "importPath": "boxer/src/Coach.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4,
    "kind": "variable",
    "name": "$$initialized",
    "memberof": "src/Coach.js",
    "static": true,
    "longname": "src/Coach.js~$$initialized",
    "access": null,
    "export": false,
    "importPath": "boxer/src/Coach.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 5,
    "kind": "class",
    "name": "Coach",
    "memberof": "src/Coach.js",
    "static": true,
    "longname": "src/Coach.js~Coach",
    "access": null,
    "export": true,
    "importPath": "boxer/src/Coach.js",
    "importStyle": "{Coach}",
    "description": "The central hub of the artefacts and tools of a boxer canvas.\nCreating one is among the first steps in using the boxer library.",
    "lineNumber": 19,
    "interface": false,
    "extends": [
      "utilities~ValueTracker"
    ]
  },
  {
    "__docId__": 6,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Coach.js~Coach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Coach.js~Coach#constructor",
    "access": null,
    "description": "Create a new `Coach` instance rooted at a specific `Canvas` artefact.",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Canvas"
        ],
        "spread": false,
        "optional": false,
        "name": "options.root",
        "description": "the canvas making up the root of our boxer svg artefact tree"
      }
    ]
  },
  {
    "__docId__": 7,
    "kind": "member",
    "name": "stateMachine",
    "memberof": "src/Coach.js~Coach",
    "static": false,
    "longname": "src/Coach.js~Coach#stateMachine",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 8,
    "kind": "member",
    "name": "root",
    "memberof": "src/Coach.js~Coach",
    "static": false,
    "longname": "src/Coach.js~Coach#root",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 9,
    "kind": "member",
    "name": "[$$domEvents]",
    "memberof": "src/Coach.js~Coach",
    "static": false,
    "longname": "src/Coach.js~Coach#[$$domEvents]",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 10,
    "kind": "method",
    "name": "addTool",
    "memberof": "src/Coach.js~Coach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Coach.js~Coach#addTool",
    "access": null,
    "description": "the main state machine toggling between `'IDLE'` and `'BUSY'`,\nused to coordinate between the local state machines of tools",
    "lineNumber": 55,
    "params": [
      {
        "name": "tool",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "type": {
      "nullable": null,
      "types": [
        "Machine"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 11,
    "kind": "member",
    "name": "[(_context = tool.constructor.name, camelCase).call(_context)]",
    "memberof": "src/Coach.js~Coach",
    "static": false,
    "longname": "src/Coach.js~Coach#[(_context = tool.constructor.name, camelCase).call(_context)]",
    "access": null,
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12,
    "kind": "member",
    "name": "[$$tools]",
    "memberof": "src/Coach.js~Coach",
    "static": false,
    "longname": "src/Coach.js~Coach#[$$tools]",
    "access": null,
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 13,
    "kind": "method",
    "name": "activateExclusiveTools",
    "memberof": "src/Coach.js~Coach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Coach.js~Coach#activateExclusiveTools",
    "access": null,
    "description": "Activate a given set of registered tools and turn off all others.",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "Iterable<Tool>"
        ],
        "spread": false,
        "optional": false,
        "name": "chosenTools",
        "description": "the tools to activate"
      }
    ]
  },
  {
    "__docId__": 14,
    "kind": "method",
    "name": "start",
    "memberof": "src/Coach.js~Coach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Coach.js~Coach#start",
    "access": null,
    "description": "Start this coach, indicating that all tools have been registered.",
    "lineNumber": 87,
    "params": []
  },
  {
    "__docId__": 15,
    "kind": "member",
    "name": "[$$initialized]",
    "memberof": "src/Coach.js~Coach",
    "static": false,
    "longname": "src/Coach.js~Coach#[$$initialized]",
    "access": null,
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 16,
    "kind": "method",
    "name": "registerArtefactEvent",
    "memberof": "src/Coach.js~Coach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Coach.js~Coach#registerArtefactEvent",
    "access": null,
    "description": "Let the coach know that it should start listening to specific types\nof DOM events on artefacts, and to provide a way to subscribe to them.\nIt uses jQuery's delegation feature, so it is relatively efficient,\nand it normalizes event objects and supplies them with additional\nquick-access data, like the mouse event coordinates as a `Point2D`.",
    "lineNumber": 106,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "events",
        "description": "a set of DOM event names, e.g., `'click'`, `'mouseover'`"
      }
    ]
  },
  {
    "__docId__": 17,
    "kind": "method",
    "name": "enrichMouseEvent",
    "memberof": "src/Coach.js~Coach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Coach.js~Coach#enrichMouseEvent",
    "access": "private",
    "description": "Enrich a mouse event object with a `Point2D` object representing\nscreen coordinates.",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "jQuery.Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "a jQuery event object"
      }
    ]
  },
  {
    "__docId__": 18,
    "kind": "method",
    "name": "rootE",
    "memberof": "src/Coach.js~Coach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Coach.js~Coach#rootE",
    "access": null,
    "description": "",
    "lineNumber": 141,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Observable} a stream of `e` events on the root canvas element"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "e",
        "description": "the type of event to get a stream of"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Observable"
      ],
      "spread": false,
      "description": "a stream of `e` events on the root canvas element"
    }
  },
  {
    "__docId__": 19,
    "kind": "method",
    "name": "windowE",
    "memberof": "src/Coach.js~Coach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Coach.js~Coach#windowE",
    "access": null,
    "description": "",
    "lineNumber": 149,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Observable} a stream of `e` events on the `window` DOM element"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "e",
        "description": "the type of event to get a stream of"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Observable"
      ],
      "spread": false,
      "description": "a stream of `e` events on the `window` DOM element"
    }
  },
  {
    "__docId__": 20,
    "kind": "method",
    "name": "documentE",
    "memberof": "src/Coach.js~Coach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Coach.js~Coach#documentE",
    "access": null,
    "description": "",
    "lineNumber": 157,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Observable} a stream of `e` events on the `document` DOM element"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "e",
        "description": "the type of event to get a stream of"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Observable"
      ],
      "spread": false,
      "description": "a stream of `e` events on the `document` DOM element"
    }
  },
  {
    "__docId__": 21,
    "kind": "method",
    "name": "e",
    "memberof": "src/Coach.js~Coach",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Coach.js~Coach#e",
    "access": null,
    "description": "",
    "lineNumber": 165,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Observable} a stream of `e` events on any artefact"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "e",
        "description": "the type of event to get a stream of"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Observable"
      ],
      "spread": false,
      "description": "a stream of `e` events on any artefact"
    }
  },
  {
    "__docId__": 22,
    "kind": "function",
    "name": "elementController",
    "memberof": "src/Coach.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Coach.js~elementController",
    "access": null,
    "export": true,
    "importPath": "boxer/src/Coach.js",
    "importStyle": "{elementController}",
    "description": "",
    "lineNumber": 175,
    "params": [
      {
        "nullable": null,
        "types": [
          "SVGElement"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "the element for which to get the controller"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SvgArtefact"
      ],
      "spread": false,
      "description": "the artefact controller in charge of a given SVG DOM element"
    }
  },
  {
    "__docId__": 23,
    "kind": "function",
    "name": "getHandler",
    "memberof": "src/Coach.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Coach.js~getHandler",
    "access": "private",
    "export": true,
    "importPath": "boxer/src/Coach.js",
    "importStyle": "{getHandler}",
    "description": null,
    "lineNumber": 186,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 24,
    "kind": "function",
    "name": "handleBoxer",
    "memberof": "src/Coach.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Coach.js~handleBoxer",
    "access": null,
    "export": true,
    "importPath": "boxer/src/Coach.js",
    "importStyle": "{handleBoxer}",
    "description": "Take an event stream and transform it into a stream of handler information\nfor only specifically requested handler types.",
    "lineNumber": 200,
    "unknown": [
      {
        "tagName": "@this",
        "tagValue": "{Observable<jQuery.Event>}"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Observable<Object>} information on relevant boxer handlers"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "the handler type we're interested in, e.g., `'clickable'`, or `'*'` for all types"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Observable<Object>"
      ],
      "spread": false,
      "description": "information on relevant boxer handlers"
    }
  },
  {
    "__docId__": 25,
    "kind": "file",
    "name": "src/artefacts/Box.js",
    "content": "import assert from 'power-assert';\nimport $      from '../libs/jquery.js';\nimport {entries, isEmpty, isArray, pull, values} from 'lodash-bound';\nimport {Observable} from '../libs/expect-rxjs.js';\n\nimport {ID_MATRIX, Point2D} from '../util/svg.js';\nimport {property, flag, definePropertiesByValue} from 'utilities';\nimport {_isNonNegative} from '../util/misc.js';\n\nimport {SvgTransformable} from './SvgTransformable.js';\nimport {BoxCorner}        from './BoxCorner.js';\nimport {MX, MY, setCTM} from '../util/svg';\nimport {BoxBorder} from './BoxBorder';\nimport {Glyph} from './Glyph';\n\nconst {max} = Math;\n\nexport const BORDER_WIDTH = 2;\nexport const MIN_MIN_SIZE = 2*max(BoxCorner.RADIUS, BORDER_WIDTH);\n\n/**\n * Representation of an interactive rectangle in svg space.\n */\nexport class Box extends SvgTransformable {\n\t\n\t@property({ isValid: _isNonNegative, initial: MIN_MIN_SIZE }) minWidth;\n\t@property({ isValid: _isNonNegative, initial: MIN_MIN_SIZE }) minHeight;\n\t\n\t@property({ isValid: _isNonNegative, initial: MIN_MIN_SIZE, transform(w) { return max(w || MIN_MIN_SIZE, this.minWidth  || MIN_MIN_SIZE) } }) width;\n\t@property({ isValid: _isNonNegative, initial: MIN_MIN_SIZE, transform(h) { return max(h || MIN_MIN_SIZE, this.minHeight || MIN_MIN_SIZE) } }) height;\n\t\n\t@property({ initial: {} }) stuckBorders; // TODO: more elegant solution\n\t\n\t\n\tgetSvgContainerFor(artefact) {\n\t\t// TODO: if still needed, move this functionality to the dropzone handler\n\t\tif (artefact instanceof BoxBorder || artefact instanceof BoxCorner) {\n\t\t\treturn this.svg.outline;\n\t\t}\n\t\t// return this.svg.content;\n\t\treturn this.svg.children;\n\t}\n\t\n\tpreCreate(options) {\n\t\tsuper.preCreate(options);\n\t\t\n\t\t/* set width/height if given */\n\t\tif (options.width)  { this.width  = options.width  }\n\t\tif (options.height) { this.height = options.height }\n\t\t\n\t\t/* keep width/height at or above minimum */\n\t\tfor (let [ minKey    ,  key    ] of [\n\t\t\t     ['minWidth' , 'width' ],\n\t\t\t     ['minHeight', 'height']\n\t\t]) {\n\t\t\tthis.p([minKey], [key])\n\t\t\t    .filter(([m, v]) => v < m)\n\t\t\t    .map   (([m, v]) => m    )\n\t\t\t    .subscribe( this.p(key) );\n\t\t}\n\t}\n\t\n\tcreate(options = {}) {\n\t\tsuper.create(options);\n\t\t\n\t\tthis.svg.outline = $.svg('<g class=\"outline\">')\n\t\t\t.css(this.constructor.inheritedProperties)\n\t\t\t.insertAfter(this.svg.children);\n\t\t\n\t\tconst handlePath = $.svg('<path>').attr({\n\t\t\trx:      BoxCorner.RADIUS,\n\t\t\try:      BoxCorner.RADIUS,\n\t\t\tstroke: 'none',\n\t\t\tfill:   'none'\n\t\t}).appendTo(this.svg.handles);\n\t\t\n\t\tconst inkPath = $.svg('<path>').attr({\n\t\t\trx:      BoxCorner.RADIUS,\n\t\t\try:      BoxCorner.RADIUS,\n\t\t\tstroke:  'transparent',\n\t\t\tfill:    'inherit'\n\t\t}).appendTo(this.svg.ink);\n\t\t\n\t\tconst overlayPath = $.svg('<path>').attr({\n\t\t\tstroke:           'inherit',\n\t\t\tstrokeWidth:      'inherit',\n\t\t\tstrokeDasharray:  'inherit',\n\t\t\tstrokeDashoffset: 'inherit',\n\t\t\tfill:             'transparent',\n\t\t}).appendTo(this.svg.overlay);\n\t\t\n\t\t/* borders */\n\t\tthis.borders = {};\n\t\tfor (let [key, x, y] of [\n\t\t\t['top',    0, -1],\n\t\t\t['right', +1,  0],\n\t\t\t['bottom', 0, +1],\n\t\t\t['left',  -1,  0]\n\t\t]) {\n\t\t\tthis.borders[key] = new BoxBorder({\n\t\t\t\tparent: this,\n\t\t\t\tlengthen1: -BoxCorner.RADIUS,\n\t\t\t\tlengthen2: -BoxCorner.RADIUS,\n\t\t\t\tside:      {key, x, y}\n\t\t\t});\n\t\t\tthis.borders[key].registerHandlers({\n\t\t\t\tresizable: {\n\t\t\t\t\tartefact: this,\n\t\t\t\t\tdirections: {x, y},\n\t\t\t\t\tbefore: () => { this.handlesActive = false },\n\t\t\t\t\tafter:  () => { this.handlesActive = true  }\n\t\t\t\t},\n\t\t\t\thighlightable: {\n\t\t\t\t\tartefact: this,\n\t\t\t\t\teffect: {\n\t\t\t\t\t\telements: this.borders[key].svg.overlay\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdropzone: {\n\t\t\t\t\tartefact: this.borders[key],\n\t\t\t\t\tafter: ({artefact}) => {\n\t\t\t\t\t\tif (artefact instanceof Box) {\n\t\t\t\t\t\t\t// TODO: finish this (mirror the LyphBox.js version)\n\t\t\t\t\t\t} else if (artefact instanceof Glyph) {\n\t\t\t\t\t\t\tartefact.parent = this.borders[key]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\t/* corners */\n\t\tthis.corners = {};\n\t\tfor (let [key, x, y, s1, s2] of [\n\t\t\t['tl', -1, -1, 'top',    'left' ],\n\t\t\t['tr', +1, -1, 'top',    'right'],\n\t\t\t['bl', -1, +1, 'bottom', 'left' ],\n\t\t\t['br', +1, +1, 'bottom', 'right']\n\t\t]) {\n\t\t\tthis.corners[key] = new BoxCorner({\n\t\t\t\tparent: this\n\t\t\t});\n\t\t\tthis.corners[key].registerHandlers({\n\t\t\t\tresizable: {\n\t\t\t\t\tartefact: this,\n\t\t\t\t\tdirections: {x, y},\n\t\t\t\t\tbefore: () => { this.handlesActive = false },\n\t\t\t\t\tafter:  () => { this.handlesActive = true  }\n\t\t\t\t},\n\t\t\t\thighlightable: {\n\t\t\t\t\tartefact: this,\n\t\t\t\t\teffect: {\n\t\t\t\t\t\telements: this.corners[key].svg.overlay\n\t\t\t\t\t\t\t  .add(this.borders[s1].svg.overlay)\n\t\t\t\t\t\t\t  .add(this.borders[s2].svg.overlay)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\t/* better corner accessibility */\n\t\tthis.corners::definePropertiesByValue({\n\t\t\ttop:    { left: this.corners.tl, right:  this.corners.tr },\n\t\t\tright:  { top:  this.corners.tr, bottom: this.corners.br },\n\t\t\tbottom: { left: this.corners.bl, right:  this.corners.br },\n\t\t\tleft:   { top:  this.corners.tl, bottom: this.corners.bl }\n\t\t});\n\t\t\n\t\t/* bookkeeping */\n\t\tlet cornerPoints = {\n\t\t\ttl: { x: -1, y: -1, r:   0 },\n\t\t\ttr: { x: +1, y: -1, r:  90 },\n\t\t\tbr: { x: +1, y: +1, r: 180 },\n\t\t\tbl: { x: -1, y: +1, r: 270 },\n\t\t};\n\t\tlet borderPoints = {\n\t\t\ttop:    [cornerPoints.tl, cornerPoints.tr],\n\t\t\tright:  [cornerPoints.tr, cornerPoints.br],\n\t\t\tbottom: [cornerPoints.br, cornerPoints.bl],\n\t\t\tleft:   [cornerPoints.bl, cornerPoints.tl]\n\t\t};\n\t\t\n\t\t/* keep outline updated */\n\t\tObservable.combineLatest(\n\t\t\tthis.p('width'),\n\t\t\tthis.p('height'),\n\t\t\tthis.corners.tr.p('rounded'),\n\t\t\tthis.corners.br.p('rounded'),\n\t\t\tthis.corners.bl.p('rounded'),\n\t\t\tthis.corners.tl.p('rounded')\n\t\t).subscribe(([w, h]) => {\n\t\t\t/* place the four corners */\n\t\t\tfor (let [key, cp] of cornerPoints::entries()) {\n\t\t\t\tcp.p = new Point2D({\n\t\t\t\t\tx:                cp.x * w / 2,\n\t\t\t\t\ty:                cp.y * h / 2,\n\t\t\t\t\tcoordinateSystem: this.svg.outline\n\t\t\t\t});\n\t\t\t\tthis.corners[key].transformation = ID_MATRIX.translate(...cp.p.xy).rotate(cp.r);\n\t\t\t}\n\t\t\t/* place the borders */\n\t\t\tfor (let [key, [{p:p1}, {p:p2}]] of borderPoints::entries()) {\n\t\t\t\tthis.borders[key].point1 = p1.in(this.svg.outline);\n\t\t\t\tthis.borders[key].point2 = p2.in(this.svg.outline);\n\t\t\t}\n\t\t\t\n\t\t\t/* generate outline */\n\t\t\tconst top1    = this.borders.top   .inkPoint1;\n\t\t\tconst top2    = this.borders.top   .inkPoint2;\n\t\t\tconst right1  = this.borders.right .inkPoint1;\n\t\t\tconst right2  = this.borders.right .inkPoint2;\n\t\t\tconst bottom1 = this.borders.bottom.inkPoint1;\n\t\t\tconst bottom2 = this.borders.bottom.inkPoint2;\n\t\t\tconst left1   = this.borders.left  .inkPoint1;\n\t\t\tconst left2   = this.borders.left  .inkPoint2;\n\t\t\tconst cornerPath = (key) => {\n\t\t\t\tconst c = this.corners[key];\n\t\t\t\tconst s = BoxCorner.RADIUS;\n\t\t\t\tconst {x, y} = cornerPoints[key];\n\t\t\t\tif (c.rounded) {\n\t\t\t\t\treturn `A ${s} ${s}, 0, 0, 0,`;\n\t\t\t\t} else {\n\t\t\t\t\tif (x*y === -1) { return `v ${y*s} L` }\n\t\t\t\t\telse            { return `h ${x*s} L` }\n\t\t\t\t}\n\t\t\t};\n\t\t\t$().add(inkPath)\n\t\t\t   .add(handlePath)\n\t\t\t   .add(overlayPath).attr({\n\t\t\t\td: `M\n\t\t\t\t\t${left1.xy}   L ${left2.xy}   ${cornerPath('bl')}\n\t\t\t\t\t${bottom1.xy} L ${bottom2.xy} ${cornerPath('br')}\n\t\t\t\t\t${right1.xy}  L ${right2.xy}  ${cornerPath('tr')}\n\t\t\t\t\t${top1.xy}    L ${top2.xy}    ${cornerPath('tl')}\n\t\t\t\t\t${left1.xy}\n\t\t\t\tZ`\n\t\t\t});\n\t\t});\n\t\t\n\t\t/* when parent changes, 'unstuck' all borders */\n\t\tthis.p('parent').subscribe(() => {\n\t\t\tthis.stuckBorders = {};\n\t\t});\n\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t// this.p('stuckBorders').switchMap((stb) => {\n\t\t//\n\t\t// \tconsole.log('----', stb);\n\t\t//\n\t\t// \tif (!stb.left && !stb.right && !stb.top && !stb.bottom) {\n\t\t// \t\treturn Observable.never();\n\t\t// \t}\n\t\t//\n\t\t// \tlet streams = {};\n\t\t//\n\t\t// \tfor (let side of ['left', 'right']) {\n\t\t// \t\tif (stb[side]) {\n\t\t// \t\t\tconst {box, relation, x} = stb[side];\n\t\t// \t\t\tif (relation === 'parent') {\n\t\t// \t\t\t\tstreams[side] = box.p('width').map(w => x * w/2);\n\t\t// \t\t\t} else { // sibling\n\t\t// \t\t\t\tstreams[side] = box.p(['width', 'transformation']).map(([w, t]) => t[MX] - x * w/2);\n\t\t// \t\t\t}\n\t\t// \t\t} else {\n\t\t// \t\t\tstreams[side] = Observable.of(null);\n\t\t// \t\t}\n\t\t// \t}\n\t\t//\n\t\t//\n\t\t//\n\t\t// \t// TODO: top, bottom\n\t\t//\n\t\t//\n\t\t//\n\t\t// \tconst thisWX = this.p(['width', 'transformation']).map(([w, t]) => [w, t[MX]]);\n\t\t// \tconst thisL  = thisWX.map(([w, x]) => x - w/2);\n\t\t// \tconst thisR  = thisWX.map(([w, x]) => x + w/2);\n\t\t// \treturn Observable\n\t\t// \t\t.combineLatest(streams.left, streams.right)\n\t\t// \t\t.withLatestFrom(thisL, thisR, ([l, r], tl, tr) => {\n\t\t// \t\t\tconsole.log(l, r, tl, tr);\n\t\t// \t\t\tif (l === null) { l = tl }\n\t\t// \t\t\tif (r === null) { r = tr }\n\t\t// \t\t\treturn {\n\t\t// \t\t\t\tx:    (l + r) / 2,\n\t\t// \t\t\t\twidth: r - l\n\t\t// \t\t\t};\n\t\t// \t\t});\n\t\t// }).subscribe(({x, width}) => {\n\t\t// \tconsole.log(x, width);\n\t\t// \tthis.transformation = ID_MATRIX.translate(x, this.transformation[MY]);\n\t\t// \tthis.width = w;\n\t\t// });\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t/* react to parent resizing when stuck to border */\n\t\tthis.p(['width', 'height', 'parent.width', 'parent.height', 'stuckBorders']).subscribe(([w, h, pw, ph, stb]) => {\n\t\t\tstb = [...stb::values()];\n\t\t\tif (!stb || stb.length === 0) { return }\n\t\t\tconst stX = [...new Set(stb.map(({x}) => x))];\n\t\t\tconst stY = [...new Set(stb.map(({y}) => y))];\n\t\t\tif (stX.length > 1) { stX::pull(0) }\n\t\t\tif (stY.length > 1) { stY::pull(0) }\n\t\t\tif (stX.length === 2) { w = pw }\n\t\t\tif (stY.length === 2) { h = ph }\n\t\t\tconst [x, y] = [stX[0], stY[0]];\n\t\t\tconst oldX = this.transformation[MX];\n\t\t\tconst oldY = this.transformation[MY];\n\t\t\tthis.transformation = ID_MATRIX.translate(!x * oldX + x*(pw-w)/2, !y * oldY + y*(ph-h)/2).rotate(0);  // TODO\n\t\t\tthis.width  = w;\n\t\t\tthis.height = h;\n\t\t});\n\t\t\n\t\t/* when stuck to borders, deactivate the appropriate outline handles */\n\t\tthis.p('stuckBorders').subscribe((stb) => {\n\t\t\t// borders\n\t\t\tthis.borders.left.handlesActive   = !stb.left;\n\t\t\tthis.borders.right.handlesActive  = !stb.right;\n\t\t\tthis.borders.top.handlesActive    = !stb.top;\n\t\t\tthis.borders.bottom.handlesActive = !stb.bottom;\n\t\t\t// corners\n\t\t\tthis.corners.tl.handlesActive = !stb.top    && !stb.left;\n\t\t\tthis.corners.tr.handlesActive = !stb.top    && !stb.right;\n\t\t\tthis.corners.bl.handlesActive = !stb.bottom && !stb.left;\n\t\t\tthis.corners.br.handlesActive = !stb.bottom && !stb.right;\n\t\t});\n\t\t\n\t}\n\t\n\tpostCreate(options = {}) {\n\t\t/* set standard handlers */\n\t\tthis.registerHandlers({\n\t\t\tmovable:   {\n\t\t\t\tartefact: this,\n\t\t\t\tafter: () => {\n\t\t\t\t\t/* when dropped, reapply relevant border stucknesses */\n\t\t\t\t\tthis.stuckBorders = {...this.stuckBorders};\n\t\t\t\t}\n\t\t\t},\n\t\t\trotatable: {\n\t\t\t\tartefact: this,\n\t\t\t\tafter: () => {\n\t\t\t\t\t/* after rotating, reapply relevant border stucknesses */\n\t\t\t\t\t//  which, if present, would undo rotation\n\t\t\t\t\tthis.stuckBorders = {...this.stuckBorders};\n\t\t\t\t\t// TODO: simply disallow rotation when stuck\n\t\t\t\t}\n\t\t\t},\n\t\t\tdropzone:  {\n\t\t\t\tartefact: this,\n\t\t\t\tafter: ({artefact}) => {\n\t\t\t\t\tartefact.parent = this;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdrawzone: {\n\t\t\t\tartefact: this,\n\t\t\t\taccepts({ artefact }) {\n\t\t\t\t\treturn artefact instanceof SvgTransformable;\n\t\t\t\t}\n\t\t\t},\n\t\t\thighlightable: {\n\t\t\t\tartefact: this,\n\t\t\t\teffect: { elements: this.svg.overlay }\n\t\t\t},\n\t\t\tdeletable: {\n\t\t\t\tartefact: this\n\t\t\t}\n\t\t});\n\t\t\n\t\t/***/\n\t\tsuper.postCreate(options);\n\t}\n\t\n}\n",
    "static": true,
    "longname": "src/artefacts/Box.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 26,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/artefacts/Box.js",
    "static": true,
    "longname": "src/artefacts/Box.js~_extends",
    "access": null,
    "export": false,
    "importPath": "boxer/src/artefacts/Box.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 27,
    "kind": "variable",
    "name": "max",
    "memberof": "src/artefacts/Box.js",
    "static": true,
    "longname": "src/artefacts/Box.js~max",
    "access": null,
    "export": false,
    "importPath": "boxer/src/artefacts/Box.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 28,
    "kind": "variable",
    "name": "BORDER_WIDTH",
    "memberof": "src/artefacts/Box.js",
    "static": true,
    "longname": "src/artefacts/Box.js~BORDER_WIDTH",
    "access": null,
    "export": true,
    "importPath": "boxer/src/artefacts/Box.js",
    "importStyle": "{BORDER_WIDTH}",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 29,
    "kind": "variable",
    "name": "MIN_MIN_SIZE",
    "memberof": "src/artefacts/Box.js",
    "static": true,
    "longname": "src/artefacts/Box.js~MIN_MIN_SIZE",
    "access": null,
    "export": true,
    "importPath": "boxer/src/artefacts/Box.js",
    "importStyle": "{MIN_MIN_SIZE}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 30,
    "kind": "class",
    "name": "Box",
    "memberof": "src/artefacts/Box.js",
    "static": true,
    "longname": "src/artefacts/Box.js~Box",
    "access": null,
    "export": true,
    "importPath": "boxer/src/artefacts/Box.js",
    "importStyle": "{Box}",
    "description": "Representation of an interactive rectangle in svg space.",
    "lineNumber": 26,
    "interface": false,
    "extends": [
      "src/artefacts/SvgTransformable.js~SvgTransformable"
    ]
  },
  {
    "__docId__": 31,
    "kind": "method",
    "name": "getSvgContainerFor",
    "memberof": "src/artefacts/Box.js~Box",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/Box.js~Box#getSvgContainerFor",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "artefact",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 32,
    "kind": "method",
    "name": "preCreate",
    "memberof": "src/artefacts/Box.js~Box",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/Box.js~Box#preCreate",
    "access": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 33,
    "kind": "member",
    "name": "width",
    "memberof": "src/artefacts/Box.js~Box",
    "static": false,
    "longname": "src/artefacts/Box.js~Box#width",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 34,
    "kind": "member",
    "name": "height",
    "memberof": "src/artefacts/Box.js~Box",
    "static": false,
    "longname": "src/artefacts/Box.js~Box#height",
    "access": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 35,
    "kind": "method",
    "name": "create",
    "memberof": "src/artefacts/Box.js~Box",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/Box.js~Box#create",
    "access": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 36,
    "kind": "member",
    "name": "borders",
    "memberof": "src/artefacts/Box.js~Box",
    "static": false,
    "longname": "src/artefacts/Box.js~Box#borders",
    "access": null,
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 37,
    "kind": "member",
    "name": "handlesActive",
    "memberof": "src/artefacts/Box.js~Box",
    "static": false,
    "longname": "src/artefacts/Box.js~Box#handlesActive",
    "access": null,
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 38,
    "kind": "member",
    "name": "handlesActive",
    "memberof": "src/artefacts/Box.js~Box",
    "static": false,
    "longname": "src/artefacts/Box.js~Box#handlesActive",
    "access": null,
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 39,
    "kind": "member",
    "name": "corners",
    "memberof": "src/artefacts/Box.js~Box",
    "static": false,
    "longname": "src/artefacts/Box.js~Box#corners",
    "access": null,
    "description": null,
    "lineNumber": 125,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 40,
    "kind": "member",
    "name": "handlesActive",
    "memberof": "src/artefacts/Box.js~Box",
    "static": false,
    "longname": "src/artefacts/Box.js~Box#handlesActive",
    "access": null,
    "description": null,
    "lineNumber": 135,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 41,
    "kind": "member",
    "name": "handlesActive",
    "memberof": "src/artefacts/Box.js~Box",
    "static": false,
    "longname": "src/artefacts/Box.js~Box#handlesActive",
    "access": null,
    "description": null,
    "lineNumber": 138,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 42,
    "kind": "member",
    "name": "stuckBorders",
    "memberof": "src/artefacts/Box.js~Box",
    "static": false,
    "longname": "src/artefacts/Box.js~Box#stuckBorders",
    "access": null,
    "description": null,
    "lineNumber": 225,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 43,
    "kind": "member",
    "name": "transformation",
    "memberof": "src/artefacts/Box.js~Box",
    "static": false,
    "longname": "src/artefacts/Box.js~Box#transformation",
    "access": null,
    "description": null,
    "lineNumber": 303,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 44,
    "kind": "member",
    "name": "width",
    "memberof": "src/artefacts/Box.js~Box",
    "static": false,
    "longname": "src/artefacts/Box.js~Box#width",
    "access": null,
    "description": null,
    "lineNumber": 304,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 45,
    "kind": "member",
    "name": "height",
    "memberof": "src/artefacts/Box.js~Box",
    "static": false,
    "longname": "src/artefacts/Box.js~Box#height",
    "access": null,
    "description": null,
    "lineNumber": 305,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 46,
    "kind": "method",
    "name": "postCreate",
    "memberof": "src/artefacts/Box.js~Box",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/Box.js~Box#postCreate",
    "access": null,
    "description": null,
    "lineNumber": 323,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 47,
    "kind": "member",
    "name": "stuckBorders",
    "memberof": "src/artefacts/Box.js~Box",
    "static": false,
    "longname": "src/artefacts/Box.js~Box#stuckBorders",
    "access": null,
    "description": null,
    "lineNumber": 330,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 48,
    "kind": "member",
    "name": "stuckBorders",
    "memberof": "src/artefacts/Box.js~Box",
    "static": false,
    "longname": "src/artefacts/Box.js~Box#stuckBorders",
    "access": null,
    "description": null,
    "lineNumber": 338,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 49,
    "kind": "file",
    "name": "src/artefacts/BoxBorder.js",
    "content": "import assert from 'power-assert';\nimport $      from '../libs/jquery.js';\nimport {isBoolean as _isBoolean} from 'lodash';\nimport {entries, values, isUndefined} from 'lodash-bound';\n\nimport {ID_MATRIX, SVGMatrix, setCTM, Point2D} from '../util/svg.js';\nimport {property, flag} from 'utilities';\n\n\nimport {LineSegment} from './LineSegment.js';\n\n/**\n * Representation of a Box border.\n */\nexport class BoxBorder extends LineSegment {\n\t\n\tside: ?{key: 'top',    x:  0, y: -1}\n\t\t | {key: 'bottom', x:  0, y:  1}\n\t\t | {key: 'left',   x: -1, y:  0}\n\t\t | {key: 'right',  x:  1, y:  0};\n\t\n\tconstructor(...args) {\n\t\tsuper(...args);\n\t\tthis.side = args.side;\n\t}\n\t\n}\n",
    "static": true,
    "longname": "src/artefacts/BoxBorder.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 50,
    "kind": "class",
    "name": "BoxBorder",
    "memberof": "src/artefacts/BoxBorder.js",
    "static": true,
    "longname": "src/artefacts/BoxBorder.js~BoxBorder",
    "access": null,
    "export": true,
    "importPath": "boxer/src/artefacts/BoxBorder.js",
    "importStyle": "{BoxBorder}",
    "description": "Representation of a Box border.",
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "src/artefacts/LineSegment.js~LineSegment"
    ]
  },
  {
    "__docId__": 51,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/artefacts/BoxBorder.js~BoxBorder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/BoxBorder.js~BoxBorder#constructor",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ]
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "side",
    "memberof": "src/artefacts/BoxBorder.js~BoxBorder",
    "static": false,
    "longname": "src/artefacts/BoxBorder.js~BoxBorder#side",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "file",
    "name": "src/artefacts/BoxCorner.js",
    "content": "import assert from 'power-assert';\nimport $      from '../libs/jquery.js';\nimport {isBoolean as _isBoolean} from 'lodash';\nimport {entries, values, isUndefined} from 'lodash-bound';\n\nimport {ID_MATRIX, SVGMatrix, setCTM, Point2D} from '../util/svg.js';\nimport {property, flag} from 'utilities';\n\n\nimport {SvgTransformable} from './SvgTransformable.js';\n\n/**\n * Representation of a Box corner.\n */\nexport class BoxCorner extends SvgTransformable {\n\t\n\tstatic RADIUS = 15;\n\t\n\t@flag({ initial: false }) rounded;\n\n\tpreCreate(options) {\n\t\tsuper.preCreate(options);\n\t\t\n\t\t/* set properties if given */\n\t\tif (!options.rounded::isUndefined()) { this.rounded = options.rounded }\n\t}\n\t\n\tcreate(options = {}) {\n\t\tsuper.create(options);\n\t\t\n\t\tconst handlePath = $.svg(`<path>`).css({\n\t\t\tstrokeWidth: 'inherit',\n\t\t}).appendTo(this.svg.handles);\n\t\t\n\t\tconst inkPath = $.svg(`<path>`).css({\n\t\t\tfill:             'transparent',\n\t\t\tstroke:           'inherit',\n\t\t\tstrokeWidth:      'inherit',\n\t\t\tstrokeDasharray:  'inherit',\n\t\t\tstrokeDashoffset: 'inherit'\n\t\t}).appendTo(this.svg.ink);\n\t\t\n\t\tconst overlayFillPath = $.svg(`<path>`).css({\n\t\t\tfill:            'inherit',\n\t\t\tstroke:          'black',\n\t\t\tstrokeDasharray: 'none'\n\t\t}).appendTo(this.svg.overlay);\n\t\t\n\t\tconst overlayStrokePath = $.svg(`<path>`).css({\n\t\t\tfill:             'transparent',\n\t\t\tstroke:           'inherit',\n\t\t\tstrokeWidth:      'inherit',\n\t\t\tstrokeDasharray:  'inherit',\n\t\t\tstrokeDashoffset: 'inherit'\n\t\t}).appendTo(this.svg.overlay);\n\t\t\n\t\t/* react to resizing and roundedness-toggling */\n\t\tconst s = BoxCorner.RADIUS;\n\t\tconst rightAngle  = `L 0 0 L`;\n\t\tconst arcAngle    = `A ${s} ${s}, 0, 0, 0,`;\n\t\tconst bl          = `0 ${s}`;\n\t\tconst tr          = `${s} 0`;\n\t\tconst outerCorner = r => `M ${tr} ${r ? arcAngle : rightAngle} ${bl}`;\n\t\tconst innerCorner = `M ${tr} L ${bl}`;\n\t\tthis.p('rounded').subscribe((r) => {\n\t\t\thandlePath       .attr({ d: outerCorner(0)       });\n\t\t\tinkPath          .attr({ d: outerCorner(r)       });\n\t\t\toverlayFillPath  .attr({ d: outerCorner(r) + 'Z' });\n\t\t\toverlayStrokePath.attr({ d: innerCorner          });\n\t\t});\n\t\t\n\t}\n\t\n\tpostCreate(options = {}) {\n\t\tsuper.postCreate(options);\n\t\t\n\t\tsetTimeout(() => {\n\t\t\t/* set the stroke-width of part of the overlay based on part of the ink */\n\t\t\tconst source = this.svg.ink    .children('[style*=\"stroke: inherit\"]');\n\t\t\tconst target = this.svg.overlay.children('[style*=\"stroke: black\"]');\n\t\t\ttarget.css({ strokeWidth: getComputedStyle(source[0])['stroke-width'] });\n\t\t});\n\t}\n\t\n}\n",
    "static": true,
    "longname": "src/artefacts/BoxCorner.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 54,
    "kind": "class",
    "name": "BoxCorner",
    "memberof": "src/artefacts/BoxCorner.js",
    "static": true,
    "longname": "src/artefacts/BoxCorner.js~BoxCorner",
    "access": null,
    "export": true,
    "importPath": "boxer/src/artefacts/BoxCorner.js",
    "importStyle": "{BoxCorner}",
    "description": "Representation of a Box corner.",
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "src/artefacts/SvgTransformable.js~SvgTransformable"
    ]
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "preCreate",
    "memberof": "src/artefacts/BoxCorner.js~BoxCorner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/BoxCorner.js~BoxCorner#preCreate",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "rounded",
    "memberof": "src/artefacts/BoxCorner.js~BoxCorner",
    "static": false,
    "longname": "src/artefacts/BoxCorner.js~BoxCorner#rounded",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "create",
    "memberof": "src/artefacts/BoxCorner.js~BoxCorner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/BoxCorner.js~BoxCorner#create",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 58,
    "kind": "method",
    "name": "postCreate",
    "memberof": "src/artefacts/BoxCorner.js~BoxCorner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/BoxCorner.js~BoxCorner#postCreate",
    "access": null,
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "src/artefacts/Canvas.js",
    "content": "import {SvgArtefact} from './SvgArtefact.js';\nimport {SvgTransformable} from './SvgTransformable';\nimport {property} from 'utilities';\nimport {ID_MATRIX, setCTM} from '../util/svg';\n\n/**\n * Representation of an svg canvas used to house boxer artefacts.\n */\nexport class Canvas extends SvgArtefact {\n\t\n\t@property({ initial: ID_MATRIX, isValid: v => v instanceof SVGMatrix }) transformation;\n\t@property({ initial: ID_MATRIX, isValid: v => v instanceof SVGMatrix }) globalTransformation;\n\t\n\tpreCreate(options = {}) {\n\t\tsuper.preCreate(options);\n\t\t\n\t\t/* set transformation if given */\n\t\tif (options.transformation) { this.transformation = options.transformation }\n\t\t\n\t\t/* apply canvas transformation (zooming, panning, etc.) */\n\t\tthis.p('transformation').subscribe( this.svg.children::setCTM );\n\t\t\n\t\t/* keep track of the global transformation */\n\t\tthis.p('transformation').subscribe(this.p('globalTransformation'));\n\t}\n\t\n\tpostCreate(options = {}) {\n\t\t\n\t\t/* register canvas handlers */\n\t\tthis.registerHandlers({\n\t\t\tdropzone:  {\n\t\t\t\tartefact: this,\n\t\t\t\taccepts: () => true,\n\t\t\t\tafter: ({artefact}) => {\n\t\t\t\t\tartefact.parent = this;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdrawzone: {\n\t\t\t\tartefact: this,\n\t\t\t\taccepts({ artefact }) {\n\t\t\t\t\treturn artefact instanceof SvgTransformable;\n\t\t\t\t}\n\t\t\t},\n\t\t\tpannable: {\n\t\t\t\tartefact: this\n\t\t\t}\n\t\t});\n\t\tsuper.postCreate(options);\n\t}\n\t\n\tregisterHandlers(handlers: Object = {}) {\n\t\t// Canvas is special: its handler element is this.svg.main\n\t\tsuper.registerHandlers(handlers);\n\t\tthis.svg.main.data('boxer-handlers', this.handlers);\n\t}\n\t\n}\n",
    "static": true,
    "longname": "src/artefacts/Canvas.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "class",
    "name": "Canvas",
    "memberof": "src/artefacts/Canvas.js",
    "static": true,
    "longname": "src/artefacts/Canvas.js~Canvas",
    "access": null,
    "export": true,
    "importPath": "boxer/src/artefacts/Canvas.js",
    "importStyle": "{Canvas}",
    "description": "Representation of an svg canvas used to house boxer artefacts.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/artefacts/SvgArtefact.js~SvgArtefact"
    ]
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "preCreate",
    "memberof": "src/artefacts/Canvas.js~Canvas",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/Canvas.js~Canvas#preCreate",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "transformation",
    "memberof": "src/artefacts/Canvas.js~Canvas",
    "static": false,
    "longname": "src/artefacts/Canvas.js~Canvas#transformation",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "postCreate",
    "memberof": "src/artefacts/Canvas.js~Canvas",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/Canvas.js~Canvas#postCreate",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "registerHandlers",
    "memberof": "src/artefacts/Canvas.js~Canvas",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/Canvas.js~Canvas#registerHandlers",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "handlers",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 65,
    "kind": "file",
    "name": "src/artefacts/Edge.js",
    "content": "import assert from 'power-assert';\nimport $      from '../libs/jquery.js';\nimport {Observable} from '../libs/expect-rxjs.js';\n\nimport {isEmpty, isUndefined} from 'lodash-bound';\n\nimport {Point2D} from '../util/svg.js';\nimport {property} from 'utilities';\n\nimport {LineSegment} from './LineSegment.js';\nimport {Glyph}       from './Glyph.js';\nimport {moveToFront} from '../util/svg';\nimport {smartMerge} from '../Coach';\n\n\n/**\n * Representation of an interactive edge in svg space, spanning between two glyphs.\n */\nexport class Edge extends LineSegment {\n\t\n\t@property({ isValid: v => v instanceof Glyph }) glyph1;\n\t@property({ isValid: v => v instanceof Glyph }) glyph2;\n\t\n\tpreCreate(options = {}) {\n\t\tsuper.preCreate({\n\t\t\t// lengthen1: -Glyph.RADIUS,\n\t\t\t// lengthen2: -Glyph.RADIUS,\n\t\t\t...options\n\t\t});\n\t\t\n\t\t/* initializing glyphs */\n\t\tfor (let g of [1, 2]) {\n\t\t\t// assert(options[`glyph${g}`]);\n\t\t\tthis[`glyph${g}`] = options[`glyph${g}`];\n\t\t}\n\t\t\n\t\t/* re-parenting this Edge when either of the glyphs re-parent */\n\t\tthis.p(['glyph1', 'glyph2']).filter(([g1, g2]) => g1 && g2).switchMap(([g1, g2]) => Observable.combineLatest(\n\t\t\tg1.p('depth').filter(d => !d::isUndefined() && !g1.deleted),\n\t\t\tg2.p('depth').filter(d => !d::isUndefined() && !g2.deleted)\n\t\t).map(() => g1.closestCommonAncestorWith(g2))).subscribe( this.p('parent') );\n\t\t\n\t\t/* moving the line segment when the glyphs move */\n\t\tfor (let g of [1, 2]) {\n\t\t\tthis.p([`glyph${g}.globalTransformation`], ['root'])\n\t\t\t    .map(([gt, root]) => Point2D.fromMatrixTranslation(gt, root.svg.main))\n\t\t\t    .subscribe( this.p(`point${g}`) );\n\t\t}\n\t\t\n\t\t/* lengthen/shorten the line segment when the glyph radii change */\n\t\tfor (let g of [1, 2]) {\n\t\t\tthis.p(`glyph${g}.radius`)\n\t\t\t    .map(r => -r)\n\t\t\t    .subscribe( this.p(`lengthen${g}`) );\n\t\t}\n\t\t\n\t\t/* propagate moveToFront  */\n\t\tconst thisArtefact = this;\n\t\tfunction direction(d)    { return this.filter(({direction}) => (direction === d))   }\n\t\tfunction doNotTurnBack() { return this.filter(info => info.source !== thisArtefact) }\n\t\tfor (let g of [1, 2]) {\n\t\t\tthis.e(`glyph${g}.moveToFront`)\n\t\t\t\t::doNotTurnBack()\n\t\t\t\t.subscribe((info) => { this.e('moveToFront').next({ ...info, direction: 'in' }) });\n\t\t}\n\t\t// As a special exception for Edge, inward moveToFront also brings svg to front.\n\t\t// Outward moveToFront already does this (see SvgArtefact.js)\n\t\tthis.e('moveToFront')\n\t\t\t::direction('in')\n\t\t\t.subscribe(this.svg.main::moveToFront);\n\t}\n\t\n\tcreate(options = {}) {\n\t\tsuper.create(options);\n\t\t\n\t\t\n\t\tconst inkLineOutline = $.svg('<line>').css({\n\t\t\tstroke:           'black',\n\t\t\tstrokeWidth:      '4'\n\t\t}).prependTo(this.svg.ink);\n\t\t\n\t\tthis.p(['parent', 'point1', 'point2', 'lengthen1', 'lengthen2'])\n\t\t    .filter(([parent, p1, p2]) => parent && p1 && p2)\n\t\t    .subscribe(([parent, p1, p2, l1, l2]) => {\n\t\t\t\tp1 = p1.in(parent.svg.children);\n\t\t\t\tp2 = p2.in(parent.svg.children);\n\t\t\t\t$(inkLineOutline).attr({\n\t\t\t\t\t...p1.withDistanceTo(-l2, p2).obj('x1', 'y1'),\n\t\t\t\t\t...p2.withDistanceTo(-l1, p1).obj('x2', 'y2')\n\t\t\t\t});\n\t\t\t});\n\t\t\n\t}\n\t\n\tpostCreate(options = {}) {\n\t\t\n\t\t/* set standard handlers */\n\t\tthis.registerHandlers({\n\t\t\thighlightable: {\n\t\t\t\tartefact: this,\n\t\t\t\teffect: { elements: this.svg.overlay }\n\t\t\t},\n\t\t\tdeletable: {\n\t\t\t\tartefact: this\n\t\t\t}\n\t\t});\n\t\t\n\t\t/* delete this when either glyph is deleted */\n\t\tObservable.merge(\n\t\t\tthis.p('glyph1.deleted').filter(d=>!!d),\n\t\t\tthis.p('glyph2.deleted').filter(d=>!!d)\n\t\t).take(1).subscribe( this.p('deleted') );\n\t\t\n\t\t/* set glyph handlers */\n\t\tconst handlers = {\n\t\t\tmovable: {\n\t\t\t\tbefore: () => { this.handlesActive = false },\n\t\t\t\tafter:  () => { this.handlesActive = true  }\n\t\t\t}\n\t\t};\n\t\tthis.p('glyph1').filter(g=>!!g).subscribe((glyph1) => { glyph1.registerHandlers(handlers) });\n\t\tthis.p('glyph2').filter(g=>!!g).subscribe((glyph2) => { glyph2.registerHandlers(handlers) });\n\t\t// this.glyph2.registerHandlers(handlers);\n\t\t\n\t\t/***/\n\t\tsuper.postCreate(options);\n\t}\n\t\n}\n",
    "static": true,
    "longname": "src/artefacts/Edge.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 66,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/artefacts/Edge.js",
    "static": true,
    "longname": "src/artefacts/Edge.js~_extends",
    "access": null,
    "export": false,
    "importPath": "boxer/src/artefacts/Edge.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "class",
    "name": "Edge",
    "memberof": "src/artefacts/Edge.js",
    "static": true,
    "longname": "src/artefacts/Edge.js~Edge",
    "access": null,
    "export": true,
    "importPath": "boxer/src/artefacts/Edge.js",
    "importStyle": "{Edge}",
    "description": "Representation of an interactive edge in svg space, spanning between two glyphs.",
    "lineNumber": 20,
    "interface": false,
    "extends": [
      "src/artefacts/LineSegment.js~LineSegment"
    ]
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "preCreate",
    "memberof": "src/artefacts/Edge.js~Edge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/Edge.js~Edge#preCreate",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 69,
    "kind": "member",
    "name": "[`glyph${ g }`]",
    "memberof": "src/artefacts/Edge.js~Edge",
    "static": false,
    "longname": "src/artefacts/Edge.js~Edge#[`glyph${ g }`]",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "create",
    "memberof": "src/artefacts/Edge.js~Edge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/Edge.js~Edge#create",
    "access": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "postCreate",
    "memberof": "src/artefacts/Edge.js~Edge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/Edge.js~Edge#postCreate",
    "access": null,
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "handlesActive",
    "memberof": "src/artefacts/Edge.js~Edge",
    "static": false,
    "longname": "src/artefacts/Edge.js~Edge#handlesActive",
    "access": null,
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "member",
    "name": "handlesActive",
    "memberof": "src/artefacts/Edge.js~Edge",
    "static": false,
    "longname": "src/artefacts/Edge.js~Edge#handlesActive",
    "access": null,
    "description": null,
    "lineNumber": 104,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "file",
    "name": "src/artefacts/Glyph.js",
    "content": "import assert from 'power-assert';\nimport $      from '../libs/jquery.js';\nimport {isBoolean as _isBoolean} from 'lodash';\nimport {entries, values, isUndefined, isEmpty} from 'lodash-bound';\n\nimport {ID_MATRIX, SVGMatrix, setCTM, Point2D} from '../util/svg.js';\nimport {property} from 'utilities';\n\n\nimport {SvgTransformable} from './SvgTransformable.js';\n\n/**\n * Representation of an interactive glyph in svg space.\n */\nexport class Glyph extends SvgTransformable {\n\t\n\t@property({ initial: 6 }) radius;\n\t\n\tpreCreate(options) {\n\t\tsuper.preCreate(options);\n\t\t\n\t}\n\t\n\tcreate(options = {}) {\n\t\tsuper.create(options);\n\t\t\n\t\tconst handle = $.svg('<circle>').attr({\n\t\t\t// r: Glyph.RADIUS + 2,\n\t\t\tcx: 0, cy: 0,\n\t\t\tstrokeWidth: 'inherit',\n\t\t}).appendTo(this.svg.handles);\n\t\t\n\t\tconst ink = $.svg('<circle>').attr({\n\t\t\t// r: Glyph.RADIUS,\n\t\t\tcx: 0, cy: 0,\n\t\t\tstroke:      'inherit',\n\t\t\tfill:        'inherit'\n\t\t}).appendTo(this.svg.ink);\n\t\t\n\t\tconst overlay = $.svg('<circle>').attr({\n\t\t\t// r: Glyph.RADIUS,\n\t\t\tcx: 0, cy: 0,\n\t\t\tstroke:           'inherit',\n\t\t\tstrokeWidth:      'inherit',\n\t\t\tstrokeDasharray:  'inherit',\n\t\t\tstrokeDashoffset: 'inherit',\n\t\t\tfill:             'transparent'\n\t\t}).appendTo(this.svg.overlay);\n\t\t\n\t\tthis.p('radius').subscribe((r) => {\n\t\t\thandle.attr('r', r + 2);\n\t\t\t$().add(ink).add(overlay).attr('r', r);\n\t\t});\n\t\t\n\t\t\n\t}\n\t\n\tpostCreate(options = {}) {\n\t\t/* set standard handlers */\n\t\tthis.registerHandlers({\n\t\t\tmovable:       { artefact: this },\n\t\t\thighlightable: {\n\t\t\t\tartefact: this,\n\t\t\t\teffect: { elements: this.svg.overlay }\n\t\t\t},\n\t\t\tdeletable: {\n\t\t\t\tartefact: this\n\t\t\t},\n\t\t\tdrawzone: {\n\t\t\t\tartefact: this\n\t\t\t}\n\t\t});\n\t\t\n\t\t/***/\n\t\tsuper.postCreate(options);\n\t}\n\t\n}\n",
    "static": true,
    "longname": "src/artefacts/Glyph.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 75,
    "kind": "class",
    "name": "Glyph",
    "memberof": "src/artefacts/Glyph.js",
    "static": true,
    "longname": "src/artefacts/Glyph.js~Glyph",
    "access": null,
    "export": true,
    "importPath": "boxer/src/artefacts/Glyph.js",
    "importStyle": "{Glyph}",
    "description": "Representation of an interactive glyph in svg space.",
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "src/artefacts/SvgTransformable.js~SvgTransformable"
    ]
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "preCreate",
    "memberof": "src/artefacts/Glyph.js~Glyph",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/Glyph.js~Glyph#preCreate",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "create",
    "memberof": "src/artefacts/Glyph.js~Glyph",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/Glyph.js~Glyph#create",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "postCreate",
    "memberof": "src/artefacts/Glyph.js~Glyph",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/Glyph.js~Glyph#postCreate",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 79,
    "kind": "file",
    "name": "src/artefacts/LineSegment.js",
    "content": "import $      from '../libs/jquery.js';\nimport {isBoolean as _isBoolean, isNumber as _isNumber} from 'lodash';\n\nimport {Point2D}  from '../util/svg.js';\nimport {property} from 'utilities';\n\nconst {max} = Math;\n\nimport {SvgArtefact} from './SvgArtefact.js';\n\n/**\n * Representation of an interactive line segment in svg space.\n */\nexport class LineSegment extends SvgArtefact {\n\t\n\t@property({ isValid: v => v instanceof Point2D }) point1;\n\t@property({ isValid: v => v instanceof Point2D }) point2;\n\t@property({ isValid: _isNumber, initial: 0     }) lengthen1;\n\t@property({ isValid: _isNumber, initial: 0     }) lengthen2;\n\t\n\tpreCreate(options = {}) {\n\t\tsuper.preCreate(options);\n\t\t\n\t\tif (options.point1)    { this.point1    = options.point1.in(this.parent.svg.children) }\n\t\tif (options.point2)    { this.point2    = options.point2.in(this.parent.svg.children) }\n\t\tif (options.lengthen1) { this.lengthen1 = options.lengthen1                           }\n\t\tif (options.lengthen2) { this.lengthen2 = options.lengthen2                           }\n\t\t\n\t\t/* smoothly transitioning to a new coordinateSystem */\n\t\tthis.p('parent').filter(p=>p).subscribe((parent) => {\n\t\t\tif (this.point1 && this.point2) {\n\t\t\t\tthis.point1 = this.point1.in(parent.svg.children);\n\t\t\t\tthis.point2 = this.point2.in(parent.svg.children);\n\t\t\t}\n\t\t});\n\t}\n\t\n\tcreate(options = {}) {\n\t\t\n\t\tconst inkLine = $.svg('<line>').css({\n\t\t\tstroke:           'inherit',\n\t\t\tstrokeWidth:      'inherit',\n\t\t\tstrokeDasharray:  'inherit',\n\t\t\tstrokeDashoffset: 'inherit'\n\t\t}).appendTo(this.svg.ink);\n\t\t\n\t\tconst overlayLine = $.svg('<line>').css({\n\t\t\tstroke:           'inherit',\n\t\t\tstrokeWidth:      'inherit',\n\t\t\tstrokeDasharray:  'inherit',\n\t\t\tstrokeDashoffset: 'inherit'\n\t\t}).appendTo(this.svg.overlay);\n\t\t\n\t\tconst handleLine = $.svg('<line>').css({\n\t\t\tstrokeWidth: 'inherit',\n\t\t}).appendTo(this.svg.handles);\n\t\t\n\t\tthis.p(['parent', 'point1', 'point2', 'lengthen1', 'lengthen2'])\n\t\t    .filter(([parent, p1, p2]) => parent && p1 && p2)\n\t\t    .subscribe(([parent, p1, p2, l1, l2]) => {\n\t\t\t\tp1 = p1.in(parent.svg.children);\n\t\t\t\tp2 = p2.in(parent.svg.children);\n\t\t\t\t$().add(inkLine)\n\t\t\t\t   .add(overlayLine)\n\t\t\t\t   .add(handleLine)\n\t\t\t\t   .attr({\n\t\t\t\t\t\t...p1.withDistanceTo(-l2, p2).obj('x1', 'y1'),\n\t\t\t\t\t\t...p2.withDistanceTo(-l1, p1).obj('x2', 'y2')\n\t\t\t\t\t});\n\t\t\t});\n\t\t\n\t\t\n\t}\n\t\n\tget inkPoint1() {\n\t\treturn this.point1.withDistanceTo(-this.lengthen2, this.point2);\n\t}\n\t\n\tget inkPoint2() {\n\t\treturn this.point2.withDistanceTo(-this.lengthen1, this.point1);\n\t}\n\t\n}\n",
    "static": true,
    "longname": "src/artefacts/LineSegment.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 80,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/artefacts/LineSegment.js",
    "static": true,
    "longname": "src/artefacts/LineSegment.js~_extends",
    "access": null,
    "export": false,
    "importPath": "boxer/src/artefacts/LineSegment.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "variable",
    "name": "max",
    "memberof": "src/artefacts/LineSegment.js",
    "static": true,
    "longname": "src/artefacts/LineSegment.js~max",
    "access": null,
    "export": false,
    "importPath": "boxer/src/artefacts/LineSegment.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "class",
    "name": "LineSegment",
    "memberof": "src/artefacts/LineSegment.js",
    "static": true,
    "longname": "src/artefacts/LineSegment.js~LineSegment",
    "access": null,
    "export": true,
    "importPath": "boxer/src/artefacts/LineSegment.js",
    "importStyle": "{LineSegment}",
    "description": "Representation of an interactive line segment in svg space.",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "src/artefacts/SvgArtefact.js~SvgArtefact"
    ]
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "preCreate",
    "memberof": "src/artefacts/LineSegment.js~LineSegment",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/LineSegment.js~LineSegment#preCreate",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 84,
    "kind": "member",
    "name": "point1",
    "memberof": "src/artefacts/LineSegment.js~LineSegment",
    "static": false,
    "longname": "src/artefacts/LineSegment.js~LineSegment#point1",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "member",
    "name": "point2",
    "memberof": "src/artefacts/LineSegment.js~LineSegment",
    "static": false,
    "longname": "src/artefacts/LineSegment.js~LineSegment#point2",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "member",
    "name": "lengthen1",
    "memberof": "src/artefacts/LineSegment.js~LineSegment",
    "static": false,
    "longname": "src/artefacts/LineSegment.js~LineSegment#lengthen1",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "member",
    "name": "lengthen2",
    "memberof": "src/artefacts/LineSegment.js~LineSegment",
    "static": false,
    "longname": "src/artefacts/LineSegment.js~LineSegment#lengthen2",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 88,
    "kind": "member",
    "name": "point1",
    "memberof": "src/artefacts/LineSegment.js~LineSegment",
    "static": false,
    "longname": "src/artefacts/LineSegment.js~LineSegment#point1",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 89,
    "kind": "member",
    "name": "point2",
    "memberof": "src/artefacts/LineSegment.js~LineSegment",
    "static": false,
    "longname": "src/artefacts/LineSegment.js~LineSegment#point2",
    "access": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "create",
    "memberof": "src/artefacts/LineSegment.js~LineSegment",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/LineSegment.js~LineSegment#create",
    "access": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 91,
    "kind": "get",
    "name": "inkPoint1",
    "memberof": "src/artefacts/LineSegment.js~LineSegment",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/LineSegment.js~LineSegment#inkPoint1",
    "access": null,
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "get",
    "name": "inkPoint2",
    "memberof": "src/artefacts/LineSegment.js~LineSegment",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/LineSegment.js~LineSegment#inkPoint2",
    "access": null,
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 93,
    "kind": "file",
    "name": "src/artefacts/SvgArtefact.js",
    "content": "import assert        from 'power-assert';\nimport {entries, isEmpty}      from 'lodash-bound';\nimport $, {applyCSS, plainDOM} from '../libs/jquery.js';\n\nimport {Observable} from '../libs/expect-rxjs.js';\n\nimport {ID_MATRIX, SVGMatrix, setCTM} from '../util/svg.js';\nimport {ValueTracker, property, flag, humanMsg, event}       from 'utilities';\nimport {moveToFront} from '../util/svg';\nimport {smartMerge} from '../Coach';\nimport {Handler} from '../handlers/Handler';\n\nconst $$handlers = Symbol('$$handlers');\n\n\n/**\n * Abstract representation of an interactive artefact in svg space.\n */\nexport class SvgArtefact extends ValueTracker {\n\t\n\t@property({ isValid: (v) => (!v || v instanceof SvgArtefact) }) parent;\n\t@flag({ initial: false })                                       deleted;\n\t\n\t\n\t@event() moveToFrontEvent;\n\t@event() clickEvent;\n\t\n\t@flag({ initial: true }) handlesActive;\n\t\n\tstatic inheritedProperties = {\n\t\tstrokeDasharray:  'inherit',\n\t\tstrokeDashoffset: 'inherit',\n\t    fill:             'inherit',\n\t    stroke:           'inherit',\n\t\tstrokeWidth:      'inherit'\n\t};\n\t\n\t/**\n\t * @param {SVGMatrix} [options.transformation] - the initial transformation of this artefact\n\t */\n\tconstructor(options = {}) {\n\t\tsuper();\n\t\t\n\t\t// this.setValueTrackerOptions({ takeUntil: this.p('deleted').filter(v=>!!v) }); // TODO: put back\n\t\t\n\t\tthis.preCreate (options);\n\t\tthis.create    (options);\n\t\tthis.postCreate(options);\n\t}\n\t\n\tpreCreate(options = {}) {\n\t\t\n\t\t/* set parent if given */\n\t\tif (options.parent) { this.parent = options.parent }\n\t\t\n\t\t/* when parent is deleted, this is deleted */\n\t\tthis.p('parent.deleted').filter(d=>!!d).take(1).subscribe( this.p('deleted') );\n\t\t\n\t\t/* set main grouping elements */\n\t\tthis.svg = { main: options.svg };\n\t\tif (!(this.svg.main::plainDOM() instanceof SVGElement)) {\n\t\t\tthis.svg.main = $.svg('<g>');\n\t\t}\n\t\tthis.svg.main.addClass(`boxer boxer-${this.constructor.name}`);\n\t\tthis.svg.ink      = $.svg('<g class=\"ink\">')     .appendTo(this.svg.main);\n\t\tthis.svg.handles  = $.svg('<g class=\"handles\">') .appendTo(this.svg.main);\n\t\tthis.svg.children = $.svg('<g class=\"children\">').appendTo(this.svg.main);\n\t\tthis.svg.overlay  = $.svg('<g class=\"overlay\">') .appendTo(this.svg.main).css({ opacity: 0 });\n\t\tthis.svg.main.data('boxer-controller', this);\n\t\t\n\t\t/* move svg on parent change */\n\t\tthis.p('parent').startWith(null).pairwise().subscribe(([prev, curr]) => {\n\t\t\tif (!!curr) {\n\t\t\t\tthis.svg.main.appendTo(curr.getSvgContainerFor(this));\n\t\t\t} else if (!!prev) {\n\t\t\t\tthis.svg.main.detach();\n\t\t\t}\n\t\t});\n\t\t\n\t\t/* keep track of root */\n\t\tthis.newProperty('root', {\n\t\t\tsource: this.p('parent').switchMap(p => p ? p.p('root') : Observable.of(this))\n\t\t});\n\t\t\n\t\t/* keep track of nesting depth */\n\t\tthis.newProperty('depth', {\n\t\t\tsource: this.p('parent').switchMap(p => p ? p.p('depth').map(d=>d+1) : Observable.of(0)),\n\t\t\tisEqual: () => false, // always re-emit depth when parent changes\n\t\t\tallowSynchronousAccess: true\n\t\t});\n\t\t\n\t\t/* propagate moveToFront event */\n\t\tconst thisArtefact = this;\n\t\tfunction direction(d)     { return this.filter(({direction}) => (direction === d)) }\n\t\tfunction withParent()     { return this.withLatestFrom(thisArtefact.p('parent')).filter(([v,p])=>!!p) }\n\t\tfunction registerSource() { return this.map((info) => ({ ...info, source: thisArtefact })) }\n\t\tfunction doNotTurnBack()  { return this.filter(info => info.source !== thisArtefact) }\n\t\t// send outward-moving moveToFront to parent\n\t\tthis.e('moveToFront')\n\t\t\t::direction('out')\n\t\t\t::registerSource()\n\t\t\t::withParent()\n\t\t\t.subscribe(([info, p]) => { p.e('moveToFront').next(info) });\n\t\t// listen and propagate inward-moving moveToFront\n\t\tthis.e('parent.moveToFront')\n\t\t\t::doNotTurnBack()\n\t\t\t.subscribe((info) => { this.e('moveToFront').next({ ...info, direction: 'in' }) });\n\t\t\n\t\t/* shuffle svg to front on moveToFront */\n\t\tthis.e('moveToFront')\n\t\t\t::direction('out')\n\t\t\t.subscribe(this.svg.main::moveToFront);\n\t\t\n\t}\n\t\n\tcreate(options = {}) {}\n\t\n\tpostCreate(options = {}) {\n\t\t/* what to do when this is deleted */\n\t\tthis.p('deleted').filter(d=>!!d).take(1).subscribe(() => {\n\t\t\tthis.svg.main.remove();\n\t\t\t// this.parent = null; // TODO: removing this fixed a bug; is it ever needed?\n\t\t});\n\t\t\n\t\t/* add handler stuff that's given with the constructor */\n\t\tthis.registerHandlers(options.handlers);\n\t\t\n\t\t/* add handlers */\n\t\tthis.registerHandlers({\n\t\t\tclickable: {\n\t\t\t\tartefact: this,\n\t\t\t\thandle: (val) => { this.e('click').next(val) }\n\t\t\t}\n\t\t});\n\t\t\n\t\t/* set css inheritance chains */\n\t\tthis.svg.main             .css({ 'pointer-events': 'inherit', ...SvgArtefact.inheritedProperties });\n\t\tthis.svg.ink              .css({ 'pointer-events': 'none',    ...SvgArtefact.inheritedProperties });\n\t\tthis.svg.overlay          .css({ 'pointer-events': 'none',                                       });\n\t\tthis.svg.children         .css({ 'pointer-events': 'inherit', ...SvgArtefact.inheritedProperties });\n\t\tthis.svg.handles          .css({ 'pointer-events': 'inherit'                                     });\n\t\tthis.svg.handles.find('*').css({ 'pointer-events': 'inherit'                                     });\n\t\t\n\t\t/* set category specific styling */\n\t\tthis.svg.handles.css({\n\t\t\tvisibility: 'hidden',\n\t\t\tstrokeWidth: 6\n\t\t});\n\t\tthis.svg.ink.css({\n\t\t\tstrokeWidth: 2\n\t\t});\n\t\t\n\t\t/* toggle pointer-events for active handles */\n\t\tthis.p(['parent', 'handlesActive']).subscribe(([parent, active]) => {\n\t\t\tthis.svg.main.css({ 'pointer-events': (active ? (!!parent ? 'inherit' : 'all') : 'none') });\n\t\t});\n\t\t\n\t\t/* set css styling if given, which should override any of the stuff above */\n\t\tif (options.css) {\n\t\t\tthis.setCSS(options.css);\n\t\t}\n\t}\n\t\n\tdelete() {\n\t\tthis.p('deleted').next(true);\n\t}\n\t\n\tsetCSS(css: Object) {\n\t\tthis.svg.main::applyCSS(css);\n\t}\n\t\n\tregisterHandlers(handlers: Object = {}) {\n\t\tif (!this[$$handlers]) {\n\t\t\tthis[$$handlers] = {};\n\t\t\tthis.svg.handles.find('*').data('boxer-handlers', this[$$handlers]);\n\t\t\t// TODO: ^ stop using 'boxer-handlers'; just get the controller\n\t\t\t//     :   it's perhaps a big code-change\n\t\t}\n\t\tfor (let [key, handler] of handlers::entries()) {\n\t\t\tif (!this[$$handlers][key]) { this[$$handlers][key] = new Handler() }\n\t\t\tthis[$$handlers][key].register(handler);\n\t\t}\n\t}\n\tget handlers(): Object {\n\t\tif (!this[$$handlers]) {\n\t\t\tthis.registerHandlers({});\n\t\t}\n\t\treturn this[$$handlers];\n\t}\n\t\n\tmoveToFront() {\n\t\tthis.e('moveToFront').next({ direction: 'out', source: this });\n\t\tthis.e('moveToFront').next({ direction: 'in',  source: this });\n\t}\n\t\n\tget depth() {\n\t\tif (this.parent) { return this.parent.depth + 1 }\n\t\telse             { return 0 }\n\t} // TODO: ValueTracked doesn't allow synchronous access using .newProperty() yet\n\t\n\tclosestCommonAncestorWith(other: SvgArtefact): ?SvgArtefact {\n\t\tif (this.depth < other.depth) { return other.closestCommonAncestorWith(this) }\n\t\tlet thisAncestor = this;\n\t\tlet otherAncestor = other;\n\t\twhile (thisAncestor.depth > otherAncestor.depth) {\n\t\t\tthisAncestor = thisAncestor.parent;\n\t\t}\n\t\twhile (thisAncestor !== otherAncestor) {\n\t\t\tthisAncestor  = thisAncestor.parent;\n\t\t\totherAncestor = otherAncestor.parent;\n\t\t}\n\t\treturn thisAncestor;\n\t}\n\t\n\tgetSvgContainerFor(artefact) {\n\t\treturn this.svg.children;\n\t} // override if necessary\n\t\n}\n",
    "static": true,
    "longname": "src/artefacts/SvgArtefact.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/artefacts/SvgArtefact.js",
    "static": true,
    "longname": "src/artefacts/SvgArtefact.js~_extends",
    "access": null,
    "export": false,
    "importPath": "boxer/src/artefacts/SvgArtefact.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "name": "$$handlers",
    "memberof": "src/artefacts/SvgArtefact.js",
    "static": true,
    "longname": "src/artefacts/SvgArtefact.js~$$handlers",
    "access": null,
    "export": false,
    "importPath": "boxer/src/artefacts/SvgArtefact.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "class",
    "name": "SvgArtefact",
    "memberof": "src/artefacts/SvgArtefact.js",
    "static": true,
    "longname": "src/artefacts/SvgArtefact.js~SvgArtefact",
    "access": null,
    "export": true,
    "importPath": "boxer/src/artefacts/SvgArtefact.js",
    "importStyle": "{SvgArtefact}",
    "description": "Abstract representation of an interactive artefact in svg space.",
    "lineNumber": 20,
    "interface": false,
    "extends": [
      "utilities~ValueTracker"
    ]
  },
  {
    "__docId__": 97,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/artefacts/SvgArtefact.js~SvgArtefact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/SvgArtefact.js~SvgArtefact#constructor",
    "access": null,
    "description": "",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "SVGMatrix"
        ],
        "spread": false,
        "optional": true,
        "name": "options.transformation",
        "description": "the initial transformation of this artefact"
      }
    ]
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "preCreate",
    "memberof": "src/artefacts/SvgArtefact.js~SvgArtefact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/SvgArtefact.js~SvgArtefact#preCreate",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 99,
    "kind": "member",
    "name": "parent",
    "memberof": "src/artefacts/SvgArtefact.js~SvgArtefact",
    "static": false,
    "longname": "src/artefacts/SvgArtefact.js~SvgArtefact#parent",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "member",
    "name": "svg",
    "memberof": "src/artefacts/SvgArtefact.js~SvgArtefact",
    "static": false,
    "longname": "src/artefacts/SvgArtefact.js~SvgArtefact#svg",
    "access": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"main\": *}"
      ]
    }
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "create",
    "memberof": "src/artefacts/SvgArtefact.js~SvgArtefact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/SvgArtefact.js~SvgArtefact#create",
    "access": null,
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "postCreate",
    "memberof": "src/artefacts/SvgArtefact.js~SvgArtefact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/SvgArtefact.js~SvgArtefact#postCreate",
    "access": null,
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "delete",
    "memberof": "src/artefacts/SvgArtefact.js~SvgArtefact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/SvgArtefact.js~SvgArtefact#delete",
    "access": null,
    "description": null,
    "lineNumber": 156,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "setCSS",
    "memberof": "src/artefacts/SvgArtefact.js~SvgArtefact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/SvgArtefact.js~SvgArtefact#setCSS",
    "access": null,
    "description": null,
    "lineNumber": 160,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "css",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "registerHandlers",
    "memberof": "src/artefacts/SvgArtefact.js~SvgArtefact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/SvgArtefact.js~SvgArtefact#registerHandlers",
    "access": null,
    "description": null,
    "lineNumber": 166,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "handlers",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 106,
    "kind": "member",
    "name": "[$$handlers]",
    "memberof": "src/artefacts/SvgArtefact.js~SvgArtefact",
    "static": false,
    "longname": "src/artefacts/SvgArtefact.js~SvgArtefact#[$$handlers]",
    "access": null,
    "description": null,
    "lineNumber": 168,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "get",
    "name": "handlers",
    "memberof": "src/artefacts/SvgArtefact.js~SvgArtefact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/SvgArtefact.js~SvgArtefact#handlers",
    "access": null,
    "description": null,
    "lineNumber": 180,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "moveToFront",
    "memberof": "src/artefacts/SvgArtefact.js~SvgArtefact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/SvgArtefact.js~SvgArtefact#moveToFront",
    "access": null,
    "description": null,
    "lineNumber": 187,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 109,
    "kind": "get",
    "name": "depth",
    "memberof": "src/artefacts/SvgArtefact.js~SvgArtefact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/SvgArtefact.js~SvgArtefact#depth",
    "access": null,
    "description": null,
    "lineNumber": 192,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "closestCommonAncestorWith",
    "memberof": "src/artefacts/SvgArtefact.js~SvgArtefact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/SvgArtefact.js~SvgArtefact#closestCommonAncestorWith",
    "access": null,
    "description": null,
    "lineNumber": 200,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "other",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "getSvgContainerFor",
    "memberof": "src/artefacts/SvgArtefact.js~SvgArtefact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/SvgArtefact.js~SvgArtefact#getSvgContainerFor",
    "access": null,
    "description": null,
    "lineNumber": 216,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "artefact",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 112,
    "kind": "file",
    "name": "src/artefacts/SvgTransformable.js",
    "content": "import assert        from 'power-assert';\nimport $, {plainDOM} from '../libs/jquery.js';\n\nimport {ID_MATRIX, SVGMatrix, setCTM} from '../util/svg.js';\nimport {ValueTracker, property}       from 'utilities';\n\nimport {SvgArtefact} from './SvgArtefact.js';\nimport {Point2D} from '../util/svg';\n\n/**\n * Abstract representation of an interactive artefact in svg space that can be transformed by affine matrix.\n */\nexport class SvgTransformable extends SvgArtefact {\n\t\n\t@property({ initial: ID_MATRIX, isValid: v => v instanceof SVGMatrix }) transformation;\n\t@property({ initial: ID_MATRIX, isValid: v => v instanceof SVGMatrix }) globalTransformation;\n\t\n\tpreCreate(options = {}) {\n\t\tsuper.preCreate(options);\n\t\t\n\t\t/* set transformation if given */\n\t\tif (options.transformation) { this.transformation = options.transformation }\n\t\t\n\t\t/* smoothly transitioning to a new coordinateSystem */\n\t\tthis.p('parent')\n\t\t\t.filter(p=>p)\n\t\t\t.map(p => p.svg.children)\n\t\t\t.pairwise()\n\t\t\t.withLatestFrom(this.p('transformation'), ([prev, curr], t) => ID_MATRIX\n\t\t\t\t.multiply(curr::plainDOM().getScreenCTM().inverse())\n\t\t\t    .multiply(prev::plainDOM().getScreenCTM())\n\t\t\t\t.multiply(t))\n\t\t\t.subscribe( this.p('transformation') );\n\t\t\n\t\t/* keep transformation active on elements */\n\t\tthis.p('transformation').subscribe(this.svg.main::setCTM);\n\t\t\n\t\t/* keep track of the transformation of this artefact w.r.t. the canvas */\n\t\tthis.p(['parent?.globalTransformation', 'transformation'], (pgt, t) => (pgt || ID_MATRIX).multiply(t))\n\t\t\t.subscribe( this.p('globalTransformation') );\n\t}\n\t\n}\n",
    "static": true,
    "longname": "src/artefacts/SvgTransformable.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 113,
    "kind": "class",
    "name": "SvgTransformable",
    "memberof": "src/artefacts/SvgTransformable.js",
    "static": true,
    "longname": "src/artefacts/SvgTransformable.js~SvgTransformable",
    "access": null,
    "export": true,
    "importPath": "boxer/src/artefacts/SvgTransformable.js",
    "importStyle": "{SvgTransformable}",
    "description": "Abstract representation of an interactive artefact in svg space that can be transformed by affine matrix.",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "src/artefacts/SvgArtefact.js~SvgArtefact"
    ]
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "preCreate",
    "memberof": "src/artefacts/SvgTransformable.js~SvgTransformable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/artefacts/SvgTransformable.js~SvgTransformable#preCreate",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 115,
    "kind": "member",
    "name": "transformation",
    "memberof": "src/artefacts/SvgTransformable.js~SvgTransformable",
    "static": false,
    "longname": "src/artefacts/SvgTransformable.js~SvgTransformable#transformation",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 116,
    "kind": "file",
    "name": "src/handlers/Handler.js",
    "content": "import {camelCase, mergeWith, isFunction, entries} from 'lodash-bound';\nimport {match} from 'utilities';\n\n\nexport class Handler {\n\t\n\tstatic parameterTypes = {\n\t\t'accept': {\n\t\t\tmerge: (a,b) => a && b // conjunctive\n\t\t}\n\t};\n\t\n\tstatic merge(key) {\n\t\treturn this.parameterTypes[key]\n\t        && this.parameterTypes[key].merge\n\t\t\t|| (a => a);\n\t}\n\t\n\tconstructor() {\n\t}\n\t\n\tregister(obj) {\n\t\tthis::mergeWith(obj, (val1, val2, key) => {\n\t\t\tif (val1::isFunction()) {\n\t\t\t\tconst pred = Handler.merge(key);\n\t\t\t\treturn (...args) => pred(this::val1(...args), this::val2(...args));\n\t\t\t}\n\t\t});\n\t}\n\t\n}\n",
    "static": true,
    "longname": "src/handlers/Handler.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 117,
    "kind": "class",
    "name": "Handler",
    "memberof": "src/handlers/Handler.js",
    "static": true,
    "longname": "src/handlers/Handler.js~Handler",
    "access": null,
    "export": true,
    "importPath": "boxer/src/handlers/Handler.js",
    "importStyle": "{Handler}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "merge",
    "memberof": "src/handlers/Handler.js~Handler",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/handlers/Handler.js~Handler.merge",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/handlers/Handler.js~Handler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/handlers/Handler.js~Handler#constructor",
    "access": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "register",
    "memberof": "src/handlers/Handler.js~Handler",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/handlers/Handler.js~Handler#register",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 121,
    "kind": "file",
    "name": "src/index.js",
    "content": "export * from './artefacts/SvgArtefact.js';\nexport * from './artefacts/Canvas.js';\nexport * from './artefacts/Box.js';\nexport * from './artefacts/LineSegment.js';\nexport * from './artefacts/BoxCorner.js';\nexport * from './artefacts/Glyph.js';\nexport * from './artefacts/Edge.js';\n\nexport * from './tools/Tool.js';\nexport * from './tools/ClickTool.js';\nexport * from './tools/DeleteTool.js';\nexport * from './tools/DrawTool.js';\nexport * from './tools/HighlightTool.js';\nexport * from './tools/MouseCursorTool.js';\nexport * from './tools/MoveTool.js';\nexport * from './tools/PanTool.js';\nexport * from './tools/ResizeTool.js';\nexport * from './tools/RotateTool.js';\nexport * from './tools/SelectTool.js';\nexport * from './tools/ZoomTool.js';\n\nexport {Coach} from './Coach.js';\n",
    "static": true,
    "longname": "src/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 122,
    "kind": "file",
    "name": "src/tools/ClickTool.js",
    "content": "import {isFunction} from 'lodash-bound';\nimport {handleBoxer} from '../Coach.js';\nimport {MouseTool} from './MouseTool';\n\n\n/**\n * A tool for handling clicks on artefacts. Answers to the 'clickable' handler.\n */\nexport class ClickTool extends MouseTool {\n\t\n\tinit({ coach }) {\n\t\tsuper.init({ coach });\n\t\tthis.mouseMachine.CLICKING.filter(() => this.active)::handleBoxer('clickable').subscribe((handler) => {\n\t\t\tif (handler.handle::isFunction()) {\n\t\t\t\thandler.handle(handler);\n\t\t\t}\n\t\t});\n\t}\n\t\n}\n\n",
    "static": true,
    "longname": "src/tools/ClickTool.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 123,
    "kind": "class",
    "name": "ClickTool",
    "memberof": "src/tools/ClickTool.js",
    "static": true,
    "longname": "src/tools/ClickTool.js~ClickTool",
    "access": null,
    "export": true,
    "importPath": "boxer/src/tools/ClickTool.js",
    "importStyle": "{ClickTool}",
    "description": "A tool for handling clicks on artefacts. Answers to the 'clickable' handler.",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "src/tools/MouseTool.js~MouseTool"
    ]
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "init",
    "memberof": "src/tools/ClickTool.js~ClickTool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/ClickTool.js~ClickTool#init",
    "access": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"coach\": *}"
        ],
        "defaultRaw": {
          "coach": null
        },
        "defaultValue": "{\"coach\":null}"
      }
    ]
  },
  {
    "__docId__": 125,
    "kind": "file",
    "name": "src/tools/DeleteTool.js",
    "content": "import {handleBoxer} from '../Coach.js';\nimport {MouseTool}   from './MouseTool';\nimport {sineWave}    from '../util/misc';\n\nimport {Observable} from '../libs/expect-rxjs.js';\nimport {match} from 'utilities';\n\nconst {min, max, floor, PI} = Math;\n\n\n/**\n * A tool for deleting artefacts on click. Answers to the 'deletable' handler.\n */\nexport class DeleteTool extends MouseTool {\n\t\n\t/* 'selectable' related highlighting */\n\tHIGHLIGHT_DELETING = (() => {\n\t\tconst wave = sineWave({ amplitude: 140, period: 1000 });\n\t\treturn {\n\t\t\tcolorCycle: () => {\n\t\t\t\tconst t = Date.now();\n\t\t\t\treturn `rgb(\n\t\t\t\t\t${floor(max( 255, 215-wave(t) ))},\n\t\t\t\t\t${floor(min( 255,  50+wave(t) ))},\n\t\t\t\t\t${floor(min( 255,  50+wave(t) ))}\n\t\t\t\t)`;\n\t\t\t},\n\t\t\tdashArray: [6, 4],\n\t\t\tdashSpeed: 7\n\t\t};\n\t})();\n\t\n\tinit({ coach }) {\n\t\tsuper.init({ coach });\n\t\t\n\t\t/* handle click */\n\t\tthis.mouseMachine.CLICKING::handleBoxer('deletable').subscribe(({artefact}) => {\n\t\t\tartefact.delete();\n\t\t});\n\t\t\n\t\t/* prep for highlighting and mouse cursors */\n\t\tconst handlerArtefactOrNull = (key) => (a) => (a && a.handlers[key] && a.handlers['highlightable']) ? a.handlers[key].artefact : null;\n\t\tconst deletableArtefact = coach.p('selectedArtefact').map(handlerArtefactOrNull('movable'));\n\t\t\n\t\t/* highlighting */\n\t\tcoach.highlightTool.register(this, coach.stateMachine.p('state').switchMap(state => match(state)({\n\t\t\t'IDLE': deletableArtefact,\n\t\t\t'BUSY': Observable.of(null)\n\t\t})).map(artefact => artefact && {\n\t\t\t...this.HIGHLIGHT_DELETING,\n\t\t\tartefact\n\t\t}));\n\t\t\n\t\t/* mouse cursors */\n\t\tconst deleteCursor = `url(${require('./images/trash-32x32.png')}) 10 10, auto`;\n\t\tcoach.mouseCursorTool.register(this, coach.stateMachine.p('state').startWith(null).pairwise().switchMap(([prev, next]) => match(next)({\n\t\t\t'IDLE': deletableArtefact.map(ma => ma && deleteCursor).startWith(prev && deleteCursor),\n\t\t\t'BUSY': Observable.of(null)\n\t\t})));\n\t\t\n\t}\n\t\n}\n\n",
    "static": true,
    "longname": "src/tools/DeleteTool.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 126,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/tools/DeleteTool.js",
    "static": true,
    "longname": "src/tools/DeleteTool.js~_extends",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/DeleteTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "variable",
    "name": "min",
    "memberof": "src/tools/DeleteTool.js",
    "static": true,
    "longname": "src/tools/DeleteTool.js~min",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/DeleteTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "class",
    "name": "DeleteTool",
    "memberof": "src/tools/DeleteTool.js",
    "static": true,
    "longname": "src/tools/DeleteTool.js~DeleteTool",
    "access": null,
    "export": true,
    "importPath": "boxer/src/tools/DeleteTool.js",
    "importStyle": "{DeleteTool}",
    "description": "A tool for deleting artefacts on click. Answers to the 'deletable' handler.",
    "lineNumber": 15,
    "interface": false,
    "extends": [
      "src/tools/MouseTool.js~MouseTool"
    ]
  },
  {
    "__docId__": 129,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/tools/DeleteTool.js~DeleteTool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/DeleteTool.js~DeleteTool#constructor",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ]
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "init",
    "memberof": "src/tools/DeleteTool.js~DeleteTool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/DeleteTool.js~DeleteTool#init",
    "access": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"coach\": *}"
        ],
        "defaultRaw": {
          "coach": null
        },
        "defaultValue": "{\"coach\":null}"
      }
    ]
  },
  {
    "__docId__": 131,
    "kind": "file",
    "name": "src/tools/DrawTool.js",
    "content": "import {assign, isFunction} from 'lodash-bound';\nimport {Observable} from '../libs/expect-rxjs.js';\nimport CSSPrefix from 'cssprefix/src/cssprefix';\n\nimport {property, match} from 'utilities';\n\nimport {ID_MATRIX} from \"../util/svg\";\n\nimport {handleBoxer} from '../Coach.js';\nimport {MouseTool} from './MouseTool';\nimport {SvgArtefact} from '../artefacts/SvgArtefact';\nimport {Box} from '../artefacts/Box';\nimport {Glyph} from '../artefacts/Glyph';\nimport {Edge} from '../artefacts/Edge';\nimport Machine from '../util/Machine';\n\nimport KeyCode from 'keycode-js';\nimport {callIfFunction, subclassOf} from '../util/misc';\n\nconst {KEY_ESCAPE} = KeyCode;\n\nconst {max, sign, abs} = Math;\n\nconst DRAWING_BOX   = 'DRAWING_BOX';\nconst DRAWING_GLYPH = 'DRAWING_GLYPH';\nconst DRAWING_EDGE  = 'DRAWING_EDGE';\nconst DRAWING_EDGES = 'DRAWING_EDGES';\nconst MODES = [\n\tDRAWING_BOX,\n\tDRAWING_GLYPH,\n\tDRAWING_EDGE,\n\tDRAWING_EDGES\n];\n\n/**\n * A tool for drawing new artefacts inside existing artefacts.\n * It can draw inside artefacts with the 'drawzone' handler, and\n * parameters on what to draw can be configured directly.\n */\nexport class DrawTool extends MouseTool {\n\t\n\tstatic DRAWING_BOX   = DRAWING_BOX;\n\tstatic DRAWING_GLYPH = DRAWING_GLYPH;\n\tstatic DRAWING_EDGE  = DRAWING_EDGE;\n\tstatic MODES = MODES;\n\t\n\t@property({ initial: null }) artefactCreated;\n\t\n\t@property({ initial: DRAWING_BOX }) mode;\n\t\n\tdata: Object = {};\n\t\n\tboxFactory:   Class | () => Box;\n\tglyphFactory: Class | () => Glyph;\n\tedgeFactory:  Class | () => Edge;\n\t\n\tfactoryOptions:      Object = {};\n\tboxFactoryOptions:   Object = {};\n\tglyphFactoryOptions: Object = {};\n\tedgeFactoryOptions:  Object = {};\n\t\n\tconstructor(options = {}) {\n\t\tsuper(options);\n\t\tfor (let key of [\n\t\t\t'boxFactory',\n\t\t\t'glyphFactory',\n\t\t\t'edgeFactory',\n\t\t\t'factoryOptions',\n\t\t\t'boxFactoryOptions',\n\t\t\t'glyphFactoryOptions',\n\t\t\t'edgeFactoryOptions',\n\t\t\t'data'\n\t\t]) {\n\t\t\tif (options[key]) { this[key] = options[key] }\n\t\t}\n\t}\n\t\n\tinit({coach}) {\n\t\tsuper.init({ coach });\n\t\t\n\t\tconst mousemove = this.windowE('mousemove');\n\t\tconst keydown   = this.windowE('keydown');\n\t\tconst droppingOrClicking = Observable.merge(\n\t\t\tthis.mouseMachine.DROPPING,\n\t\t\tthis.mouseMachine.CLICKING\n\t\t);\n\t\tconst escaping = this.mouseMachine.ESCAPING;\n\t\tconst threshold = this.mouseMachine.THRESHOLD\n\t\t\t::handleBoxer('drawzone');\n\t\t\n\t\t/* artefact factory functions */\n\t\tconst f = (key, classOptionsKey, baseClass) => (options = {}) => {\n\t\t\tconst fn = this[key]::isFunction() ? this[key] : baseClass;\n\t\t\tconst finalOptions = { ...this.factoryOptions, ...this[classOptionsKey], ...options };\n\t\t\treturn fn::subclassOf(SvgArtefact)\n\t\t\t\t? new fn(finalOptions)\n\t\t\t\t:     fn(finalOptions);\n\t\t};\n\t\tconst boxFactory   = f('boxFactory',   'boxFactoryOptions',   Box  );\n\t\tconst glyphFactory = f('glyphFactory', 'glyphFactoryOptions', Glyph);\n\t\tconst edgeFactory  = f('edgeFactory',  'edgeFactoryOptions',  Edge );\n\t\t\n\t\t/* local state machine */\n\t\tconst localMachine = new Machine(this.constructor.name, { state: 'IDLE' });\n\t\tfor (let mode of MODES) {\n\t\t\tlocalMachine.link('IDLE', threshold.filter(() => this.mode === mode), mode);\n\t\t}\n\t\tlocalMachine.extend(({ enterState, subscribeDuringState }) => ({\n\t\t\t'DRAWING_BOX': (args) => {\n\t\t\t\tconst {accepts, before, after, cancel} = args;\n\t\t\t\t\n\t\t\t\t/* create new box */\n\t\t\t\tconst drawZone = args.drawZone = args.artefact;\n\t\t\t\tconst point = args.point.in(drawZone.svg.children);\n\t\t\t\tconst artefact = args.artefact = boxFactory({\n\t\t\t\t\ttransformation: ID_MATRIX.translate(...point.xy)\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t/* allow the draw zone to reject */\n\t\t\t\tif (accepts::isFunction() && !accepts({artefact})) {\n\t\t\t\t\tartefact.delete();\n\t\t\t\t\tenterState('IDLE');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tartefact.parent = drawZone;\n\t\t\t\t\n\t\t\t\t/* notify the outside world */\n\t\t\t\tthis.p('artefactCreated').next(artefact);\n\t\t\t\t\n\t\t\t\t/* start drawing */\n\t\t\t\tartefact.handlesActive = false;\n\t\t\t\tartefact.moveToFront();\n\t\t\t\tif (before::isFunction()) { before(args) }\n\t\t\t\t\n\t\t\t\t/* record start dimensions and mouse position */\n\t\t\t\tconst start = {\n\t\t\t\t\ttransformation: artefact.transformation,\n\t\t\t\t\tmouse:          point\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\t/* resize while dragging */\n\t\t\t\tconst directions = { x: +1, y: +1 };\n\t\t\t\tmousemove\n\t\t\t\t\t.map(event => event.point.in(drawZone.svg.children).minus(start.mouse))\n\t\t\t\t\t::subscribeDuringState(({x: xDiff, y: yDiff}) => {\n\t\t\t\t\t\tif (directions.x === -sign(xDiff)) { directions.x = -directions.x }\n\t\t\t\t\t\tif (directions.y === -sign(yDiff)) { directions.y = -directions.y }\n\t\t\t\t\t\tartefact::assign({\n\t\t\t\t\t\t\ttransformation: start.transformation.translate(xDiff/2, yDiff/2),\n\t\t\t\t\t\t\twidth:          directions.x * xDiff,\n\t\t\t\t\t\t\theight:         directions.y * yDiff\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\n\t\t\t\t/* cancel or stop dragging */\n\t\t\t\tObservable.merge(\n\t\t\t\t\tthis.p('active').filter(a=>!a).concatMap(Observable.throw()),\n\t\t\t\t\tescaping                      .concatMap(Observable.throw()),\n\t\t\t\t\tdroppingOrClicking.do(() => {\n\t\t\t\t\t\tartefact.handlesActive = true;\n\t\t\t\t\t\tartefact.moveToFront();\n\t\t\t\t\t})\n\t\t\t\t).catch(() => {\n\t\t\t\t\t/* cancel drawing */\n\t\t\t\t\tartefact.delete();\n\t\t\t\t\tcancel::callIfFunction(args);\n\t\t\t\t\treturn Observable.of({ deleted: true });\n                }).do(({deleted, point}) => {\n\t\t\t\t\t/* stop drawing */\n\t\t\t\t\t// coach.selectTool.reacquire(point);\n\t\t\t\t\tcoach.selectTool.reacquire();\n\t\t\t\t\tafter::callIfFunction(); // TODO: pass args?\n\t\t\t\t})::enterState('IDLE');\n\t\t\t\t\n\t\t\t},\n\t\t\t'DRAWING_GLYPH': (args) => {\n\t\t\t\tconst {accepts, before, after, cancel} = args;\n\t\t\t\t\n\t\t\t\t/* create new glyph */\n\t\t\t\tconst drawZone = args.drawZone = args.artefact;\n\t\t\t\tconst point = args.point.in(drawZone.svg.children);\n\t\t\t\tconst artefact = args.artefact = glyphFactory({\n\t\t\t\t\ttransformation: ID_MATRIX.translate(...point.xy)\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t/* allow the draw zone to reject */\n\t\t\t\tif (accepts::isFunction() && !accepts({artefact})) {\n\t\t\t\t\tartefact.delete();\n\t\t\t\t\tenterState('IDLE');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tartefact.parent = drawZone;\n\t\t\t\t\n\t\t\t\t/* notify the outside world */\n\t\t\t\tthis.p('artefactCreated').next(artefact);\n\t\t\t\t\n\t\t\t\t/* start drawing */\n\t\t\t\tartefact.handlesActive = false;\n\t\t\t\tartefact.moveToFront();\n\t\t\t\tif (before::isFunction()) { before(args) }\n\t\t\t\t\n\t\t\t\t// TODO: allow move following initial mousedown\n\t\t\t\t\n\t\t\t\t/***/\n\t\t\t\tdroppingOrClicking.do(({point}) => {\n\t\t\t\t\t/* stop drawing */\n\t\t\t\t\tartefact.handlesActive = true;\n\t\t\t\t\tartefact.moveToFront();\n\t\t\t\t\tcoach.selectTool.reacquire(point);\n\t\t\t\t\tafter::callIfFunction(args);\n\t\t\t\t}).catch((e) => {\n\t\t\t\t\tconsole.error(e); // TODO\n\t\t\t\t})::enterState('IDLE');\n\t\t\t\t\n\t\t\t},\n\t\t\t'DRAWING_EDGE': (args1) => {\n\t\t\t\tconst {accepts, before, after, cancel} = args1;\n\t\t\t\t\n\t\t\t\t// TODO: A lot of this code is similar to DRAWING_GLYPH above;\n\t\t\t\t//     : Can their common code be elegantly reused?\n\t\t\t\t\n\t\t\t\tlet glyph1;\n\t\t\t\t\n\t\t\t\t/* set glyph1 */\n\t\t\t\tif (args1.artefact instanceof Glyph) {\n\t\t\t\t\tglyph1 = args1.artefact;\n\t\t\t\t} else {\n\t\t\t\t\tconst drawZone1 = args1.artefact;\n\t\t\t\t\tconst point1 = args1.point.in(drawZone1.svg.children);\n\t\t\t\t\tglyph1 = args1.artefact = glyphFactory({\n\t\t\t\t\t\ttransformation: ID_MATRIX.translate(...point1.xy)\n\t\t\t\t\t});\n\t\t\t\t\t/* allow the draw zone to reject */\n\t\t\t\t\tif (accepts::isFunction() && !accepts({ artefact: glyph1 })) {\n\t\t\t\t\t\tglyph1.delete();\n\t\t\t\t\t\tenterState('IDLE');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tglyph1.parent = drawZone1;\n\t\t\t\t\n\t\t\t\t\t/* notify the outside world */\n\t\t\t\t\tthis.p('artefactCreated').next(glyph1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* start drawing */\n\t\t\t\tglyph1.handlesActive = false;\n\t\t\t\tglyph1.moveToFront();\n\t\t\t\tif (before::isFunction()) { before(args1) }\n\t\t\t\t\n\t\t\t\t// TODO: allow move following initial mousedown\n\t\t\t\t\n\t\t\t\t/* escape / cancel */\n\t\t\t\tObservable.merge(\n\t\t\t\t\tthis.p('active').filter(a=>!a),\n\t\t\t\t\tthis.p('mode').filter(m => m !== DRAWING_EDGE),\n\t\t\t\t\tescaping\n\t\t\t\t).do(() => {\n\t\t\t\t\tcancel::callIfFunction(args1);\n\t\t\t\t\tglyph1.handlesActive = true;\n\t\t\t\t})::enterState('IDLE');\n\t\t\t\t\n\t\t\t\t/***/\n\t\t\t\tdroppingOrClicking.do(() => {\n\t\t\t\t\tglyph1.handlesActive = true;\n\t\t\t\t\tglyph1.moveToFront();\n\t\t\t\t});\n\t\t\t\tthreshold.do((args2) => {\n\t\t\t\t\t/* stop drawing glyph1 */\n\t\t\t\t\tglyph1.handlesActive = true;\n\t\t\t\t\t\n\t\t\t\t\t/* set glyph2 */\n\t\t\t\t\tlet glyph2;\n\t\t\t\t\tif (args2.artefact instanceof Glyph) {\n\t\t\t\t\t\tglyph2 = args2.artefact;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst drawZone2 = args2.artefact;\n\t\t\t\t\t\tconst point2 = args2.point.in(drawZone2.svg.children);\n\t\t\t\t\t\tglyph2 = args2.artefact = glyphFactory({\n\t\t\t\t\t\t\ttransformation: ID_MATRIX.translate(...point2.xy)\n\t\t\t\t\t\t});\n\t\t\t\t\t\t/* allow the draw zone to reject */\n\t\t\t\t\t\tif (args2.accepts::isFunction() && !args2.accepts({ artefact: glyph2 })) {\n\t\t\t\t\t\t\tglyph2.delete();\n\t\t\t\t\t\t\tenterState('IDLE');\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tglyph2.parent = drawZone2;\n\t\t\t\t\n\t\t\t\t\t\t/* notify the outside world */\n\t\t\t\t\t\tthis.p('artefactCreated').next(glyph2);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t/* create edge */\n\t\t\t\t\tlet edge = edgeFactory({\n\t\t\t\t\t\tglyph1,\n\t\t\t\t\t\tglyph2\n\t\t\t\t\t});\n\t\t\t\t\n\t\t\t\t\t/* notify the outside world */\n\t\t\t\t\tthis.p('artefactCreated').next(edge);\n\t\t\t\t\t\n\t\t\t\t\t/* communicating new glyph1 to next iteration */\n\t\t\t\t\targs2.artefact = glyph2;\n\t\t\t\t\t\n\t\t\t\t})::enterState('DRAWING_EDGE');\n\t\t\t\t\n\t\t\t}\n\t\t}));\n\t\t\n\t\t/* mutual exclusion between this machine and other machines, coordinated by coach.stateMachine */\n\t\tconst drawing = Observable.merge(\n\t\t\tlocalMachine.DRAWING_BOX,\n\t\t\tlocalMachine.DRAWING_GLYPH,\n\t\t\tlocalMachine.DRAWING_EDGE\n\t\t);\n\t\tlocalMachine.extend(() => ({ 'OTHER_TOOL': ()=>{} }));\n\t\tcoach.stateMachine.extend(() => ({ 'IDLE': ()=>{}, 'BUSY': ()=>{} }));\n\t\tlocalMachine.link('IDLE',       coach.stateMachine.BUSY.filter(({tool}) => tool !== this).map(()=>localMachine.data), 'OTHER_TOOL');\n\t\tlocalMachine.link('OTHER_TOOL', coach.stateMachine.IDLE.filter(({tool}) => tool !== this).map(()=>localMachine.data), 'IDLE');\n\t\tcoach.stateMachine.link('IDLE', drawing          .map(() => ({ tool: this })), 'BUSY');\n\t\tcoach.stateMachine.link('BUSY', localMachine.IDLE.map(() => ({ tool: this })), 'IDLE');\n\t\t\n\t\t/* prep for highlighting and mouse cursors */\n\t\tconst handlerArtefactOrNull = (key) => (a) => (a && a.handlers[key]) ? a.handlers[key].artefact : null;\n\t\tconst drawZoneArtefact = coach.p('selectedArtefact').map(handlerArtefactOrNull('drawzone'));\n\t\t\n\t\t/* highlighting */\n\t\tcoach.highlightTool.register(this, localMachine.p(['state', 'data']).switchMap(([state, data]) => match(state)({\n\t\t\t'IDLE':          drawZoneArtefact,\n\t\t\t'THRESHOLD':     Observable.of(data && data.artefact),\n\t\t\t'DRAWING_BOX':   Observable.of(data && data.artefact),\n\t\t\t'DRAWING_GLYPH': Observable.of(data && data.artefact),\n\t\t\t'DRAWING_EDGE':  Observable.of(data && data.artefact),\n\t\t\t'OTHER_TOOL':    Observable.of(null)\n\t\t})).map(a => a && !!a.handlers['highlightable'] ? a : null).map((artefact) => artefact && {\n\t\t\t...coach.highlightTool.HIGHLIGHT_DEFAULT,\n\t\t\tartefact\n\t\t}));\n\t\t \n\t\t/* mouse cursors */\n\t\tconst drawCursor = CSSPrefix.getValue('cursor', 'crosshair');\n\t\tcoach.mouseCursorTool.register(this, localMachine.p('state').startWith(null).pairwise().switchMap(([prev, next]) => match(next)({\n\t\t\t'IDLE':          drawZoneArtefact.map(dza => dza && drawCursor).startWith(prev && drawCursor),\n\t\t\t'THRESHOLD':     Observable.of(drawCursor),\n\t\t\t'DRAWING_BOX':   Observable.of(drawCursor),\n\t\t\t'DRAWING_GLYPH': Observable.of(drawCursor),\n\t\t\t'DRAWING_EDGE':  Observable.of(drawCursor),\n\t\t\t'OTHER_TOOL':    Observable.of(null)\n\t\t})));\n\t\t\n\t}\n}\n",
    "static": true,
    "longname": "src/tools/DrawTool.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 132,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/tools/DrawTool.js",
    "static": true,
    "longname": "src/tools/DrawTool.js~_extends",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/DrawTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "variable",
    "name": "KEY_ESCAPE",
    "memberof": "src/tools/DrawTool.js",
    "static": true,
    "longname": "src/tools/DrawTool.js~KEY_ESCAPE",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/DrawTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 134,
    "kind": "variable",
    "name": "max",
    "memberof": "src/tools/DrawTool.js",
    "static": true,
    "longname": "src/tools/DrawTool.js~max",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/DrawTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "variable",
    "name": "DRAWING_BOX",
    "memberof": "src/tools/DrawTool.js",
    "static": true,
    "longname": "src/tools/DrawTool.js~DRAWING_BOX",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/DrawTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "variable",
    "name": "DRAWING_GLYPH",
    "memberof": "src/tools/DrawTool.js",
    "static": true,
    "longname": "src/tools/DrawTool.js~DRAWING_GLYPH",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/DrawTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 137,
    "kind": "variable",
    "name": "DRAWING_EDGE",
    "memberof": "src/tools/DrawTool.js",
    "static": true,
    "longname": "src/tools/DrawTool.js~DRAWING_EDGE",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/DrawTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 138,
    "kind": "variable",
    "name": "DRAWING_EDGES",
    "memberof": "src/tools/DrawTool.js",
    "static": true,
    "longname": "src/tools/DrawTool.js~DRAWING_EDGES",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/DrawTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 139,
    "kind": "variable",
    "name": "MODES",
    "memberof": "src/tools/DrawTool.js",
    "static": true,
    "longname": "src/tools/DrawTool.js~MODES",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/DrawTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 140,
    "kind": "class",
    "name": "DrawTool",
    "memberof": "src/tools/DrawTool.js",
    "static": true,
    "longname": "src/tools/DrawTool.js~DrawTool",
    "access": null,
    "export": true,
    "importPath": "boxer/src/tools/DrawTool.js",
    "importStyle": "{DrawTool}",
    "description": "A tool for drawing new artefacts inside existing artefacts.\nIt can draw inside artefacts with the 'drawzone' handler, and\nparameters on what to draw can be configured directly.",
    "lineNumber": 37,
    "interface": false,
    "extends": [
      "src/tools/MouseTool.js~MouseTool"
    ]
  },
  {
    "__docId__": 141,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/tools/DrawTool.js~DrawTool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/DrawTool.js~DrawTool#constructor",
    "access": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 142,
    "kind": "member",
    "name": "data",
    "memberof": "src/tools/DrawTool.js~DrawTool",
    "static": false,
    "longname": "src/tools/DrawTool.js~DrawTool#data",
    "access": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 143,
    "kind": "member",
    "name": "factoryOptions",
    "memberof": "src/tools/DrawTool.js~DrawTool",
    "static": false,
    "longname": "src/tools/DrawTool.js~DrawTool#factoryOptions",
    "access": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 144,
    "kind": "member",
    "name": "boxFactoryOptions",
    "memberof": "src/tools/DrawTool.js~DrawTool",
    "static": false,
    "longname": "src/tools/DrawTool.js~DrawTool#boxFactoryOptions",
    "access": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "member",
    "name": "glyphFactoryOptions",
    "memberof": "src/tools/DrawTool.js~DrawTool",
    "static": false,
    "longname": "src/tools/DrawTool.js~DrawTool#glyphFactoryOptions",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 146,
    "kind": "member",
    "name": "edgeFactoryOptions",
    "memberof": "src/tools/DrawTool.js~DrawTool",
    "static": false,
    "longname": "src/tools/DrawTool.js~DrawTool#edgeFactoryOptions",
    "access": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 147,
    "kind": "member",
    "name": "[key]",
    "memberof": "src/tools/DrawTool.js~DrawTool",
    "static": false,
    "longname": "src/tools/DrawTool.js~DrawTool#[key]",
    "access": null,
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "method",
    "name": "init",
    "memberof": "src/tools/DrawTool.js~DrawTool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/DrawTool.js~DrawTool#init",
    "access": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"coach\": *}"
        ],
        "defaultRaw": {
          "coach": null
        },
        "defaultValue": "{\"coach\":null}"
      }
    ]
  },
  {
    "__docId__": 149,
    "kind": "file",
    "name": "src/tools/GlobalBehaviorTool.js",
    "content": "import {Observable} from '../libs/expect-rxjs.js';\nimport Tool from './Tool';\n\nconst {floor} = Math;\n\nconst $$values = Symbol('$$values');\n\n/**\n * An abstract class for defining tools that activate or deactivate\n * exclusive behaviors on screen based on observables.\n */\nexport class GlobalBehaviorTool extends Tool {\n\t\n\tregister(condition, patternStream) {\n\t\tlet active;\n\t\tif (condition instanceof Tool) {\n\t\t\tactive = condition.p('active');\n\t\t} else if (condition instanceof Observable) {\n\t\t\tactive = condition;\n\t\t} else {\n\t\t\tactive = Observable.of(true);\n\t\t}\n\t\tif (!this[$$values]) { this[$$values] = [] }\n\t\tthis[$$values].push(patternStream\n\t\t\t.withLatestFrom(active, (v, a) => a ? v : null)\n\t\t\t.catch(::console.error)\n\t\t\t.startWith(null));\n\t}\n\t\n\tdeactivateBehavior() {} // override\n\tactivateBehavior  () {} // override\n\tmergeValues(vals) {\n\t\t// console.warn(humanMsg`\n\t\t// \t${this.constructor.name}\n\t\t// \tgot multiple values: ${vals}.\n\t\t// \tWe're choosing just one.\n\t\t// `); // TODO: reinstate warning when the main problem is fixed\n\t\treturn vals[0];\n\t} // override\n\t\n\tpostInit({coach}) {\n\t\t\n\t\tlet currentValue = null;\n\t\t\n\t\tObservable.combineLatest(...(this[$$values] || []))\n\t\t\t// .debounceTime(0) // <-- to skip inconsistent intermediate combination states\n\t\t\t.subscribe((vals) => { try {\n\t\t\t\n\t\t\t\tvals = vals.filter(v=>!!v);\n\t\t\t\t\n\t\t\t\tlet newValue;\n\t\t\t\tif (vals.length === 0) {\n\t\t\t\t\tnewValue = null;\n\t\t\t\t} else {\n\t\t\t\t\tif (vals.length > 1) { newValue = this.mergeValues(vals) }\n\t\t\t\t\telse                 { newValue = vals[0]                }\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (currentValue) { this.deactivateBehavior(currentValue) }\n\t\t\t\tif (newValue)     { this.activateBehavior(newValue)       }\n\t\t\t\t\n\t\t\t\tcurrentValue = newValue;\n\t\t\t\t\t\n\t\t\t} catch (err) { console.error(err) }}, ::console.error);\n\t\t\n\t}\n\t\n}\n",
    "static": true,
    "longname": "src/tools/GlobalBehaviorTool.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 150,
    "kind": "variable",
    "name": "floor",
    "memberof": "src/tools/GlobalBehaviorTool.js",
    "static": true,
    "longname": "src/tools/GlobalBehaviorTool.js~floor",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/GlobalBehaviorTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 151,
    "kind": "variable",
    "name": "$$values",
    "memberof": "src/tools/GlobalBehaviorTool.js",
    "static": true,
    "longname": "src/tools/GlobalBehaviorTool.js~$$values",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/GlobalBehaviorTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "class",
    "name": "GlobalBehaviorTool",
    "memberof": "src/tools/GlobalBehaviorTool.js",
    "static": true,
    "longname": "src/tools/GlobalBehaviorTool.js~GlobalBehaviorTool",
    "access": null,
    "export": true,
    "importPath": "boxer/src/tools/GlobalBehaviorTool.js",
    "importStyle": "{GlobalBehaviorTool}",
    "description": "An abstract class for defining tools that activate or deactivate\nexclusive behaviors on screen based on observables.",
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "src/tools/Tool.js~Tool"
    ]
  },
  {
    "__docId__": 153,
    "kind": "method",
    "name": "register",
    "memberof": "src/tools/GlobalBehaviorTool.js~GlobalBehaviorTool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/GlobalBehaviorTool.js~GlobalBehaviorTool#register",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "condition",
        "types": [
          "*"
        ]
      },
      {
        "name": "patternStream",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 154,
    "kind": "member",
    "name": "[$$values]",
    "memberof": "src/tools/GlobalBehaviorTool.js~GlobalBehaviorTool",
    "static": false,
    "longname": "src/tools/GlobalBehaviorTool.js~GlobalBehaviorTool#[$$values]",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 155,
    "kind": "method",
    "name": "deactivateBehavior",
    "memberof": "src/tools/GlobalBehaviorTool.js~GlobalBehaviorTool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/GlobalBehaviorTool.js~GlobalBehaviorTool#deactivateBehavior",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 156,
    "kind": "method",
    "name": "activateBehavior",
    "memberof": "src/tools/GlobalBehaviorTool.js~GlobalBehaviorTool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/GlobalBehaviorTool.js~GlobalBehaviorTool#activateBehavior",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 157,
    "kind": "method",
    "name": "mergeValues",
    "memberof": "src/tools/GlobalBehaviorTool.js~GlobalBehaviorTool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/GlobalBehaviorTool.js~GlobalBehaviorTool#mergeValues",
    "access": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "vals",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "method",
    "name": "postInit",
    "memberof": "src/tools/GlobalBehaviorTool.js~GlobalBehaviorTool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/GlobalBehaviorTool.js~GlobalBehaviorTool#postInit",
    "access": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"coach\": *}"
        ],
        "defaultRaw": {
          "coach": null
        },
        "defaultValue": "{\"coach\":null}"
      }
    ]
  },
  {
    "__docId__": 159,
    "kind": "file",
    "name": "src/tools/HelperTool.js",
    "content": "import $ from '../libs/jquery.js';\nimport Tool from './Tool';\n\n\n/**\n * A debugging tool that can make little red circles appear on-screen\n * at certain specific coordinates.\n */\nexport class HelperTool extends Tool {\n\t\n\tshowPoint(point, attrs) {\n\t\t\n\t\tpoint = point.in(this.coach.root.svg.main);\n\t\t\n\t\tlet center = $.svg('<circle>').attr({\n\t\t\t...point.obj('cx', 'cy'),\n\t\t\tr: 5,\n\t\t\tfill: 'red',\n\t\t\tstroke: 'black',\n\t\t\t...attrs\n\t\t}).css({\n\t\t\t'pointer-events': 'none'\n\t\t}).appendTo(this.coach.root.svg.main);\n\t\t\n\t\tsetTimeout(::center.remove, 500);\n\t\t\n\t}\n\t\n}\n",
    "static": true,
    "longname": "src/tools/HelperTool.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 160,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/tools/HelperTool.js",
    "static": true,
    "longname": "src/tools/HelperTool.js~_extends",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/HelperTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 161,
    "kind": "class",
    "name": "HelperTool",
    "memberof": "src/tools/HelperTool.js",
    "static": true,
    "longname": "src/tools/HelperTool.js~HelperTool",
    "access": null,
    "export": true,
    "importPath": "boxer/src/tools/HelperTool.js",
    "importStyle": "{HelperTool}",
    "description": "A debugging tool that can make little red circles appear on-screen\nat certain specific coordinates.",
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "src/tools/Tool.js~Tool"
    ]
  },
  {
    "__docId__": 162,
    "kind": "method",
    "name": "showPoint",
    "memberof": "src/tools/HelperTool.js~HelperTool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/HelperTool.js~HelperTool#showPoint",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "point",
        "types": [
          "*"
        ]
      },
      {
        "name": "attrs",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 163,
    "kind": "file",
    "name": "src/tools/HighlightTool.js",
    "content": "import RxCSS from 'rxcss';\nimport {sineWave, animationFrames} from '../util/misc';\nimport {sum} from 'lodash-bound';\nimport {GlobalBehaviorTool} from './GlobalBehaviorTool';\n\nconst {floor, PI, min} = Math;\n\n\n/**\n * A tool that can create an animated color-shifting highlighting border\n * around some artifact based on some observable conditions.\n * Those specific conditions and the nature of the visual border\n * are defined inside the tools that want to use highlighting\n * to signal their state, using `coach.highlightTool.register()`.\n */\nexport class HighlightTool extends GlobalBehaviorTool {\n\t\n\t/* 'selectable' related highlighting */\n\tHIGHLIGHT_DEFAULT = (() => {\n\t\tconst redWave   = sineWave({ amplitude: 40, period: 10000               },\n\t\t                           { amplitude: 30, period:   800, phase: 50*PI });\n\t\tconst greenWave = sineWave({ amplitude: 30, period:  3000               });\n\t\tconst blueWave  = sineWave({ amplitude: 30, period:  6000, phase: 1500  });\n\t\treturn {\n\t\t\tcolorCycle: () => {\n\t\t\t\tconst t = Date.now();\n\t\t\t\treturn `rgb(\n\t\t\t\t\t${floor(min( 255, 160+redWave  (t) ))},\n\t\t\t\t\t${floor(min( 255, 225+greenWave(t) ))},\n\t\t\t\t\t${floor(min( 255, 225+blueWave (t) ))}\n\t\t\t\t)`;\n\t\t\t},\n\t\t\tdashCycle: () => {\n\t\t\t\tconst t = Date.now();\n\t\t\t\treturn floor(t % 1000 / 1000 * 45);\n\t\t\t},\n\t\t\tdashArray: [10, 5],\n\t\t\tdashSpeed: 3\n\t\t};\n\t})();\n\t\n\t\n\tdeactivateBehavior(previous) {\n\t\t/* set value */\n\t\tthis.currentValue = null;\n\t\t/* set styling */\n\t\tconst handler = previous.artefact.handlers.highlightable;\n\t\tif (!handler) { return }\n\t\tconst css = { opacity: 0 };\n\t\tif (handler.effect.elements) { handler.effect.elements.css(css)                    }\n\t\tif (handler.effect.selector) { artefact.setCSS({ [handler.effect.selector]: css }) }\n\t}\n\t\n\tactivateBehavior(current) {\n\t\t/* set value */\n\t\tthis.currentValue = current;\n\t\t/* set styling */\n\t\tconst handler = current.artefact.handlers.highlightable;\n\t\tif (!handler) { return }\n\t\tconst css = {\n\t\t\tstrokeWidth:      4,\n\t\t\topacity:          1,\n\t\t\tstrokeDasharray:  current.dashArray.join(','),\n\t\t\tstroke:           'var(--boxer-highlight-color)',\n\t\t\tfill:             'var(--boxer-highlight-color)',\n\t\t\tstrokeDashoffset: 'var(--boxer-highlight-dash-offset)'\n\t\t};\n\t\tif (handler.effect.elements) { handler.effect.elements.css(css)                    }\n\t\tif (handler.effect.selector) { artefact.setCSS({ [handler.effect.selector]: css }) }\n\t}\n\t\n\t\n\tinit({coach}) {\n\t\tsuper.init({ coach });\n\t\t\n\t\t/* set initial behavior to 'no effect' = null */\n\t\tthis.currentValue = null;\n\t\t\n\t\t/* one-time setup of RxCSS */\n\t\tRxCSS({\n\t\t\t'boxer-highlight-color': animationFrames\n\t\t\t\t.filter(() => this.currentValue)\n\t\t\t\t.map   (() => this.currentValue.colorCycle()),\n\t\t\t'boxer-highlight-dash-offset': animationFrames\n\t\t\t\t.filter(() => this.currentValue)\n\t\t\t\t.map   (() => {\n\t\t\t\t\tconst t = Date.now();\n\t\t\t\t\tconst speed = this.currentValue.dashSpeed * this.currentValue.dashArray::sum();\n\t\t\t\t\treturn floor(t % 1000 / 1000 * speed);\n\t\t\t\t})\n\t\t});//, this.coach.root.svg.main::plainDOM());\n\t}\n}\n",
    "static": true,
    "longname": "src/tools/HighlightTool.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 164,
    "kind": "variable",
    "name": "floor",
    "memberof": "src/tools/HighlightTool.js",
    "static": true,
    "longname": "src/tools/HighlightTool.js~floor",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/HighlightTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 165,
    "kind": "class",
    "name": "HighlightTool",
    "memberof": "src/tools/HighlightTool.js",
    "static": true,
    "longname": "src/tools/HighlightTool.js~HighlightTool",
    "access": null,
    "export": true,
    "importPath": "boxer/src/tools/HighlightTool.js",
    "importStyle": "{HighlightTool}",
    "description": "A tool that can create an animated color-shifting highlighting border\naround some artifact based on some observable conditions.\nThose specific conditions and the nature of the visual border\nare defined inside the tools that want to use highlighting\nto signal their state, using `coach.highlightTool.register()`.",
    "lineNumber": 15,
    "interface": false,
    "extends": [
      "src/tools/GlobalBehaviorTool.js~GlobalBehaviorTool"
    ]
  },
  {
    "__docId__": 166,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/tools/HighlightTool.js~HighlightTool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/HighlightTool.js~HighlightTool#constructor",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ]
  },
  {
    "__docId__": 167,
    "kind": "method",
    "name": "deactivateBehavior",
    "memberof": "src/tools/HighlightTool.js~HighlightTool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/HighlightTool.js~HighlightTool#deactivateBehavior",
    "access": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "previous",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 168,
    "kind": "member",
    "name": "currentValue",
    "memberof": "src/tools/HighlightTool.js~HighlightTool",
    "static": false,
    "longname": "src/tools/HighlightTool.js~HighlightTool#currentValue",
    "access": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 169,
    "kind": "method",
    "name": "activateBehavior",
    "memberof": "src/tools/HighlightTool.js~HighlightTool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/HighlightTool.js~HighlightTool#activateBehavior",
    "access": null,
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "current",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 170,
    "kind": "member",
    "name": "currentValue",
    "memberof": "src/tools/HighlightTool.js~HighlightTool",
    "static": false,
    "longname": "src/tools/HighlightTool.js~HighlightTool#currentValue",
    "access": null,
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 171,
    "kind": "method",
    "name": "init",
    "memberof": "src/tools/HighlightTool.js~HighlightTool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/HighlightTool.js~HighlightTool#init",
    "access": null,
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"coach\": *}"
        ],
        "defaultRaw": {
          "coach": null
        },
        "defaultValue": "{\"coach\":null}"
      }
    ]
  },
  {
    "__docId__": 172,
    "kind": "member",
    "name": "currentValue",
    "memberof": "src/tools/HighlightTool.js~HighlightTool",
    "static": false,
    "longname": "src/tools/HighlightTool.js~HighlightTool#currentValue",
    "access": null,
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 173,
    "kind": "file",
    "name": "src/tools/MouseCursorTool.js",
    "content": "import $ from '../libs/jquery.js';\nimport {GlobalBehaviorTool} from './GlobalBehaviorTool';\n\n/**\n * A tool that can change the mouse cursor based on some observable conditions.\n * Those specific conditions and the specific mouse-cursor to use\n * are defined inside the tools that want to use mouse cursors\n * to signal their state; using `coach.mouseCursorTool.register()`.\n */\nexport class MouseCursorTool extends GlobalBehaviorTool {\n\t\n\tdeactivateBehavior() {\n\t\t$(this.coach.root.svg.main).css({ cursor: '' });\n\t}\n\t\n\tactivateBehavior(cursor) {\n\t\t$(this.coach.root.svg.main).css({ cursor });\n\t}\n\t\n}\n",
    "static": true,
    "longname": "src/tools/MouseCursorTool.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 174,
    "kind": "class",
    "name": "MouseCursorTool",
    "memberof": "src/tools/MouseCursorTool.js",
    "static": true,
    "longname": "src/tools/MouseCursorTool.js~MouseCursorTool",
    "access": null,
    "export": true,
    "importPath": "boxer/src/tools/MouseCursorTool.js",
    "importStyle": "{MouseCursorTool}",
    "description": "A tool that can change the mouse cursor based on some observable conditions.\nThose specific conditions and the specific mouse-cursor to use\nare defined inside the tools that want to use mouse cursors\nto signal their state; using `coach.mouseCursorTool.register()`.",
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "src/tools/GlobalBehaviorTool.js~GlobalBehaviorTool"
    ]
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "deactivateBehavior",
    "memberof": "src/tools/MouseCursorTool.js~MouseCursorTool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/MouseCursorTool.js~MouseCursorTool#deactivateBehavior",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "activateBehavior",
    "memberof": "src/tools/MouseCursorTool.js~MouseCursorTool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/MouseCursorTool.js~MouseCursorTool#activateBehavior",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "cursor",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 177,
    "kind": "file",
    "name": "src/tools/MouseTool.js",
    "content": "import {pick} from 'lodash-bound';\n\nimport Tool from './Tool';\nimport {which} from 'utilities';\nimport {emitWhenComplete} from '../util/misc.js';\n\nimport Machine from '../util/Machine';\nimport KeyCode from 'keycode-js';\nconst {KEY_ESCAPE} = KeyCode;\n\n\n/**\n * An abstract tool used to create other tools that use mouse input.\n * It supplies a state machine with meaningful mouse-based states.\n * (Also happens to signal when ESCAPE is pressed. Not mouse based,\n *  but it made sense in context.)\n */\nexport class MouseTool extends Tool {\n\n\tstatic DRAG_THRESHOLD = 4;\n\t\n\tinit({ coach, events = [] }) {\n\t\tsuper.init({ coach, events: [...events, 'mousedown'] });\n\t\t\n\t\tconst mousemove = this.windowE('mousemove');\n\t\tconst mouseup   = this.windowE('mouseup');\n\t\tconst keydown   = this.windowE('keydown');\n\t\t\n\t\tthis.mouseMachine = new Machine('Mouse', { state: 'IDLE' });\n\t\t\n\t\tlet selectedArtefact = null; // TODO: Why is this needed? .withLatestFrom() isn't working.\n\t\tcoach.p('selectedArtefact').subscribe((a) => { selectedArtefact = a });\n\t\t\n\t\tthis.mouseMachine.extend(({ enterState }) => ({\n\t\t\t'IDLE': () => [\n\t\t        this.e('mousedown')\n\t\t            .filter(() => this.active)\n\t\t            .map(e => [e, selectedArtefact])\n\t\t            .filter(([e, a]) => !!a)\n\t\t            .map(([e, artefact]) => ({\n\t\t\t            point:    e.point,\n\t\t\t\t        artefact: artefact,\n\t\t\t            ...e::pick('shiftKey', 'ctrlKey', 'altKey')\n\t\t\t        }))\n\t\t\t        ::enterState('THRESHOLD'),\n\t\t        keydown::which(KEY_ESCAPE)::enterState('ESCAPING')\n\t\t\t],\n\t\t\t'THRESHOLD': (args) => [\n\t\t\t\tmousemove\n\t\t\t\t\t.filter(() => this.active)\n\t\t\t\t\t.take(MouseTool.DRAG_THRESHOLD)\n\t\t\t\t\t.ignoreElements()\n\t\t\t\t\t::emitWhenComplete(args)\n\t\t\t\t\t::enterState('DRAGGING'),\n\t\t\t    mouseup\n\t\t\t\t    ::enterState('CLICKING'),\n\t\t\t    keydown\n\t\t\t\t\t::which(KEY_ESCAPE)\n\t\t\t        ::enterState('ESCAPING')\n\t\t\t],\n\t\t\t'DRAGGING': () => [\n\t            mouseup::enterState('DROPPING'),\n                keydown::which(KEY_ESCAPE)::enterState('ESCAPING')\n\t\t\t],\n\t\t\t'CLICKING': () => { enterState('IDLE') },\n\t\t\t'DROPPING': () => { enterState('IDLE') },\n\t\t\t'ESCAPING': () => { enterState('IDLE') }\n\t\t}));\n\t}\n\t\n}\n",
    "static": true,
    "longname": "src/tools/MouseTool.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 178,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/tools/MouseTool.js",
    "static": true,
    "longname": "src/tools/MouseTool.js~_extends",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/MouseTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 179,
    "kind": "variable",
    "name": "KEY_ESCAPE",
    "memberof": "src/tools/MouseTool.js",
    "static": true,
    "longname": "src/tools/MouseTool.js~KEY_ESCAPE",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/MouseTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 180,
    "kind": "class",
    "name": "MouseTool",
    "memberof": "src/tools/MouseTool.js",
    "static": true,
    "longname": "src/tools/MouseTool.js~MouseTool",
    "access": null,
    "export": true,
    "importPath": "boxer/src/tools/MouseTool.js",
    "importStyle": "{MouseTool}",
    "description": "An abstract tool used to create other tools that use mouse input.\nIt supplies a state machine with meaningful mouse-based states.\n(Also happens to signal when ESCAPE is pressed. Not mouse based,\n but it made sense in context.)",
    "lineNumber": 19,
    "interface": false,
    "extends": [
      "src/tools/Tool.js~Tool"
    ]
  },
  {
    "__docId__": 181,
    "kind": "method",
    "name": "init",
    "memberof": "src/tools/MouseTool.js~MouseTool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/MouseTool.js~MouseTool#init",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"coach\": *, \"events\": *}"
        ],
        "defaultRaw": {
          "coach": null,
          "events": null
        },
        "defaultValue": "{\"coach\":null,\"events\":null}"
      }
    ]
  },
  {
    "__docId__": 182,
    "kind": "member",
    "name": "mouseMachine",
    "memberof": "src/tools/MouseTool.js~MouseTool",
    "static": false,
    "longname": "src/tools/MouseTool.js~MouseTool#mouseMachine",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 183,
    "kind": "file",
    "name": "src/tools/MoveTool.js",
    "content": "import $ from '../libs/jquery.js';\nimport {isFunction} from 'lodash-bound';\nimport CSSPrefix from 'cssprefix/src/cssprefix';\n\nimport {Observable} from '../libs/expect-rxjs.js';\n\nimport {handleBoxer} from '../Coach.js';\nimport {withoutMod, match} from 'utilities';\n\nimport {snap45} from \"../util/svg\";\nimport {MouseTool} from './MouseTool';\nimport {callIfFunction} from '../util/misc';\nimport Machine from '../util/Machine';\n\n\n/**\n * A tool for moving artefacts around, and in and out of other artefacts,\n * using drag-and-drop.\n */\nexport class MoveTool extends MouseTool {\n\t\n\tinit({ coach }) {\n\t\tsuper.init({ coach });\n\t\t\n\t\t/* relevant mouse events */\n\t\tconst mousemove = this.windowE('mousemove');\n\t\tconst threshold = this.mouseMachine.THRESHOLD\n\t\t\t.filter(withoutMod('shift', 'ctrl', 'alt'))\n\t\t\t::handleBoxer('movable');\n\t\tconst dragging = this.mouseMachine.DRAGGING\n\t\t\t::handleBoxer('movable');\n\t\tconst dropping = this.mouseMachine.DROPPING;\n\t\tconst escaping = this.mouseMachine.ESCAPING;\n\t\t\n\t\t/* main state machine of this tool */\n\t\tconst localMachine = new Machine('MoveTool', { state: 'IDLE' });\n\t\tlocalMachine.extend(({ enterState, subscribeDuringState }) => ({\n\t\t\t'IDLE': () => {\n\t\t\t\t\t\t\n\t\t\t\t// console.log('(((IDLE)))');\n\t\t\t\t\n\t\t\t\tthreshold::enterState('THRESHOLD');\n\t\t\t\tcoach.selectTool.reacquire();\n\t\t\t},\n\t\t\t'THRESHOLD': () => {\n\t\t\t\t\t\t\n\t\t\t\t// console.log('(((THRESHOLD)))');\n\t\t\t\n\t\t\t\tdragging::enterState('DRAGGING');\n\t\t\t\tthis.mouseMachine.IDLE::enterState('IDLE');\n\t\t\t},\n\t\t\t'DRAGGING': (args) => {\n\t\t\t\t\t\t\n\t\t\t\t// console.log('(((DRAGGING)))');\n\t\t\t\n\t\t\t\tconst {point, artefact, before, after, cancel, referencePoint = point} = args;\n\t\t\t\t\n\t\t\t\t/* drag initialization */\n\t\t\t\tartefact.handlesActive = false;\n\t\t\t\tcoach.selectTool.reacquire();\n\t\t\t\tartefact.moveToFront();\n\t\t\t\tif (before::isFunction()) { before(args) }\n\t\t\t\t\n\t\t\t\t/* record start transformation */\n\t\t\t\tconst transformationStart = artefact.transformation;\n\n\t\t\t\t/* move while dragging */\n\t\t\t\tmousemove::subscribeDuringState((moveEvent) => {\n\t\t\t\t\tlet mouseVector = moveEvent.point.in(artefact.svg.children);\n\t\t\t\t\tif (referencePoint && moveEvent.ctrlKey) {\n\t\t\t\t\t\tmouseVector = mouseVector::snap45(referencePoint);\n\t\t\t\t\t}\n\t\t\t\t\tlet translationDiff = mouseVector.minus(point);\n\t\t\t\t\tartefact.transformation = transformationStart\n\t\t\t\t\t\t.translate(...translationDiff.xy);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t/* cancel or stop dragging */\n\t\t\t\t// TODO: don't use exceptions for cancellation; separate it from the concept of dropping\n\t\t\t\tObservable.merge(\n\t\t\t\t\tescaping\n\t\t\t\t\t\t.concatMap(Observable.throw()),\n\t\t\t\t\tdropping\n\t\t\t\t\t\t.map(({point, target}) => ({ dropzone: $(target).data('boxer-handlers').dropzone, point }))\n\t\t\t\t\t\t.do(({dropzone: {after}}) => { after::callIfFunction(args) })\n\t\t\t\t).catch((error, caught) => {\n\t\t\t\t\t/* cancel dragging */\n\t\t\t\t\tartefact.transformation = transformationStart;\n\t\t\t\t\tcancel::callIfFunction(args);\n\t\t\t\t\treturn Observable.of({});\n                }).do(({point}) => {\n\t\t\t\t\t/* stop dragging */\n\t\t\t\t\tartefact.handlesActive = true;\n\t\t\t\t\tartefact.moveToFront();\n\t\t\t\t\tcoach.selectTool.reacquire(point);\n\t\t\t\t\tafter::callIfFunction(args);\n\t\t\t\t})::enterState('IDLE');\n\t\t\t\t\n\t\t\t}\n\t\t}));\n\t\t\n\t\t\n\t\t/* mutual exclusion between this machine and other machines, coordinated by coach.stateMachine */\n\t\tlocalMachine.extend(() => ({ 'OTHER_TOOL': ()=>{} }));\n\t\tcoach.stateMachine.extend(() => ({ 'IDLE': ()=>{}, 'BUSY': ()=>{} }));\n\t\tlocalMachine.link('IDLE',       coach.stateMachine.BUSY.filter(({tool}) => tool !== this).map(()=>localMachine.data), 'OTHER_TOOL');\n\t\tlocalMachine.link('OTHER_TOOL', coach.stateMachine.IDLE.filter(({tool}) => tool !== this).map(()=>localMachine.data), 'IDLE');\n\t\tcoach.stateMachine.link('IDLE', localMachine.DRAGGING.map(() => ({ tool: this })), 'BUSY');\n\t\tcoach.stateMachine.link('BUSY', localMachine.IDLE    .map(() => ({ tool: this })), 'IDLE');\n\t\t\n\t\t/* prep for highlighting and mouse cursors */\n\t\tconst handlerArtefactOrNull = (key) => (a) => (a && a.handlers[key]) ? a.handlers[key].artefact : null;\n\t\tconst movableArtefact  = coach.p('selectedArtefact').map(handlerArtefactOrNull('movable'));\n\t\tconst dropzoneArtefact = coach.p('selectedArtefact').map(handlerArtefactOrNull('dropzone'));\n\t\t\n\t\t/* highlighting */\n\t\tcoach.highlightTool.register(this, localMachine.p('state').switchMap(state => match(state)({\n\t\t\t'IDLE':       movableArtefact,//.do((ma) => { console.log('---', ma && ma.constructor.name) }),\n\t\t\t'THRESHOLD':  movableArtefact,\n\t\t\t'DRAGGING':   dropzoneArtefact.startWith(null),\n\t\t\t'OTHER_TOOL': Observable.of(null)\n\t\t})).map(artefact => artefact && {\n\t\t\t...coach.highlightTool.HIGHLIGHT_DEFAULT,\n\t\t\tartefact\n\t\t}));\n\t\t\n\t\t/* mouse cursors */\n\t\tconst grabCursor     = CSSPrefix.getValue('cursor', 'grab'    );\n\t\tconst grabbingCursor = CSSPrefix.getValue('cursor', 'grabbing');\n\t\tcoach.mouseCursorTool.register(this, localMachine.p('state').startWith(null).pairwise().switchMap(([prev, next]) => match(next)({\n\t\t\t'IDLE':       movableArtefact.map(ma => ma && grabCursor).startWith(prev && grabCursor),\n\t\t\t'THRESHOLD':  Observable.of(grabbingCursor),\n\t\t\t'DRAGGING':   Observable.of(grabbingCursor),\n\t\t\t'OTHER_TOOL': Observable.of(null)\n\t\t})));\n\t\t\n\t}\n\t\n\t\n\t\n}\n\n",
    "static": true,
    "longname": "src/tools/MoveTool.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 184,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/tools/MoveTool.js",
    "static": true,
    "longname": "src/tools/MoveTool.js~_extends",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/MoveTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 185,
    "kind": "class",
    "name": "MoveTool",
    "memberof": "src/tools/MoveTool.js",
    "static": true,
    "longname": "src/tools/MoveTool.js~MoveTool",
    "access": null,
    "export": true,
    "importPath": "boxer/src/tools/MoveTool.js",
    "importStyle": "{MoveTool}",
    "description": "A tool for moving artefacts around, and in and out of other artefacts,\nusing drag-and-drop.",
    "lineNumber": 21,
    "interface": false,
    "extends": [
      "src/tools/MouseTool.js~MouseTool"
    ]
  },
  {
    "__docId__": 186,
    "kind": "method",
    "name": "init",
    "memberof": "src/tools/MoveTool.js~MoveTool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/MoveTool.js~MoveTool#init",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"coach\": *}"
        ],
        "defaultRaw": {
          "coach": null
        },
        "defaultValue": "{\"coach\":null}"
      }
    ]
  },
  {
    "__docId__": 187,
    "kind": "file",
    "name": "src/tools/PanTool.js",
    "content": "import {isFunction} from 'lodash-bound';\nimport {Observable} from '../libs/expect-rxjs.js';\nimport CSSPrefix from 'cssprefix/src/cssprefix';\n\nimport {match} from 'utilities';\n\nimport {handleBoxer} from '../Coach.js';\nimport {MouseTool} from './MouseTool';\nimport Machine from '../util/Machine';\n\nimport KeyCode from 'keycode-js';\nimport {callIfFunction} from '../util/misc';\n\nconst {KEY_ESCAPE} = KeyCode;\n\nconst {max, sign, abs} = Math;\n\nconst DRAWING_BOX   = 'DRAWING_BOX';\nconst DRAWING_GLYPH = 'DRAWING_GLYPH';\nconst DRAWING_EDGE  = 'DRAWING_EDGE';\nconst DRAWING_EDGES = 'DRAWING_EDGES';\nconst MODES = [\n\tDRAWING_BOX,\n\tDRAWING_GLYPH,\n\tDRAWING_EDGE,\n\tDRAWING_EDGES\n];\n\n\n/**\n * A tool for panning the main canvas using drag-and-drop.\n */\nexport class PanTool extends MouseTool {\n\t\n\tinit({coach}) {\n\t\tsuper.init({ coach });\n\t\t\n\t\tconst mousemove = this.windowE('mousemove');\n\t\tconst idle      = this.mouseMachine.IDLE;\n\t\tconst threshold = this.mouseMachine.THRESHOLD\n\t\t\t::handleBoxer('pannable');\n\t\tconst dragging = this.mouseMachine.DRAGGING\n\t\t\t::handleBoxer('pannable');\n\t\tconst dropping = this.mouseMachine.DROPPING;\n\t\t\n\t\t/* local state machine */\n\t\tconst localMachine = new Machine(this.constructor.name, { state: 'IDLE' });\n\t\tlocalMachine.extend(({ enterState, subscribeDuringState }) => ({\n\t\t\t'IDLE': () => {\n\t\t\t\tthreshold::enterState('THRESHOLD');\n\t\t\t},\n\t\t\t'THRESHOLD': () => {\n\t\t\t\tdragging::enterState('PANNING');\n\t\t\t\tidle    ::enterState('IDLE');\n\t\t\t},\n\t\t\t'PANNING': (args) => {\n\t\t\t\tconst {before, after, point, artefact} = args;\n\t\t\t\t\n\t\t\t\t/* pan initialization */\n\t\t\t\tif (before::isFunction()) { before(args) }\n\t\t\t\t\n\t\t\t\t/* record start dimensions and mouse position */\n\t\t\t\tconst start = {\n\t\t\t\t\ttransformation: artefact.transformation,\n\t\t\t\t\tmouse:          point\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\t/* resize while dragging */\n\t\t\t\tmousemove\n\t\t\t\t\t.map(event => event.point.in(artefact.svg.children).minus(start.mouse))\n\t\t\t\t\t.map(({x: xDiff, y: yDiff}) => start.transformation.translate(xDiff, yDiff))\n\t\t\t\t\t::subscribeDuringState((m) => { artefact.transformation = m });\n\t\t\t\t\n\t\t\t\t/* cancel or stop dragging */\n\t\t\t\tdropping.do(({point}) => {\n\t\t\t\t\t/* stop drawing */\n\t\t\t\t\t// coach.selectTool.reacquire(point);\n\t\t\t\t\tcoach.selectTool.reacquire();\n\t\t\t\t\tafter::callIfFunction(); // TODO: pass args?\n\t\t\t\t})::enterState('IDLE');\n\t\t\t\t\n\t\t\t}\n\t\t}));\n\t\t\n\t\t/* mutual exclusion between this machine and other machines, coordinated by coach.stateMachine */\n\t\tlocalMachine.extend(() => ({ 'OTHER_TOOL': ()=>{} }));\n\t\tcoach.stateMachine.extend(() => ({ 'IDLE': ()=>{}, 'BUSY': ()=>{} }));\n\t\tlocalMachine.link('IDLE',       coach.stateMachine.BUSY.filter(({tool}) => tool !== this).map(()=>localMachine.data), 'OTHER_TOOL');\n\t\tlocalMachine.link('OTHER_TOOL', coach.stateMachine.IDLE.filter(({tool}) => tool !== this).map(()=>localMachine.data), 'IDLE');\n\t\tcoach.stateMachine.link('IDLE', localMachine.PANNING.map(() => ({ tool: this })), 'BUSY');\n\t\tcoach.stateMachine.link('BUSY', localMachine.IDLE   .map(() => ({ tool: this })), 'IDLE');\n\t\t\n\t\t/* prep for mouse cursors */\n\t\tconst handlerArtefactOrNull = (key) => (a) => (a && a.handlers[key]) ? a.handlers[key].artefact : null;\n\t\tconst canvasArtefact = coach.p('selectedArtefact').map(handlerArtefactOrNull('pannable'));\n\t\t\n\t\t/* mouse cursors */\n\t\tconst grabCursor     = CSSPrefix.getValue('cursor', 'grab'    );\n\t\tconst grabbingCursor = CSSPrefix.getValue('cursor', 'grabbing');\n\t\tcoach.mouseCursorTool.register(this, localMachine.p('state').startWith(null).pairwise().switchMap(([prev, next]) => match(next)({\n\t\t\t'IDLE':       canvasArtefact.map(ma => ma && grabCursor).startWith(prev && grabCursor),\n\t\t\t'THRESHOLD':  Observable.of(grabbingCursor),\n\t\t\t'PANNING':    Observable.of(grabbingCursor),\n\t\t\t'OTHER_TOOL': Observable.of(null)\n\t\t})));\n\t}\n}\n",
    "static": true,
    "longname": "src/tools/PanTool.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 188,
    "kind": "variable",
    "name": "KEY_ESCAPE",
    "memberof": "src/tools/PanTool.js",
    "static": true,
    "longname": "src/tools/PanTool.js~KEY_ESCAPE",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/PanTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 189,
    "kind": "variable",
    "name": "max",
    "memberof": "src/tools/PanTool.js",
    "static": true,
    "longname": "src/tools/PanTool.js~max",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/PanTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 190,
    "kind": "variable",
    "name": "DRAWING_BOX",
    "memberof": "src/tools/PanTool.js",
    "static": true,
    "longname": "src/tools/PanTool.js~DRAWING_BOX",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/PanTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 191,
    "kind": "variable",
    "name": "DRAWING_GLYPH",
    "memberof": "src/tools/PanTool.js",
    "static": true,
    "longname": "src/tools/PanTool.js~DRAWING_GLYPH",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/PanTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 192,
    "kind": "variable",
    "name": "DRAWING_EDGE",
    "memberof": "src/tools/PanTool.js",
    "static": true,
    "longname": "src/tools/PanTool.js~DRAWING_EDGE",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/PanTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 193,
    "kind": "variable",
    "name": "DRAWING_EDGES",
    "memberof": "src/tools/PanTool.js",
    "static": true,
    "longname": "src/tools/PanTool.js~DRAWING_EDGES",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/PanTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 194,
    "kind": "variable",
    "name": "MODES",
    "memberof": "src/tools/PanTool.js",
    "static": true,
    "longname": "src/tools/PanTool.js~MODES",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/PanTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 195,
    "kind": "class",
    "name": "PanTool",
    "memberof": "src/tools/PanTool.js",
    "static": true,
    "longname": "src/tools/PanTool.js~PanTool",
    "access": null,
    "export": true,
    "importPath": "boxer/src/tools/PanTool.js",
    "importStyle": "{PanTool}",
    "description": "A tool for panning the main canvas using drag-and-drop.",
    "lineNumber": 27,
    "interface": false,
    "extends": [
      "src/tools/MouseTool.js~MouseTool"
    ]
  },
  {
    "__docId__": 196,
    "kind": "method",
    "name": "init",
    "memberof": "src/tools/PanTool.js~PanTool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/PanTool.js~PanTool#init",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"coach\": *}"
        ],
        "defaultRaw": {
          "coach": null
        },
        "defaultValue": "{\"coach\":null}"
      }
    ]
  },
  {
    "__docId__": 197,
    "kind": "file",
    "name": "src/tools/ResizeTool.js",
    "content": "import $ from '../libs/jquery.js';\nimport {assign, isFunction} from 'lodash-bound';\nimport {Observable} from '../libs/expect-rxjs.js';\n\nimport {withoutMod, match} from 'utilities';\n\nimport {M21, M22} from \"../util/svg\";\n\nimport {handleBoxer} from '../Coach.js';\nimport {MouseTool} from './MouseTool';\nimport {plainDOM} from '../libs/jquery';\nimport Machine from '../util/Machine';\nimport {callIfFunction} from '../util/misc';\n\nconst {min, max, floor} = Math;\n\n\n/**\n * A tool for resizing boxes by dragging its borders or corners with the mouse.\n */\nexport class ResizeTool extends MouseTool {\n\t\n\tinit({coach}) {\n\t\tsuper.init({ coach });\n\t\t\n\t\t/* extend state machine */\n\t\tconst mousemove = this.windowE('mousemove');\n\t\tconst threshold = this.mouseMachine.THRESHOLD\n\t\t\t.filter(() => this.active)\n\t\t\t.filter(withoutMod('shift', 'ctrl', 'alt'))\n\t\t\t::handleBoxer('resizable');\n\t\tconst dragging = this.mouseMachine.DRAGGING\n\t\t\t.filter(() => this.active)\n\t\t\t::handleBoxer('resizable');\n\t\tconst dropping = this.mouseMachine.DROPPING;\n\t\tconst escaping = this.mouseMachine.ESCAPING;\n\t\t\n\t\t/* determining proper resizing cursor */\n\t\tconst borderCursor = (handler) => {\n\t\t\tif (!handler) { return null }\n\t\t\t\n\t\t\tlet m = handler.artefact.svg.main::plainDOM().getScreenCTM();\n\t\t\tlet angle = Math.atan2(m[M21], m[M22]) * 180 / Math.PI;\n\n\t\t\tlet {x, y} = handler.directions;\n\t\t\tx = (x === -1) ? '-' : (x === 1) ? '+' : '0';\n\t\t\ty = (y === -1) ? '-' : (y === 1) ? '+' : '0';\n\t\t\tswitch (x+' '+y) {\n\t\t\t\tcase '0 -': { angle +=   0 } break;\n\t\t\t\tcase '+ -': { angle +=  45 } break;\n\t\t\t\tcase '+ 0': { angle +=  90 } break;\n\t\t\t\tcase '+ +': { angle += 135 } break;\n\t\t\t\tcase '0 +': { angle += 180 } break;\n\t\t\t\tcase '- +': { angle += 225 } break;\n\t\t\t\tcase '- 0': { angle += 270 } break;\n\t\t\t\tcase '- -': { angle += 315 } break;\n\t\t\t}\n\t\t\tangle = (angle + 360) % 360;\n\t\t\treturn [\n\t\t\t\t'ns-resize',   // 0,   0°:  |\n\t\t\t\t'nesw-resize', // 1,  45°:  /\n\t\t\t\t'ew-resize',   // 2,  90°:  -\n\t\t\t\t'nwse-resize'  // 3, 135°:  \\\n\t\t\t][floor((angle + 180/8) % 180 / (180/4)) % 4];\n\t\t};\n\t\t\n\t\t/* main state machine of this tool */\n\t\tconst localMachine = new Machine('ResizeTool', { state: 'IDLE' });\n\t\tlocalMachine.extend(({ enterState, subscribeDuringState }) => ({\n\t\t\t'IDLE': () => {\n\t\t\t\tthreshold::enterState('THRESHOLD');\n\t\t\t\tcoach.selectTool.reacquire();\n\t\t\t},\n\t\t\t'THRESHOLD': () => {\n\t\t\t\tdragging::enterState('DRAGGING');\n\t\t\t\tthis.mouseMachine.IDLE::enterState('IDLE');\n\t\t\t},\n\t\t\t'DRAGGING': (args) => {\n\t\t\t\tconst {point, artefact, before, after, cancel, directions} = args;\n\t\t\t\t\n\t\t\t\t/* drag initialization */\n\t\t\t\tartefact.handlesActive = false;\n\t\t\t\tcoach.selectTool.reacquire();\n\t\t\t\tartefact.moveToFront();\n\t\t\t\tif (before::isFunction()) { before(args) }\n\t\t\t\t\n\t\t\t\t/* record start dimensions and mouse position */\n\t\t\t\tconst start = {\n\t\t\t\t\ttransformation: artefact.transformation,\n\t\t\t\t\twidth:          artefact.width,\n\t\t\t\t\theight:         artefact.height,\n\t\t\t\t\tmouse:          point\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\t/* resize while dragging */\n\t\t\t\tmousemove\n\t\t\t\t\t.map(event => event.point.in(artefact.svg.children).minus(start.mouse))\n\t\t\t\t\t::subscribeDuringState(({x: xDiff, y: yDiff}) => {\n\t\t\t\t\t\txDiff = directions.x * max(directions.x * xDiff, artefact.minWidth  - start.width );\n\t\t\t\t\t\tyDiff = directions.y * max(directions.y * yDiff, artefact.minHeight - start.height);\n\t\t\t\t\t\tartefact::assign({\n\t\t\t\t\t\t\ttransformation: start.transformation.translate(xDiff/2, yDiff/2),\n\t\t\t\t\t\t\twidth:          start.width  + directions.x * xDiff,\n\t\t\t\t\t\t\theight:         start.height + directions.y * yDiff\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\n\t\t\t\t/* cancel or stop dragging */\n\t\t\t\tObservable.merge(\n\t\t\t\t\tescaping.concatMap(Observable.throw()),\n\t\t\t\t\tdropping.map(({point, target}) => ({\n\t\t\t\t\t\tdropzone: $(target).data('boxer-handlers').dropzone,\n\t\t\t\t\t\tpoint\n\t\t\t\t\t})).do(({dropzone}) => {\n\t\t\t\t\t\t// artefact.parent = dropzone.artefact; // TODO: Maybe we'll need this to snap borders\n\t\t\t\t\t\tdropzone.after::callIfFunction(args);\n\t\t\t\t\t})\n\t\t\t\t).catch((error, caught) => {\n\t\t\t\t\t/* cancel dragging */\n\t\t\t\t\tartefact.transformation = start.transformation;\n\t\t\t\t\tartefact.width  = start.width;\n\t\t\t\t\tartefact.height = start.height;\n\t\t\t\t\tcancel::callIfFunction(args);\n\t\t\t\t\treturn Observable.of({});\n                }).map(({point}) => {\n\t\t\t\t\t/* stop dragging */\n\t\t\t\t\tartefact.handlesActive = true;\n\t\t\t\t\tartefact.moveToFront();\n\t\t\t\t\tcoach.selectTool.reacquire(point);\n\t\t\t\t\tafter::callIfFunction(); // TODO: pass args?\n\t\t\t\t\treturn { ...args, point };\n\t\t\t\t})::enterState('IDLE');\n\t\t\t\t\n\t\t\t}\n\t\t}));\n\t\t\n\t\t/* mutual exclusion between this machine and other machines, coordinated by coach.stateMachine */\n\t\tlocalMachine.extend(() => ({ 'OTHER_TOOL': ()=>{} }));\n\t\tcoach.stateMachine.extend(() => ({ 'IDLE': ()=>{}, 'BUSY': ()=>{} }));\n\t\tlocalMachine.link('IDLE',       coach.stateMachine.BUSY.filter(({tool}) => tool !== this).map(()=>localMachine.data), 'OTHER_TOOL');\n\t\tlocalMachine.link('OTHER_TOOL', coach.stateMachine.IDLE.filter(({tool}) => tool !== this).map(()=>localMachine.data), 'IDLE');\n\t\tcoach.stateMachine.link('IDLE', localMachine.DRAGGING.map(() => ({ tool: this })), 'BUSY');\n\t\tcoach.stateMachine.link('BUSY', localMachine.IDLE    .map(() => ({ tool: this })), 'IDLE');\n\t\t\n\t\t/* prep for highlighting and mouse cursors */\n\t\tconst handlerOrNull = (key) => (a) => (a && a.handlers[key] && a.handlers['highlightable']) ? a.handlers[key] : null;\n\t\tconst resizableArtefact = coach.p('selectedArtefact').map((originalArtefact) => {\n\t\t\tlet handler = handlerOrNull('resizable')(originalArtefact);\n\t\t\tif (!handler) { return null }\n\t\t\treturn { originalArtefact, ...handler };\n\t\t});\n\t\t\n\t\t/* highlighting */\n\t\tcoach.highlightTool.register(this, localMachine.p(['state', 'data']).switchMap(([state, data]) => match(state)({\n\t\t\t'IDLE':       resizableArtefact,\n\t\t\t'THRESHOLD':  Observable.of(data),\n\t\t\t'DRAGGING':   Observable.of(data),\n\t\t\t'OTHER_TOOL': Observable.of(null)\n\t\t})).map((handler) => handler && {\n\t\t\t...coach.highlightTool.HIGHLIGHT_DEFAULT,\n\t\t\tartefact: handler.originalArtefact\n\t\t}));\n\t\t \n\t\t/* mouse cursors */\n\t\tcoach.mouseCursorTool.register(this, localMachine.p(['state', 'data']).switchMap(([state, data]) => match(state)({\n\t\t\t'IDLE':       resizableArtefact.map(borderCursor),\n\t\t\t'THRESHOLD':  Observable.of(borderCursor(data)),\n\t\t\t'DRAGGING':   Observable.of(borderCursor(data)),\n\t\t\t'OTHER_TOOL': Observable.of(null)\n\t\t})));\n\t\t\n\t}\n}\n",
    "static": true,
    "longname": "src/tools/ResizeTool.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 198,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/tools/ResizeTool.js",
    "static": true,
    "longname": "src/tools/ResizeTool.js~_extends",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/ResizeTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 199,
    "kind": "variable",
    "name": "min",
    "memberof": "src/tools/ResizeTool.js",
    "static": true,
    "longname": "src/tools/ResizeTool.js~min",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/ResizeTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 200,
    "kind": "class",
    "name": "ResizeTool",
    "memberof": "src/tools/ResizeTool.js",
    "static": true,
    "longname": "src/tools/ResizeTool.js~ResizeTool",
    "access": null,
    "export": true,
    "importPath": "boxer/src/tools/ResizeTool.js",
    "importStyle": "{ResizeTool}",
    "description": "A tool for resizing boxes by dragging its borders or corners with the mouse.",
    "lineNumber": 22,
    "interface": false,
    "extends": [
      "src/tools/MouseTool.js~MouseTool"
    ]
  },
  {
    "__docId__": 201,
    "kind": "method",
    "name": "init",
    "memberof": "src/tools/ResizeTool.js~ResizeTool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/ResizeTool.js~ResizeTool#init",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"coach\": *}"
        ],
        "defaultRaw": {
          "coach": null
        },
        "defaultValue": "{\"coach\":null}"
      }
    ]
  },
  {
    "__docId__": 202,
    "kind": "file",
    "name": "src/tools/RotateTool.js",
    "content": "import {isFunction} from 'lodash-bound';\n\nimport {TweenLite} from 'gsap/TweenLite';\n\nimport {handleBoxer} from '../Coach.js';\nimport {withoutMod, withMod, match} from 'utilities';\n\nimport {M21, M22, Point2D} from \"../util/svg\";\nimport {MouseTool} from './MouseTool';\nimport {plainDOM} from '../libs/jquery';\nimport {Observable} from '../libs/expect-rxjs.js';\nimport {callIfFunction} from '../util/misc';\nimport Machine from '../util/Machine';\nimport CSSPrefix from 'cssprefix/src/cssprefix';\n\nconst {floor, abs, round, atan2, PI} = Math;\n\n\n/**\n * A tool to rotate boxes and their content by drag-and-drop while SHIFT is pressed.\n */\nexport class RotateTool extends MouseTool {\n\t\n\tstatic SNAP_ANGLE = 45;\n\t\n\tinit({ coach }) {\n\t\tsuper.init({ coach });\n\t\t\n\t\t/* relevant mouse events */\n\t\tconst mousemove = this.windowE('mousemove');\n\t\tconst threshold = this.mouseMachine.THRESHOLD\n\t\t\t.filter(() => this.active)\n\t\t\t.filter(withMod('shift')).filter(withoutMod('ctrl'))\n\t\t\t::handleBoxer('rotatable');\n\t\tconst dragging = this.mouseMachine.DRAGGING\n\t\t\t.filter(() => this.active)\n\t\t\t::handleBoxer('rotatable');\n\t\tconst dropping = this.mouseMachine.DROPPING;\n\t\tconst escaping = this.mouseMachine.ESCAPING;\n\t\t\n\t\t/* main state machine of this tool */\n\t\tconst localMachine = new Machine(this.constructor.name, { state: 'IDLE' });\n\t\tlocalMachine.extend(({ enterState, subscribeDuringState }) => ({\n\t\t\t'IDLE': () => {\n\t\t\t\tthreshold::enterState('THRESHOLD');\n\t\t\t\tcoach.selectTool.reacquire();\n\t\t\t},\n\t\t\t'THRESHOLD': () => {\n\t\t\t\tdragging::enterState('DRAGGING');\n\t\t\t\tthis.mouseMachine.IDLE::enterState('IDLE');\n\t\t\t},\n\t\t\t'DRAGGING': (args) => {\n\t\t\t\tconst {point, artefact, before, after, cancel, referencePoint = point} = args;\n\t\t\t\t\n\t\t\t\t/* drag initialization */\n\t\t\t\tartefact.handlesActive = false;\n\t\t\t\tcoach.selectTool.reacquire();\n\t\t\t\tartefact.moveToFront();\n\t\t\t\tif (before::isFunction()) { before(args) }\n\t\t\t\t\n\t\t\t\t/* pre-processing */\n\t\t\t\tconst start = {};\n\t\t\t\tstart.transformation           = artefact.transformation;\n\t\t\t\tstart.angle                    = atan2(start.transformation[M21], start.transformation[M22]) * 180 / PI;\n\t\t\t\tstart.nonRotatedTransformation = start.transformation.rotate(-start.angle); // TODO: faster way to get non-rotated version of matrix (resetting M21 and M22?)\n\t\t\t\tstart.center                   = Point2D.fromMatrixTranslation(start.nonRotatedTransformation, artefact.svg.main.parent()::plainDOM());\n\t\t\t\tstart.mouseAngle               = referencePoint.minus(start.center).angle() - start.angle;\n\t\t\t\t\n\t\t\t\t/* rotate while dragging */\n\t\t\t\tlet tracking = {\n\t\t\t\t\tsnapping: false,\n\t\t\t\t\tangle:    start.angle\n\t\t\t\t};\n\t\t\t\tmousemove.map((moveEvent) => {\n\t\t\t\t\tlet angle = moveEvent.point.minus(start.center).angle();\n\t\t\t\t\tangle -= start.mouseAngle;\n\t\t\t\t\ttracking.snapping = moveEvent.altKey;\n\t\t\t\t\tif (tracking.snapping) {\n\t\t\t\t\t\tangle = round(angle / RotateTool.SNAP_ANGLE) * RotateTool.SNAP_ANGLE;\n\t\t\t\t\t}\n\t\t\t\t\treturn (angle + 360) % 360;\n\t\t\t\t}).distinctUntilChanged().switchMap((angle) => {\n\t\t\t\t\tif (tracking.snapping) {\n\t\t\t\t\t\tlet diff = angle - tracking.angle;\n\t\t\t\t\t\twhile (diff < -180) { angle += 360; diff += 360; }\n\t\t\t\t\t\twhile (diff > +180) { angle -= 360; diff -= 360; }\n\t\t\t\t\t\treturn Observable.create((obs) => TweenLite.to(\n\t\t\t\t\t\t\ttracking,\n\t\t\t\t\t\t\tabs(diff) / 45 * 0.2,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tangle,\n\t\t\t\t\t\t\t\tease: TweenLite.Power3.easeOut,\n\t\t\t\t\t\t\t\tonUpdate: ::obs.next,\n\t\t\t\t\t\t\t\tonComplete: () => { tracking.angle = (tracking.angle % 360 + 360) % 360 }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)).share().map(()=>tracking.angle);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn Observable.of(angle);\n\t\t\t\t\t}\n\t\t\t\t})::subscribeDuringState((angle) => {\n\t\t\t\t\tartefact.transformation = start.nonRotatedTransformation.rotate(angle);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t/* cancel or stop dragging */\n\t\t\t\tObservable.merge(\n\t\t\t\t\tescaping.concatMap(Observable.throw()),\n\t\t\t\t\tdropping\n\t\t\t\t).catch((error, caught) => {\n\t\t\t\t\t/* cancel dragging */\n\t\t\t\t\tartefact.transformation = start.transformation;\n\t\t\t\t\tcancel::callIfFunction(args);\n\t\t\t\t\treturn Observable.of({});\n                }).do(({point}) => {\n\t\t\t\t\t/* stop dragging */\n\t\t\t\t\tartefact.handlesActive = true;\n\t\t\t\t\tcoach.selectTool.reacquire(point);\n\t\t\t\t\tafter::callIfFunction(); // TODO: pass args?\n\t\t\t\t})::enterState('IDLE');\n\t\t\t\t\n\t\t\t}\n\t\t}));\n\t\t\n\t\t/* mutual exclusion between this machine and other machines, coordinated by coach.stateMachine */\n\t\tlocalMachine.extend(() => ({ 'OTHER_TOOL': ()=>{} }));\n\t\tcoach.stateMachine.extend(() => ({ 'IDLE': ()=>{}, 'BUSY': ()=>{} }));\n\t\tlocalMachine.link('IDLE',       coach.stateMachine.BUSY.filter(({tool}) => tool !== this).map(()=>localMachine.data), 'OTHER_TOOL');\n\t\tlocalMachine.link('OTHER_TOOL', coach.stateMachine.IDLE.filter(({tool}) => tool !== this).map(()=>localMachine.data), 'IDLE');\n\t\tcoach.stateMachine.link('IDLE', localMachine.DRAGGING.map(() => ({ tool: this })), 'BUSY');\n\t\tcoach.stateMachine.link('BUSY', localMachine.IDLE    .map(() => ({ tool: this })), 'IDLE');\n\t\t\n\t\t/* prep for highlighting and mouse cursors */\n\t\tconst handlerOrNull = (key) => (a) => (a && a.handlers[key] && a.handlers['highlightable']) ? a.handlers[key].artefact : null;\n\t\tconst rotatableArtefact = coach.p('selectedArtefact').map((originalArtefact) => {\n\t\t\tlet handler = handlerOrNull('rotatable')(originalArtefact);\n\t\t\tif (!handler) { return null }\n\t\t\treturn { originalArtefact, ...handler };\n\t\t});\n\t\t\n\t\t/* highlighting */\n\t\tcoach.highlightTool.register(this, localMachine.p(['state', 'data']).switchMap(([state, data]) => match(state)({\n\t\t\t'IDLE':       rotatableArtefact,\n\t\t\t'THRESHOLD':  Observable.of(data),\n\t\t\t'DRAGGING':   Observable.of(data),\n\t\t\t'OTHER_TOOL': Observable.of(null)\n\t\t})).map(handler => handler && {\n\t\t\t...coach.highlightTool.HIGHLIGHT_DEFAULT,\n\t\t\tartefact: handler.originalArtefact\n\t\t}));\n\t\t\n\t\t/* mouse cursors */\n\t\tconst grabCursor     = CSSPrefix.getValue('cursor', 'grab'    );\n\t\tconst grabbingCursor = CSSPrefix.getValue('cursor', 'grabbing');\n\t\tcoach.mouseCursorTool.register(this, localMachine.p('state').startWith(null).pairwise().switchMap(([prev, next]) => match(next)({\n\t\t\t'IDLE':       rotatableArtefact.map(ma => ma && grabCursor).startWith(prev && grabCursor),\n\t\t\t'THRESHOLD':  Observable.of(grabbingCursor),\n\t\t\t'DRAGGING':   Observable.of(grabbingCursor),\n\t\t\t'OTHER_TOOL': Observable.of(null)\n\t\t})));\n\t\t\n\t}\n\t\n\t\n\t\n}\n\n",
    "static": true,
    "longname": "src/tools/RotateTool.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 203,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/tools/RotateTool.js",
    "static": true,
    "longname": "src/tools/RotateTool.js~_extends",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/RotateTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "variable",
    "name": "floor",
    "memberof": "src/tools/RotateTool.js",
    "static": true,
    "longname": "src/tools/RotateTool.js~floor",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/RotateTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 205,
    "kind": "class",
    "name": "RotateTool",
    "memberof": "src/tools/RotateTool.js",
    "static": true,
    "longname": "src/tools/RotateTool.js~RotateTool",
    "access": null,
    "export": true,
    "importPath": "boxer/src/tools/RotateTool.js",
    "importStyle": "{RotateTool}",
    "description": "A tool to rotate boxes and their content by drag-and-drop while SHIFT is pressed.",
    "lineNumber": 23,
    "interface": false,
    "extends": [
      "src/tools/MouseTool.js~MouseTool"
    ]
  },
  {
    "__docId__": 206,
    "kind": "method",
    "name": "init",
    "memberof": "src/tools/RotateTool.js~RotateTool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/RotateTool.js~RotateTool#init",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"coach\": *}"
        ],
        "defaultRaw": {
          "coach": null
        },
        "defaultValue": "{\"coach\":null}"
      }
    ]
  },
  {
    "__docId__": 207,
    "kind": "file",
    "name": "src/tools/SelectTool.js",
    "content": "import $ from '../libs/jquery.js';\nimport Tool from './Tool';\nimport {handleBoxer} from '../Coach.js';\nimport {Observable} from '../libs/expect-rxjs.js';\nimport {withMod} from 'utilities';\nimport {elementController} from '../Coach';\nimport {Point2D} from '../util/svg';\n\n\n/**\n * A tool that keeps track of which artefact is 'selected'. That is,\n * which artefact has the mouse currently pointing at it, but also\n * taking other factors into account. For example, the selection\n * can be shifted along the artefact nesting hierarchy by using the\n * scroll-wheel while ALT is pressed.\n */\nexport class SelectTool extends Tool {\n\t\n\tinit({coach}) {\n\t\tsuper.init({ coach, events: ['mouseover', 'mouseout', 'mouseenter', 'mouseleave'] });\n\t\t\n\t\tthis.reacquire = ()=>{};\n\t\tconst reacquires = Observable.create((observer) => {\n\t\t\tthis.reacquire = (point) => {\n\t\t\t\tlet element;\n\t\t\t\tif (point) {\n\t\t\t\t\tpoint = point.in(coach.root.svg.children);\n\t\t\t\t\tlet {left, top} = coach.root.svg.main.offset();\n\t\t\t\t\telement = document.elementFromPoint(\n\t\t\t\t\t\tleft + point.x,\n\t\t\t\t\t\ttop  + point.y\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tlet hover = $(':hover');\n\t\t\t\t\telement = hover[hover.length-1];\n\t\t\t\t}\n\t\t\t\tif (element instanceof SVGElement) {\n\t\t\t\t\tobserver.next({\n\t\t\t\t\t\tartefact: elementController(element),\n\t\t\t\t\t\tpoint: new Point2D({ x: 0, y: 0, coordinateSystem: element })\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn () => {\n\t\t\t\tthis.reacquire = ()=>{};\n\t\t\t};\n\t\t}).share();\n\t\t\n\t\tcoach.setSelectedArtefact = ()=>{};\n\t\tconst apiAcquires = Observable.create((observer) => {\n\t\t\tcoach.setSelectedArtefact = (artefact) => {\n\t\t\t\tif (!artefact) {\n\t\t\t\t\tobserver.next(null);\n\t\t\t\t} else {\n\t\t\t\t\tconst element = artefact.svg.handles.find('*')[0];\n\t\t\t\t\tif (element) {\n\t\t\t\t\t\tobserver.next({\n\t\t\t\t\t\t\tartefact: elementController(element),\n\t\t\t\t\t\t\tpoint: new Point2D({ x: 0, y: 0, coordinateSystem: element })\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn () => {\n\t\t\t\tcoach.setSelectedArtefact = ()=>{};\n\t\t\t};\n\t\t}).share();\n\t\t\n\t\tconst mouseEnter = this.e('mouseover')\n\t\t\t.merge(reacquires)\n\t\t\t.merge(apiAcquires)\n\t\t\t::handleBoxer('*') // TODO: <-- selectable?\n\t\t\t.map(handler => handler.originalArtefact || handler.artefact);\n\t\t\n\t\tconst mouseLeave = this.e('mouseout')\n\t\t\t.merge(reacquires)\n\t\t\t::handleBoxer('*') // TODO: <-- selectable?\n\t\t\t.map(handler => handler.originalArtefact || handler.artefact);\n\t\t\n\t\tconst altScroll = this.rootE('mousewheel')\n\t\t\t.filter(withMod('alt'))\n\t\t\t.do((e) => { e.preventDefault() })\n\t\t\t.map(e=>e.deltaY);\n\t\t\n\t\tconst mouseArtefact = mouseEnter.switchMap(enter => {\n\t\t\t\n\t\t\tconst initialSelect = Observable.of(enter);\n\t\t\t\n\t\t\tconst mouseleaveSelect = Observable.merge(\n\t\t\t\tmouseEnter.filter(next  => next  !== enter),\n\t\t\t\tmouseLeave.filter(leave => leave === enter).map(() => null)\n\t\t\t).take(1);\n\t\t\t\n\t\t\tconst stack = [];\n\t\t\tconst altScrollSelect = altScroll.scan((s, d) => {\n\t\t\t\tlet next;\n\t\t\t\tif (d > 0) { // up\n\t\t\t\t\tif (stack[0] !== s) {\n\t\t\t\t\t\tstack.unshift(s);\n\t\t\t\t\t\tnext = s.parent; // TODO: search upward by selection criteria (like supported handlers)\n\t\t\t\t\t}\n\t\t\t\t} else { // back down\n\t\t\t\t\tnext = stack.shift();\n\t\t\t\t}\n\t\t\t\tif (!next) { return s }\n\t\t\t\treturn next;\n\t\t\t}, enter);\n\t\t\t\n\t\t\treturn Observable.merge(\n\t\t\t\tinitialSelect,\n\t\t\t\taltScrollSelect,\n\t\t\t\tmouseleaveSelect.delay(1)\n\t\t\t);\n\t\t}).startWith(null);\n\t\t\n\t\tcoach.newProperty('selectedArtefact', {\n\t\t\tsource: mouseArtefact,\n\t\t\tallowSynchronousAccess: true\n\t\t});\n\t\t\n\t\t// coach.p('selectedArtefact').subscribe((a) => {\n\t\t// \tconsole.log('selected:', a && a.svg.main.attr('class'));\n\t\t// });\n\t\t\n\t\t\n\t}\n}\n",
    "static": true,
    "longname": "src/tools/SelectTool.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 208,
    "kind": "class",
    "name": "SelectTool",
    "memberof": "src/tools/SelectTool.js",
    "static": true,
    "longname": "src/tools/SelectTool.js~SelectTool",
    "access": null,
    "export": true,
    "importPath": "boxer/src/tools/SelectTool.js",
    "importStyle": "{SelectTool}",
    "description": "A tool that keeps track of which artefact is 'selected'. That is,\nwhich artefact has the mouse currently pointing at it, but also\ntaking other factors into account. For example, the selection\ncan be shifted along the artefact nesting hierarchy by using the\nscroll-wheel while ALT is pressed.",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "src/tools/Tool.js~Tool"
    ]
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "init",
    "memberof": "src/tools/SelectTool.js~SelectTool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/SelectTool.js~SelectTool#init",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"coach\": *}"
        ],
        "defaultRaw": {
          "coach": null
        },
        "defaultValue": "{\"coach\":null}"
      }
    ]
  },
  {
    "__docId__": 210,
    "kind": "member",
    "name": "reacquire",
    "memberof": "src/tools/SelectTool.js~SelectTool",
    "static": false,
    "longname": "src/tools/SelectTool.js~SelectTool#reacquire",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 211,
    "kind": "member",
    "name": "reacquire",
    "memberof": "src/tools/SelectTool.js~SelectTool",
    "static": false,
    "longname": "src/tools/SelectTool.js~SelectTool#reacquire",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 212,
    "kind": "member",
    "name": "reacquire",
    "memberof": "src/tools/SelectTool.js~SelectTool",
    "static": false,
    "longname": "src/tools/SelectTool.js~SelectTool#reacquire",
    "access": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 213,
    "kind": "file",
    "name": "src/tools/Tool.js",
    "content": "import {ValueTracker, property} from 'utilities';\nimport {isUndefined}            from 'lodash-bound';\nimport {Observable}             from '../libs/expect-rxjs.js';\n\n\n/**\n * The abstract `Tool` class is the basis of all boxer tools.\n */\nexport default class Tool extends ValueTracker {\n\t\n\t@property({ initial: true }) active;\n\t\n\tconstructor({active} = {}) {\n\t\tsuper();\n\t\tif (!active::isUndefined()) { this.active = active }\n\t}\n\t\n\tinit({coach, events = []} = {}) {\n\t\tthis.coach = coach;\n\t\tfor (let e of events) {\n\t\t\tcoach.registerArtefactEvent(e);\n\t\t}\n\t}\n\t\n\tmyE(stream)  { return this.p('active').switchMap(a => a ? stream : Observable.never()) }\n\trootE    (e) { return this.myE(this.coach.rootE    (e)) }\n\twindowE  (e) { return this.myE(this.coach.windowE  (e)) }\n\tdocumentE(e) { return this.myE(this.coach.documentE(e)) }\n\te        (e) { return this.myE(this.coach.e        (e)) }\n\t\n}\n",
    "static": true,
    "longname": "src/tools/Tool.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 214,
    "kind": "class",
    "name": "Tool",
    "memberof": "src/tools/Tool.js",
    "static": true,
    "longname": "src/tools/Tool.js~Tool",
    "access": null,
    "export": true,
    "importPath": "boxer/src/tools/Tool.js",
    "importStyle": "Tool",
    "description": "The abstract `Tool` class is the basis of all boxer tools.",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "utilities~ValueTracker"
    ]
  },
  {
    "__docId__": 215,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/tools/Tool.js~Tool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/Tool.js~Tool#constructor",
    "access": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "optional": true,
        "types": [
          "{\"active\": *}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 216,
    "kind": "member",
    "name": "active",
    "memberof": "src/tools/Tool.js~Tool",
    "static": false,
    "longname": "src/tools/Tool.js~Tool#active",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 217,
    "kind": "method",
    "name": "init",
    "memberof": "src/tools/Tool.js~Tool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/Tool.js~Tool#init",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "optional": true,
        "types": [
          "{\"coach\": *, \"events\": *}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 218,
    "kind": "member",
    "name": "coach",
    "memberof": "src/tools/Tool.js~Tool",
    "static": false,
    "longname": "src/tools/Tool.js~Tool#coach",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "myE",
    "memberof": "src/tools/Tool.js~Tool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/Tool.js~Tool#myE",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "stream",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "rootE",
    "memberof": "src/tools/Tool.js~Tool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/Tool.js~Tool#rootE",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 221,
    "kind": "method",
    "name": "windowE",
    "memberof": "src/tools/Tool.js~Tool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/Tool.js~Tool#windowE",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 222,
    "kind": "method",
    "name": "documentE",
    "memberof": "src/tools/Tool.js~Tool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/Tool.js~Tool#documentE",
    "access": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 223,
    "kind": "method",
    "name": "e",
    "memberof": "src/tools/Tool.js~Tool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/Tool.js~Tool#e",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 224,
    "kind": "file",
    "name": "src/tools/ZoomTool.js",
    "content": "import Tool from './Tool';\nimport {stopPropagation, withoutMod, property} from 'utilities';\nimport {multiply as _multiply} from 'lodash';\n\nimport {scaleFromPoint} from \"../util/svg\";\n\nconst {pow} = Math;\n\n\n/**\n * A tool to zoom in and out on the main canvas using the scrollwheel,\n * centered around the current mouse-position.\n */\nexport class ZoomTool extends Tool {\n\t\n\t@property({ initial: 0.004             }) sensitivity;\n\t@property({ initial: 1, readonly: true }) factor;\n\t\n\tinit({coach}) {\n\t\tsuper.init({coach});\n\t\t\n\t\tconst mousewheel = this.rootE('mousewheel');\n\t\t\n\t\tconst zooming = mousewheel\n\t\t\t.filter(withoutMod('alt', 'ctrl', 'meta'))\n\t\t\t.do(stopPropagation);\n\t\t\n\t\t/* maintain the current zoom-factor on the side (it doesn't actually influence zoom) */\n\t\tzooming\n\t\t\t.withLatestFrom(this.p('sensitivity'), ({deltaY: d}, s) => pow(1+s, d))\n\t\t\t.scan(_multiply, 1)\n\t\t\t.subscribe( this.pSubject('factor') );\n\t\t\n\t\t/* maintain zoom-exponent by mouse-wheel */\n\t\tzooming\n\t\t\t.withLatestFrom(coach.root.p('transformation'), this.p('sensitivity'),\n\t\t\t\t({originalEvent: {deltaY: d}, point}, m, s) => m::scaleFromPoint(pow(1+s, -d), point.in(coach.root.svg.children)))\n\t\t\t.subscribe( coach.root.p('transformation') );\n\t\t\n\t}\n\t\n}\n",
    "static": true,
    "longname": "src/tools/ZoomTool.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 225,
    "kind": "variable",
    "name": "pow",
    "memberof": "src/tools/ZoomTool.js",
    "static": true,
    "longname": "src/tools/ZoomTool.js~pow",
    "access": null,
    "export": false,
    "importPath": "boxer/src/tools/ZoomTool.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 226,
    "kind": "class",
    "name": "ZoomTool",
    "memberof": "src/tools/ZoomTool.js",
    "static": true,
    "longname": "src/tools/ZoomTool.js~ZoomTool",
    "access": null,
    "export": true,
    "importPath": "boxer/src/tools/ZoomTool.js",
    "importStyle": "{ZoomTool}",
    "description": "A tool to zoom in and out on the main canvas using the scrollwheel,\ncentered around the current mouse-position.",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "src/tools/Tool.js~Tool"
    ]
  },
  {
    "__docId__": 227,
    "kind": "method",
    "name": "init",
    "memberof": "src/tools/ZoomTool.js~ZoomTool",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tools/ZoomTool.js~ZoomTool#init",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"coach\": *}"
        ],
        "defaultRaw": {
          "coach": null
        },
        "defaultValue": "{\"coach\":null}"
      }
    ]
  },
  {
    "__docId__": 228,
    "kind": "file",
    "name": "src/util/Machine.js",
    "content": "import {isArray, isUndefined, isString, toPairs} from 'lodash-bound';\nimport {ValueTracker, property} from 'utilities';\n\n\n/**\n * A finite state machine in which state transitions are controlled by\n * observables which are only active in specific states.\n */\nexport default class Machine extends ValueTracker {\n\t\n\t/**\n\t * the current state\n\t * @type {string}\n\t */\n\t@property({ initial: null }) state;\n\t\n\t/**\n\t * the data belonging to the current state\n\t * @type {*}\n\t */\n\t@property({ initial: null }) data;\n\t\n\t/**\n\t * the name of this state machine, used for log output\n\t * @type {?string}\n\t */\n\tname = null;\n\t\n\t/**\n\t * the currently active (state-specific) observable subscriptions\n\t * @type {Array<Rx.Subscription>}\n\t * @private\n\t */\n\t_subscriptions = [];\n\t\n\t/**\n\t * Create a new finite state machine.\n\t * @param {string} name - the name of the state machine\n\t * @param {Object} options\n\t * @param {string} options.state - the initial state\n\t * @param {*}      options.data  - the initial state data\n\t * @param {?Function|true} options.log   - the function to which to record log messages\n\t */\n\tconstructor(name, options) {\n\t\tsuper();\n\t\tconst {state, data, log} = options;\n\t\tthis.name  = name;\n\t\tthis.state = state;\n\t\tthis.data  = data;\n\t\tif (log === true)         { this.log = ::console.info }\n\t\telse if (log::isString()) { this.log = ::console[log] }\n\t\telse                      { this.log = ()=>{}         }\n\t}\n\t\n\t/**\n\t * a description of how arrival to a certain state in some other machine leads to a specific state transition in this machine;\n\t * the format is `['stateBefore', otherMachine.e('newState'), 'stateAfter']`\n\t * @typedef {[string, Observable, string]} MachineLink\n\t */\n\t\n\t/**\n\t * Link a state transition in one machine to a state transition in another.\n\t * @param {...(Array<MachineLink>|MachineLink)} links\n\t * @return {Machine}\n\t */\n\tlink(...links) {\n\t\tif (!links[0]::isArray()) { links = [links] }\n\t\tfor (let [localState1, otherState, localState2] of links) {\n\t\t\tthis.extend(({ enterState }) => ({\n\t\t\t\t[localState1]: () => {\n\t\t\t\t\totherState::enterState(localState2)\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t\t/* return machine itself */\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Extend this machine with additional states, behavior and/or transitions.\n\t * @param {Function} descFn - a function that should return an object mapping state-names\n\t *                            to functions that may (asynchronously, conditionally) initiate\n\t *                            new state transitions in turn. It is passed an object with the\n\t *                            `enterState` and `subscribeDuringState`. Use the former to enter\n\t *                            new states (can also be bound to an observable). Bind the latter\n\t *                            to an `Observable` instead of using `.subscribe` from within a\n\t *                            machine state, so it is automatically unsubscribed at a state-\n\t *                            transition.\n\t * @param {function (): boolean} [runCondition] - a function that should dynamically indicate\n\t *                                                whether the machine is currently active;\n\t *                                                if omitted, assumes the machine is always active\n\t */\n\textend(descFn, runCondition = ()=>true) {\n\t\t/* define bound convenience functions */\n\t\tconst thisMachine = this;\n\t\tconst boundFunctions = {\n\t\t\tenterState(nextState, data) {\n\t\t\t\tif (this::isUndefined()) {\n\t\t\t\t\treturn thisMachine.enterState(nextState, data);\n\t\t\t\t} else {\n\t\t\t\t\treturn this::(boundFunctions.subscribeDuringState)((data) => {\n\t\t\t\t\t\tthisMachine.enterState(nextState, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tsubscribeDuringState(...args) {\n\t\t\t\tconst sub = this.subscribe(...args);\n\t\t\t\tthisMachine._subscriptions.push(sub);\n\t\t\t\treturn sub;\n\t\t\t}\n\t\t};\n\t\t/* extend descriptions */\n\t\tlet result = descFn(boundFunctions);\n\t\tlet subscribers = [];\n\t\tfor (let [key, fn] of result::toPairs()) {\n\t\t\tif (this[key]::isUndefined()) {\n\t\t\t\tthis[key] = this.newEvent(key);\n\t\t\t}\n\t\t\tconst subscriber = this.e(key).filter(runCondition).subscribe((data) => {\n\t\t\t\tthis._runStateSpecificCode(fn);\n\t\t\t});\n\t\t\tsubscribers.push(subscriber);\n\t\t}\n\t\t/* run if it says something about the current state */\n\t\tif (this.state in result && runCondition()) {\n\t\t\tthis._runStateSpecificCode(result[this.state]);\n\t\t}\n\t\t/* return a way to undo the extension */\n\t\treturn () => {\n\t\t\tfor (const sub of subscribers) {\n\t\t\t\tsub.unsubscribe();\n\t\t\t}\n\t\t};\n\t}\n\t\n\t/**\n\t * Unsubscribe from all currently registered `Observable` subscriptions.\n\t */\n\tunsubscribe() {\n\t\tfor (let sub of this._subscriptions.reverse()) {\n\t\t\tsub.unsubscribe();\n\t\t}\n\t\tthis._subscriptions = [];\n\t}\n\t\n\t/**\n\t * Enter a new machine state.\n\t * @param {string} state - the new state\n\t * @param {*}      data  - data to send to the new state\n\t */\n\tenterState(state, data) {\n\t\tthis.unsubscribe();\n\t\tthis.log(`${this.name} - entering state: '${state}'`, [data]);\n\t\t[this.state, this.data] = [state, data];\n\t\tthis.e(state).next(data);\n\t}\n\t\n\t/**\n\t * Run the code associated with transition to some specific state.\n\t * Running it through this method keeps track of subscriptions returned from it.\n\t * @param {function(*):(void|Rx.Subscription|Array<Rx.Subscription>)} specifiedStateFn - the code to run\n\t * @private\n\t */\n\t_runStateSpecificCode(specifiedStateFn) {\n\t\tlet newSubscriptions = specifiedStateFn(this.data);\n\t\tif (newSubscriptions::isUndefined()) { newSubscriptions = []                 }\n\t\tif (!newSubscriptions::isArray())    { newSubscriptions = [newSubscriptions] }\n\t\tthis._subscriptions.push(...newSubscriptions);\n\t}\n\t\n};\n",
    "static": true,
    "longname": "src/util/Machine.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 229,
    "kind": "class",
    "name": "Machine",
    "memberof": "src/util/Machine.js",
    "static": true,
    "longname": "src/util/Machine.js~Machine",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/Machine.js",
    "importStyle": "Machine",
    "description": "A finite state machine in which state transitions are controlled by\nobservables which are only active in specific states.",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "utilities~ValueTracker"
    ]
  },
  {
    "__docId__": 230,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/util/Machine.js~Machine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Machine.js~Machine#constructor",
    "access": null,
    "description": "the name of this state machine, used for log output",
    "lineNumber": 24,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "type": {
      "nullable": true,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 231,
    "kind": "member",
    "name": "name",
    "memberof": "src/util/Machine.js~Machine",
    "static": false,
    "longname": "src/util/Machine.js~Machine#name",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 232,
    "kind": "member",
    "name": "_subscriptions",
    "memberof": "src/util/Machine.js~Machine",
    "static": false,
    "longname": "src/util/Machine.js~Machine#_subscriptions",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 233,
    "kind": "member",
    "name": "name",
    "memberof": "src/util/Machine.js~Machine",
    "static": false,
    "longname": "src/util/Machine.js~Machine#name",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 234,
    "kind": "member",
    "name": "state",
    "memberof": "src/util/Machine.js~Machine",
    "static": false,
    "longname": "src/util/Machine.js~Machine#state",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 235,
    "kind": "member",
    "name": "data",
    "memberof": "src/util/Machine.js~Machine",
    "static": false,
    "longname": "src/util/Machine.js~Machine#data",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 236,
    "kind": "member",
    "name": "log",
    "memberof": "src/util/Machine.js~Machine",
    "static": false,
    "longname": "src/util/Machine.js~Machine#log",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 237,
    "kind": "member",
    "name": "log",
    "memberof": "src/util/Machine.js~Machine",
    "static": false,
    "longname": "src/util/Machine.js~Machine#log",
    "access": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 238,
    "kind": "member",
    "name": "log",
    "memberof": "src/util/Machine.js~Machine",
    "static": false,
    "longname": "src/util/Machine.js~Machine#log",
    "access": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 239,
    "kind": "typedef",
    "name": "MachineLink",
    "memberof": "src/util/Machine.js~Machine",
    "static": true,
    "longname": "src/util/Machine.js~Machine.MachineLink",
    "access": null,
    "description": "a description of how arrival to a certain state in some other machine leads to a specific state transition in this machine;\nthe format is `['stateBefore', otherMachine.e('newState'), 'stateAfter']`",
    "type": {
      "types": [
        "[string, Observable, string]"
      ],
      "optional": false,
      "name": "MachineLink"
    }
  },
  {
    "__docId__": 240,
    "kind": "method",
    "name": "link",
    "memberof": "src/util/Machine.js~Machine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Machine.js~Machine#link",
    "access": null,
    "description": "the data belonging to the current state",
    "lineNumber": 69,
    "params": [
      {
        "name": "links",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 241,
    "kind": "method",
    "name": "extend",
    "memberof": "src/util/Machine.js~Machine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Machine.js~Machine#extend",
    "access": null,
    "description": "Extend this machine with additional states, behavior and/or transitions.",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "descFn",
        "description": "a function that should return an object mapping state-names\n                           to functions that may (asynchronously, conditionally) initiate\n                           new state transitions in turn. It is passed an object with the\n                           `enterState` and `subscribeDuringState`. Use the former to enter\n                           new states (can also be bound to an observable). Bind the latter\n                           to an `Observable` instead of using `.subscribe` from within a\n                           machine state, so it is automatically unsubscribed at a state-\n                           transition."
      },
      {
        "nullable": null,
        "types": [
          "function (): boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "runCondition",
        "description": "a function that should dynamically indicate\n                                               whether the machine is currently active;\n                                               if omitted, assumes the machine is always active"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 242,
    "kind": "member",
    "name": "[key]",
    "memberof": "src/util/Machine.js~Machine",
    "static": false,
    "longname": "src/util/Machine.js~Machine#[key]",
    "access": null,
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 243,
    "kind": "method",
    "name": "unsubscribe",
    "memberof": "src/util/Machine.js~Machine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Machine.js~Machine#unsubscribe",
    "access": null,
    "description": "Unsubscribe from all currently registered `Observable` subscriptions.",
    "lineNumber": 148,
    "params": []
  },
  {
    "__docId__": 244,
    "kind": "member",
    "name": "_subscriptions",
    "memberof": "src/util/Machine.js~Machine",
    "static": false,
    "longname": "src/util/Machine.js~Machine#_subscriptions",
    "access": null,
    "description": null,
    "lineNumber": 152,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 245,
    "kind": "method",
    "name": "enterState",
    "memberof": "src/util/Machine.js~Machine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Machine.js~Machine#enterState",
    "access": null,
    "description": "Enter a new machine state.",
    "lineNumber": 160,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "the new state"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "data to send to the new state"
      }
    ]
  },
  {
    "__docId__": 246,
    "kind": "method",
    "name": "_runStateSpecificCode",
    "memberof": "src/util/Machine.js~Machine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Machine.js~Machine#_runStateSpecificCode",
    "access": "private",
    "description": "Run the code associated with transition to some specific state.\nRunning it through this method keeps track of subscriptions returned from it.",
    "lineNumber": 173,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(*):(void",
          "Rx.Subscription",
          "Array<Rx.Subscription>)"
        ],
        "spread": false,
        "optional": false,
        "name": "specifiedStateFn",
        "description": "the code to run"
      }
    ]
  },
  {
    "__docId__": 247,
    "kind": "file",
    "name": "src/util/misc.js",
    "content": "import {isFinite as _isFinite} from 'lodash';\nimport {isFunction} from 'lodash-bound';\nimport {Observable, Scheduler} from '../libs/expect-rxjs.js';\n\nexport * from 'utilities';\n\nconst {sin, PI} = Math;\n\n\nexport const _isNonNegative = (v) =>\n\t(_isFinite(v) && v >= 0);\n\nexport function emitWhenComplete(value) {\n\treturn this.ignoreElements().concat(Observable.of(value));\n}\n\nexport function withLatestFrom(stream, combinator = (a, b) => [a, b]) {\n\treturn Observable.create((observer) => {\n\t\tlet value;\n\t\tconst subscription1 = stream.subscribe((v) => { value = v });\n\t\tconst subscription2 = this.map(v => combinator(v, value)).subscribe(observer);\n\t\treturn () => {\n\t\t\tsubscription1.unsubscribe();\n\t\t\tsubscription2.unsubscribe();\n\t\t};\n\t}).share();\n}\n\nexport function sineWave(...waves) {\n\treturn (time) => {\n\t\tlet result = 0;\n\t\tfor (let {\n\t\t\tamplitude,\n\t\t\tperiod    = 1/frequency,\n\t\t\tfrequency = 1/period,\n\t\t\tphase     = 0\n\t\t} of waves) {\n\t\t\tresult += amplitude * sin(2 * PI * frequency * time + phase);\n\t\t}\n\t\treturn result;\n\t};\n}\n\nexport const animationFrames = Observable.interval(1000/30, Scheduler.animationFrame);\n\nexport function strictSubclassOf(cls) {\n\treturn this.prototype instanceof cls;\n}\n\nexport function subclassOf(cls) {\n\treturn this === cls || this::strictSubclassOf(cls);\n}\n\nexport function callIfFunction(...args) {\n\tif (this::isFunction()) {\n\t\treturn this(...args);\n\t}\n}\n",
    "static": true,
    "longname": "src/util/misc.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 248,
    "kind": "variable",
    "name": "sin",
    "memberof": "src/util/misc.js",
    "static": true,
    "longname": "src/util/misc.js~sin",
    "access": null,
    "export": false,
    "importPath": "boxer/src/util/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 249,
    "kind": "function",
    "name": "_isNonNegative",
    "memberof": "src/util/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/misc.js~_isNonNegative",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/misc.js",
    "importStyle": "{_isNonNegative}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 250,
    "kind": "function",
    "name": "emitWhenComplete",
    "memberof": "src/util/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/misc.js~emitWhenComplete",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/misc.js",
    "importStyle": "{emitWhenComplete}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 251,
    "kind": "function",
    "name": "withLatestFrom",
    "memberof": "src/util/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/misc.js~withLatestFrom",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/misc.js",
    "importStyle": "{withLatestFrom}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "stream",
        "types": [
          "*"
        ]
      },
      {
        "name": "combinator",
        "optional": true,
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 252,
    "kind": "function",
    "name": "sineWave",
    "memberof": "src/util/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/misc.js~sineWave",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/misc.js",
    "importStyle": "{sineWave}",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "waves",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 253,
    "kind": "variable",
    "name": "animationFrames",
    "memberof": "src/util/misc.js",
    "static": true,
    "longname": "src/util/misc.js~animationFrames",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/misc.js",
    "importStyle": "{animationFrames}",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 254,
    "kind": "function",
    "name": "strictSubclassOf",
    "memberof": "src/util/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/misc.js~strictSubclassOf",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/misc.js",
    "importStyle": "{strictSubclassOf}",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "cls",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 255,
    "kind": "function",
    "name": "subclassOf",
    "memberof": "src/util/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/misc.js~subclassOf",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/misc.js",
    "importStyle": "{subclassOf}",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "cls",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 256,
    "kind": "function",
    "name": "callIfFunction",
    "memberof": "src/util/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/misc.js~callIfFunction",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/misc.js",
    "importStyle": "{callIfFunction}",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 257,
    "kind": "file",
    "name": "src/util/svg.js",
    "content": "import $, {plainDOM} from '../libs/jquery.js';\nimport {assign, pick, minBy, isUndefined} from 'lodash-bound';\n\nimport assert from 'power-assert';\n\nconst {abs, sqrt, atan2, PI} = Math;\n\n/* constants to use as keys to get matrix values */\n//\n//  [ M11 M12 MX ]\n//  [ M21 M22 MY ]\n//\n/** key to row 1 column 1 in an `SVGMatrix`                      */ export const M11 = 'a';\n/** key to row 2 column 1 in an `SVGMatrix`                      */ export const M21 = 'b';\n/** key to row 1 column 2 in an `SVGMatrix`                      */ export const M12 = 'c';\n/** key to row 2 column 2 in an `SVGMatrix`                      */ export const M22 = 'd';\n/** key to row 1 column 3 in an `SVGMatrix`, i.e., x-translation */ export const MX  = 'e';\n/** key to row 2 column 3 in an `SVGMatrix`, i.e., y-translation */ export const MY  = 'f';\n\n/**\n * a single <svg> element in memory for utility purposes\n * @type {SVGSVGElement}\n * @private\n */\nconst refSVG = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n\n/**\n * the matrix representing the identity transformation (not changing anything)\n * @type {SVGMatrix}\n */\nexport const ID_MATRIX  = refSVG.createSVGMatrix();\n\n/**\n * a (0, 0) point in svg space\n */\nexport const ORIG_POINT = refSVG.createSVGPoint();\n\n/**\n * The `SVGMatrix` class, which is not 'just available' in JavaScript.\n */\nexport const SVGMatrix = ID_MATRIX.constructor;\n\n/**\n * The `SVGPoint` class, which is not 'just available' in JavaScript.\n */\nexport const SVGPoint = ORIG_POINT.constructor;\n\n/**\n * Test equality between two matrices.\n * @param {SVGMatrix} M1\n * @param {SVGMatrix} M2\n * @return {boolean} `true` if the two matrices are equal; `false` otherwise\n */\nexport function matrixEquals(M1, M2) {\n\treturn [M11, M12, M21, M22, MX, MY]\n\t\t.every(key => M1[key] === M2[key]);\n}\n\n/**\n * Change the current transformation matrix of an svg element.\n * @this  {SVGElement} the element to transform\n * @param {SVGMatrix}  matrix\n * @returns {SVGElement} the element that was transformed (so you could chain other method-calls)\n * @example shape::setCTM( ID_MATRIX.translate(x, y) );\n */\nexport function setCTM(matrix) {\n\tif (!this::plainDOM().transform) {\n\t\t$(this).attr('transform', '');\n\t}\n\tassert(this::plainDOM().transform, `You probably tried to create an svg element outside the svg namespace.`);\n\tthis::plainDOM().transform.baseVal.initialize(refSVG.createSVGTransformFromMatrix(matrix));\n\treturn this;\n}\n\n/**\n * @return {SVGMatrix} the current transformation matrix of a given svg element\n * @this {SVGElement} the svg element of which to get the current transformation matrix\n * @example let matrix = shape::getCTM();\n */\nexport function getCTM() {\n\tif (this::plainDOM().transform && this::plainDOM().transform.baseVal && this::plainDOM().transform.baseVal.numberOfItems) {\n\t\treturn this::plainDOM().transform.baseVal.getItem(0).matrix;\n\t}\n\treturn ID_MATRIX;\n}\n\n/**\n * Create a new `SVGPoint`. The `SVGPoint` class itself cannot be used for this.\n * @param {number} x\n * @param {number} y\n * @return {SVGPoint} the newly created svg point\n */\nfunction newSVGPoint(x, y) {\n\tlet result = refSVG.createSVGPoint();\n\tresult::assign({x, y});\n\treturn result;\n}\n\n\n/**\n * A representation of a vector in 2D SVG space, not necessarily with a\n * specific reference-frame.\n * @see Point2D\n */\nexport class Vector2D {\n\t\n\t/**\n\t * Create a new `Vector2D`.\n\t * @param {Object} other\n\t * @param {number} other.x\n\t * @param {number} other.y\n\t */\n\tconstructor(other) {\n\t\tif (other instanceof Vector2D) {\n\t\t\tthis.svgPoint = other.svgPoint;\n\t\t} else {\n\t\t\tthis.svgPoint = refSVG.createSVGPoint();\n\t\t\tthis.svgPoint::assign(other::pick('x', 'y'));\n\t\t}\n\t}\n\t\n\t/**\n\t * Create a new vector from the translation component of a matrix.\n\t * @param {SVGMatrix} m - the matrix from which to take the translation\n\t * @returns {Vector2D}  - the new vector\n\t */\n\tstatic fromMatrixTranslation(m) {\n\t\treturn new this({ x: m[MX], y: m[MY] });\n\t}\n\t\n\t/**\n\t * The raw SVGPoint instance.\n\t * @readonly\n\t */\n\tsvgPoint;\n\t\n\t/**\n\t * the x-dimension value of this vector\n\t * @type {number}\n\t * @readonly\n\t */\n\tget x (): number { return this.svgPoint.x }\n\t\n\t/**\n\t * the y-dimension value of this vector\n\t * @type {number}\n\t * @readonly\n\t */\n\tget y (): number { return this.svgPoint.y }\n\t\n\t/**\n\t * a simple `[x, y]` representation of this vector\n\t * @type {[number, number]}\n\t * @readonly\n\t */\n\tget xy(): Array<number, number> { return [this.x, this.y] }\n\t\n\t/**\n\t * Add this vector to another vector.\n\t * Does not modify this vector, but returns a new one.\n\t * @param   {Vector2D} other - the other vector\n\t * @returns {Vector2D}       - the pointwise addition of both vectors\n\t */\n\tplus(other: Vector2D): Vector2D {\n\t\treturn new Vector2D({\n\t\t\tx: this.x + other.x,\n\t\t\ty: this.y + other.y\n\t\t});\n\t}\n\t\n\t/**\n\t * Subtract another vector from this one.\n\t * Does not modify this vector, but returns a new one.\n\t * @param   {Vector2D} other - the other vector\n\t * @returns {Vector2D}       - the pointwise subtraction of both vectors\n\t */\n\tminus(other: Vector2D): Vector2D {\n\t\treturn new Vector2D({\n\t\t\tx: this.x - other.x,\n\t\t\ty: this.y - other.y,\n\t\t});\n\t}\n\t\n\t/**\n\t * Multiply this vector by a scalar.\n\t * Does not modify this vector, but returns a new one.\n\t * @param   {number} scalar - the scalar\n\t * @returns {Vector2D}      - this vector multiplied by a scalar\n\t */\n\ttimes(scalar: number): Vector2D {\n\t\tif (scalar === 1) { return this }\n\t\treturn new Point2D({\n\t\t\tx: this.x * scalar,\n\t\t\ty: this.y * scalar\n\t\t});\n\t}\n\t\n\t/**\n\t * Get the angle this vector makes.\n\t * @returns {number} the angle this vector makes with the positive y-axis\n\t */\n\tangle(): number {\n\t\tconst l = this.length;\n\t\treturn atan2(this.y/l, this.x/l) * 180 / PI;\n\t}\n\t\n\t/**\n\t * the length of this vector squared;\n\t * use this if you can; it's more efficient than `length`\n\t * @see Vector2D#length\n\t */\n\tget lengthSquared(): number {\n\t\treturn this.x*this.x + this.y*this.y;\n\t}\n\t\n\t/**\n\t * the length of this vector\n\t */\n\tget length(): number {\n\t\treturn sqrt(this.lengthSquared);\n\t}\n\t\n}\n\n\n/**\n * This represents a point in 2D SVG space. It is aware of its x and y coordinates\n * and of its local coordinate system. When comparing or combining with other\n * `Point2D` instances, their respective coordinate systems will automatically\n * be reconciled.\n * @extends Vector2D\n */\nexport class Point2D extends Vector2D {\n\t\n\t/**\n\t * Create a new `Vector2D`.\n\t * @param {Object}     other\n\t * @param {number}     other.x\n\t * @param {number}     other.y\n\t * @param {SVGElement} other.coordinateSystem - the element defining this point's coordinate system\n\t */\n\tconstructor(other) {\n\t\tsuper(other);\n\t\tthis.coordinateSystem = other.coordinateSystem::plainDOM();\n\t}\n\t\n\t/**\n\t * The coordinate system of this point.\n\t * @readonly\n\t */\n\tcoordinateSystem: SVGElement;\n\t\n\t/**\n\t * Create a new Point2D from the translation component of a matrix.\n\t * @param {SVGMatrix}         m                - the matrix from which to take the translation\n\t * @param {jQuery|SVGElement} coordinateSystem - the coordinate system for this new point\n\t * @returns {Point2D} the new point\n\t */\n\tstatic fromMatrixTranslation(m: SVGMatrix, coordinateSystem: $ | SVGElement) {\n\t\treturn new this({\n\t\t\tx:                m[MX],\n\t\t\ty:                m[MY],\n\t\t\tcoordinateSystem: coordinateSystem::plainDOM()\n\t\t});\n\t}\n\t\n\t/**\n\t * Get this point, but described in a different coordinate system.\n\t * @param {jQuery|SVGElement} coordinateSystem - the coordinate system for this new point\n\t * @return {Point2D} the same point, but framed by the given coordinate system\n\t */\n\tin(coordinateSystem: $ | SVGElement): Point2D {\n\t\tif (this.coordinateSystem === coordinateSystem) { return this }\n\t\tlet coords = this.svgPoint.matrixTransform(this.coordinateSystem.getScreenCTM().multiply(coordinateSystem::plainDOM().getScreenCTM().inverse()));\n\t\treturn new Point2D({\n\t\t\tx: coords.x,\n\t\t\ty: coords.y,\n\t\t\tcoordinateSystem\n\t\t});\n\t}\n\t\n\t/**\n\t * A convenience function to get a plain `{x, y}` object from this point,\n\t * but with configurable keys.\n\t * @param {string} [xKey='x'] - the key for the x coordinate\n\t * @param {string} [yKey='y'] - the key for the y coordinate\n\t * @return {Object} an object like `{ [xKey]: 24, [yKey]: 25 }`\n\t */\n\tobj(xKey: string = 'x', yKey: string = 'y'): Object {\n\t\treturn {\n\t\t\t[xKey]: this.x,\n\t\t\t[yKey]: this.y\n\t\t};\n\t}\n\t\n\t/**\n\t * Add this point to another point, reconciling their coordinate systems.\n\t * Does not modify this point, but returns a new one.\n\t * The result of this operation might not make sense unless\n\t * you divide the result by 2 (or something).\n\t * @param   {Point2D} other - the other point\n\t * @returns {Point2D}       - the pointwise addition of both point\n\t */\n\tplus(other: Point2D): Point2D {\n\t\tother = other.in(this.coordinateSystem);\n\t\treturn new Point2D({\n\t\t\tx:                this.x + other.x,\n\t\t\ty:                this.y + other.y,\n\t\t\tcoordinateSystem: this.coordinateSystem\n\t\t});\n\t}\n\t\n\t/**\n\t * Subtract another point from this one, reconciling their\n\t * coordinate systems and returning a vector.\n\t * Does not modify this vector, but returns a new one.\n\t * @param   {Point2D} other - the other point\n\t * @returns {Vector2D}      - the pointwise subtraction of both point\n\t */\n\tminus(other: Point2D): Vector2D {\n\t\tother = other.in(this.coordinateSystem);\n\t\treturn new Vector2D({\n\t\t\tx: this.x - other.x,\n\t\t\ty: this.y - other.y\n\t\t});\n\t}\n\t\n\t/**\n\t * @returns {number} the Euclidean distance between the two points, squared\n\t * @param {Point2D} other - the other point\n\t */\n\tsquaredDistanceTo(other: Point2D) {\n\t\tconst d = this.minus(other);\n\t\treturn d.lengthSquared;\n\t}\n\t\n\t/**\n\t * @returns {number} the Euclidean distance between the two points\n\t * @param {Point2D} other - the other point\n\t */\n\tdistanceTo(other: Point2D) {\n\t\treturn sqrt(this.squaredDistanceTo(other));\n\t}\n\t\n\t/**\n\t * Get a point partway between this point and another, the exact\n\t * point defined by a factor of the distance between them.\n\t * @param {number} factor - the factor determining the location on the `this`-`other` line-segment\n\t * @param {Point2D} other - the other point\n\t * @return {Point2D} `this` * `factor` + `other` * (1 - `factor`)\n\t */\n\twithFactorTo(factor: number, other: Point2D) {\n\t\tother = other.in(this.coordinateSystem);\n\t\treturn new Point2D({\n\t\t\tx:                this.x * factor + other.x * (1 - factor),\n\t\t\ty:                this.y * factor + other.y * (1 - factor),\n\t\t\tcoordinateSystem: this.coordinateSystem\n\t\t});\n\t}\n\t\n\t/**\n\t * Get a point partway between this point and another, the exact\n\t * point defined by an absolute distance from this point.\n\t * @param {number} distance - the distance from this point from which to take the resulting point\n\t * @param {Point2D} other   - the other point\n\t * @return {Point2D} the defined point\n\t */\n\twithDistanceTo(distance: number, other: Point2D) {\n\t\tconst length = this.distanceTo(other);\n\t\treturn this.withFactorTo(distance/length, other);\n\t}\n\t\n\t/**\n\t * Transform this point by a given matrix.\n\t * @param {SVGMatrix} matrix\n\t * @return {Point2D} this point multiplied by `matrix`\n\t */\n\ttransformedBy(matrix: SVGMatrix): Point2D {\n\t\tlet newPoint = this.svgPoint.matrixTransform(matrix);\n\t\treturn new Point2D({\n\t\t\tx:                newPoint.x,\n\t\t\ty:                newPoint.y,\n\t\t\tcoordinateSystem: this.coordinateSystem\n\t\t});\n\t}\n}\n\n/**\n * Add a scale-from-point transformation onto an existing matrix.\n * That is, multiply the distance between the given `point` and every\n * other point by the supplied `factor`.\n * @this {SVGMatrix} the matrix to change\n * @param {number}                factor - the scaling factor\n * @param {{x: number, y: number}} point - the reference point\n * @returns {SVGMatrix} the original matrix but with the additional scaling\n */\nexport function scaleFromPoint(factor, point) {\n\tconst {x, y} = point;\n\treturn this\n\t\t.translate( x,  y)\n\t\t.scale(factor)\n\t\t.translate(-x, -y);\n}\n\n/**\n * Add a rotate-around-point transformation onto an existing matrix.\n * @this {SVGMatrix} the matrix to change\n * @param {{x: number, y: number}} point - the reference point\n * @param {number}                 angle - the angle by which to rotate\n * @returns {SVGMatrix} the original matrix but with the additional rotation\n */\nexport function rotateAroundPoint(point, angle) {\n\tconst {x, y} = point;\n\treturn this\n\t\t.translate(x, y)\n\t\t.rotate(angle)\n\t\t.translate(-x, -y);\n}\n\n/**\n * Move a given svg element to the front in terms of 'z-index'.\n * @this {SVGElement} the element to bring to front\n */\nexport function moveToFront() {\n\tconst plainThis = this::plainDOM();\n\tif (plainThis.parentElement) {\n\t\tplainThis.parentElement.appendChild(plainThis);\n\t}\n}\n\n/**\n * @return {Point2D} the original point snapped to the closest 45-degree line crossing the reference point\n * @this  {Point2D} the original point to snap\n * @param {Point2D} referencePoint - the point defining the center around which to snap\n */\nexport function snap45(referencePoint) {\n\tlet cReferencePoint = referencePoint.in(this.coordinateSystem);\n\tlet mouseVector45 = this.svgPoint\n\t\t.matrixTransform(ID_MATRIX::rotateAroundPoint(cReferencePoint, 45));\n\tmouseVector45 = new Point2D({ x: mouseVector45.x, y: mouseVector45.y, coordinateSystem: this.coordinateSystem });\n\tlet cDiff = this.minus(cReferencePoint);\n\tlet cDiff45 = mouseVector45.minus(cReferencePoint);\n\tconst newPt = (xp, yp, m = ID_MATRIX) => new Point2D({\n\t\t...newSVGPoint(xp.x, yp.y).matrixTransform(m)::pick('x', 'y'),\n\t\tcoordinateSystem: this.coordinateSystem\n\t});\n\treturn [\n\t\t{ diff: abs(cDiff.x),   snap: () => newPt(cReferencePoint, this    ) },\n\t\t{ diff: abs(cDiff.y),   snap: () => newPt(this,     cReferencePoint) },\n\t\t{ diff: abs(cDiff45.x), snap: () => newPt(cReferencePoint, mouseVector45,   ID_MATRIX::rotateAroundPoint(cReferencePoint, -45)) },\n\t\t{ diff: abs(cDiff45.y), snap: () => newPt(mouseVector45,   cReferencePoint, ID_MATRIX::rotateAroundPoint(cReferencePoint, -45)) }\n\t]::minBy('diff').snap();\n}\n",
    "static": true,
    "longname": "src/util/svg.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 258,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/util/svg.js",
    "static": true,
    "longname": "src/util/svg.js~_extends",
    "access": null,
    "export": false,
    "importPath": "boxer/src/util/svg.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 259,
    "kind": "variable",
    "name": "abs",
    "memberof": "src/util/svg.js",
    "static": true,
    "longname": "src/util/svg.js~abs",
    "access": null,
    "export": false,
    "importPath": "boxer/src/util/svg.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 260,
    "kind": "variable",
    "name": "M11",
    "memberof": "src/util/svg.js",
    "static": true,
    "longname": "src/util/svg.js~M11",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/svg.js",
    "importStyle": "{M11}",
    "description": "key to row 1 column 1 in an `SVGMatrix`",
    "lineNumber": 15,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 261,
    "kind": "variable",
    "name": "M21",
    "memberof": "src/util/svg.js",
    "static": true,
    "longname": "src/util/svg.js~M21",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/svg.js",
    "importStyle": "{M21}",
    "description": "key to row 2 column 1 in an `SVGMatrix`",
    "lineNumber": 16,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 262,
    "kind": "variable",
    "name": "M12",
    "memberof": "src/util/svg.js",
    "static": true,
    "longname": "src/util/svg.js~M12",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/svg.js",
    "importStyle": "{M12}",
    "description": "key to row 1 column 2 in an `SVGMatrix`",
    "lineNumber": 17,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 263,
    "kind": "variable",
    "name": "M22",
    "memberof": "src/util/svg.js",
    "static": true,
    "longname": "src/util/svg.js~M22",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/svg.js",
    "importStyle": "{M22}",
    "description": "key to row 2 column 2 in an `SVGMatrix`",
    "lineNumber": 18,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 264,
    "kind": "variable",
    "name": "MX",
    "memberof": "src/util/svg.js",
    "static": true,
    "longname": "src/util/svg.js~MX",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/svg.js",
    "importStyle": "{MX}",
    "description": "key to row 1 column 3 in an `SVGMatrix`, i.e., x-translation",
    "lineNumber": 19,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 265,
    "kind": "variable",
    "name": "MY",
    "memberof": "src/util/svg.js",
    "static": true,
    "longname": "src/util/svg.js~MY",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/svg.js",
    "importStyle": "{MY}",
    "description": "key to row 2 column 3 in an `SVGMatrix`, i.e., y-translation",
    "lineNumber": 20,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 266,
    "kind": "variable",
    "name": "refSVG",
    "memberof": "src/util/svg.js",
    "static": true,
    "longname": "src/util/svg.js~refSVG",
    "access": "private",
    "export": false,
    "importPath": "boxer/src/util/svg.js",
    "importStyle": null,
    "description": "a single <svg> element in memory for utility purposes",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "SVGSVGElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 267,
    "kind": "variable",
    "name": "ID_MATRIX",
    "memberof": "src/util/svg.js",
    "static": true,
    "longname": "src/util/svg.js~ID_MATRIX",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/svg.js",
    "importStyle": "{ID_MATRIX}",
    "description": "the matrix representing the identity transformation (not changing anything)",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "SVGMatrix"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 268,
    "kind": "variable",
    "name": "ORIG_POINT",
    "memberof": "src/util/svg.js",
    "static": true,
    "longname": "src/util/svg.js~ORIG_POINT",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/svg.js",
    "importStyle": "{ORIG_POINT}",
    "description": "a (0, 0) point in svg space",
    "lineNumber": 38,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 269,
    "kind": "variable",
    "name": "SVGMatrix",
    "memberof": "src/util/svg.js",
    "static": true,
    "longname": "src/util/svg.js~SVGMatrix",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/svg.js",
    "importStyle": "{SVGMatrix}",
    "description": "The `SVGMatrix` class, which is not 'just available' in JavaScript.",
    "lineNumber": 43,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 270,
    "kind": "variable",
    "name": "SVGPoint",
    "memberof": "src/util/svg.js",
    "static": true,
    "longname": "src/util/svg.js~SVGPoint",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/svg.js",
    "importStyle": "{SVGPoint}",
    "description": "The `SVGPoint` class, which is not 'just available' in JavaScript.",
    "lineNumber": 48,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 271,
    "kind": "function",
    "name": "matrixEquals",
    "memberof": "src/util/svg.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/svg.js~matrixEquals",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/svg.js",
    "importStyle": "{matrixEquals}",
    "description": "Test equality between two matrices.",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "SVGMatrix"
        ],
        "spread": false,
        "optional": false,
        "name": "M1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "SVGMatrix"
        ],
        "spread": false,
        "optional": false,
        "name": "M2",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "`true` if the two matrices are equal; `false` otherwise"
    }
  },
  {
    "__docId__": 272,
    "kind": "function",
    "name": "setCTM",
    "memberof": "src/util/svg.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/svg.js~setCTM",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/svg.js",
    "importStyle": "{setCTM}",
    "description": "Change the current transformation matrix of an svg element.",
    "examples": [
      "shape::setCTM( ID_MATRIX.translate(x, y) );"
    ],
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@this",
        "tagValue": " {SVGElement} the element to transform"
      },
      {
        "tagName": "@returns",
        "tagValue": "{SVGElement} the element that was transformed (so you could chain other method-calls)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SVGMatrix"
        ],
        "spread": false,
        "optional": false,
        "name": "matrix",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SVGElement"
      ],
      "spread": false,
      "description": "the element that was transformed (so you could chain other method-calls)"
    }
  },
  {
    "__docId__": 273,
    "kind": "function",
    "name": "getCTM",
    "memberof": "src/util/svg.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/svg.js~getCTM",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/svg.js",
    "importStyle": "{getCTM}",
    "description": "",
    "examples": [
      "let matrix = shape::getCTM();"
    ],
    "lineNumber": 81,
    "unknown": [
      {
        "tagName": "@this",
        "tagValue": "{SVGElement} the svg element of which to get the current transformation matrix"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "SVGMatrix"
      ],
      "spread": false,
      "description": "the current transformation matrix of a given svg element"
    }
  },
  {
    "__docId__": 274,
    "kind": "function",
    "name": "newSVGPoint",
    "memberof": "src/util/svg.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/svg.js~newSVGPoint",
    "access": null,
    "export": false,
    "importPath": "boxer/src/util/svg.js",
    "importStyle": null,
    "description": "Create a new `SVGPoint`. The `SVGPoint` class itself cannot be used for this.",
    "lineNumber": 94,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SVGPoint"
      ],
      "spread": false,
      "description": "the newly created svg point"
    }
  },
  {
    "__docId__": 275,
    "kind": "class",
    "name": "Vector2D",
    "memberof": "src/util/svg.js",
    "static": true,
    "longname": "src/util/svg.js~Vector2D",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/svg.js",
    "importStyle": "{Vector2D}",
    "description": "A representation of a vector in 2D SVG space, not necessarily with a\nspecific reference-frame.",
    "see": [
      "Point2D"
    ],
    "lineNumber": 105,
    "interface": false
  },
  {
    "__docId__": 276,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/util/svg.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/svg.js~Vector2D#constructor",
    "access": null,
    "description": "Create a new `Vector2D`.",
    "lineNumber": 113,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "other",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "other.x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "other.y",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 277,
    "kind": "member",
    "name": "svgPoint",
    "memberof": "src/util/svg.js~Vector2D",
    "static": false,
    "longname": "src/util/svg.js~Vector2D#svgPoint",
    "access": null,
    "description": null,
    "lineNumber": 115,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 278,
    "kind": "member",
    "name": "svgPoint",
    "memberof": "src/util/svg.js~Vector2D",
    "static": false,
    "longname": "src/util/svg.js~Vector2D#svgPoint",
    "access": null,
    "description": null,
    "lineNumber": 119,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 279,
    "kind": "method",
    "name": "fromMatrixTranslation",
    "memberof": "src/util/svg.js~Vector2D",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/svg.js~Vector2D.fromMatrixTranslation",
    "access": null,
    "description": "Create a new vector from the translation component of a matrix.",
    "lineNumber": 129,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector2D}  - the new vector"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SVGMatrix"
        ],
        "spread": false,
        "optional": false,
        "name": "m",
        "description": "the matrix from which to take the translation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector2D"
      ],
      "spread": false,
      "description": "the new vector"
    }
  },
  {
    "__docId__": 280,
    "kind": "get",
    "name": "x",
    "memberof": "src/util/svg.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/svg.js~Vector2D#x",
    "access": null,
    "description": "the x-dimension value of this vector",
    "lineNumber": 144,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 281,
    "kind": "get",
    "name": "y",
    "memberof": "src/util/svg.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/svg.js~Vector2D#y",
    "access": null,
    "description": "the y-dimension value of this vector",
    "lineNumber": 153,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 282,
    "kind": "get",
    "name": "xy",
    "memberof": "src/util/svg.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/svg.js~Vector2D#xy",
    "access": null,
    "description": "a simple `[x, y]` representation of this vector",
    "lineNumber": 162,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "[number, number]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 283,
    "kind": "method",
    "name": "plus",
    "memberof": "src/util/svg.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/svg.js~Vector2D#plus",
    "access": null,
    "description": "Add this vector to another vector.\nDoes not modify this vector, but returns a new one.",
    "lineNumber": 172,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector2D}       - the pointwise addition of both vectors"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "other",
        "description": "the other vector"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector2D"
      ],
      "spread": false,
      "description": "the pointwise addition of both vectors"
    }
  },
  {
    "__docId__": 284,
    "kind": "method",
    "name": "minus",
    "memberof": "src/util/svg.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/svg.js~Vector2D#minus",
    "access": null,
    "description": "Subtract another vector from this one.\nDoes not modify this vector, but returns a new one.",
    "lineNumber": 185,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector2D}       - the pointwise subtraction of both vectors"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "other",
        "description": "the other vector"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector2D"
      ],
      "spread": false,
      "description": "the pointwise subtraction of both vectors"
    }
  },
  {
    "__docId__": 285,
    "kind": "method",
    "name": "times",
    "memberof": "src/util/svg.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/svg.js~Vector2D#times",
    "access": null,
    "description": "Multiply this vector by a scalar.\nDoes not modify this vector, but returns a new one.",
    "lineNumber": 198,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector2D}      - this vector multiplied by a scalar"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "scalar",
        "description": "the scalar"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector2D"
      ],
      "spread": false,
      "description": "this vector multiplied by a scalar"
    }
  },
  {
    "__docId__": 286,
    "kind": "method",
    "name": "angle",
    "memberof": "src/util/svg.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/svg.js~Vector2D#angle",
    "access": null,
    "description": "Get the angle this vector makes.",
    "lineNumber": 212,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} the angle this vector makes with the positive y-axis"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "the angle this vector makes with the positive y-axis"
    }
  },
  {
    "__docId__": 287,
    "kind": "get",
    "name": "lengthSquared",
    "memberof": "src/util/svg.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/svg.js~Vector2D#lengthSquared",
    "access": null,
    "description": "the length of this vector squared;\nuse this if you can; it's more efficient than `length`",
    "see": [
      "Vector2D#length"
    ],
    "lineNumber": 222,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 288,
    "kind": "get",
    "name": "length",
    "memberof": "src/util/svg.js~Vector2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/svg.js~Vector2D#length",
    "access": null,
    "description": "the length of this vector",
    "lineNumber": 229,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 289,
    "kind": "class",
    "name": "Point2D",
    "memberof": "src/util/svg.js",
    "static": true,
    "longname": "src/util/svg.js~Point2D",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/svg.js",
    "importStyle": "{Point2D}",
    "description": "This represents a point in 2D SVG space. It is aware of its x and y coordinates\nand of its local coordinate system. When comparing or combining with other\n`Point2D` instances, their respective coordinate systems will automatically\nbe reconciled.",
    "lineNumber": 242,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 290,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/util/svg.js~Point2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/svg.js~Point2D#constructor",
    "access": null,
    "description": "Create a new `Vector2D`.",
    "lineNumber": 251,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "other",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "other.x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "other.y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "SVGElement"
        ],
        "spread": false,
        "optional": false,
        "name": "other.coordinateSystem",
        "description": "the element defining this point's coordinate system"
      }
    ]
  },
  {
    "__docId__": 291,
    "kind": "member",
    "name": "coordinateSystem",
    "memberof": "src/util/svg.js~Point2D",
    "static": false,
    "longname": "src/util/svg.js~Point2D#coordinateSystem",
    "access": null,
    "description": null,
    "lineNumber": 255,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 292,
    "kind": "method",
    "name": "fromMatrixTranslation",
    "memberof": "src/util/svg.js~Point2D",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/svg.js~Point2D.fromMatrixTranslation",
    "access": null,
    "description": "Create a new Point2D from the translation component of a matrix.",
    "lineNumber": 270,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Point2D} the new point"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SVGMatrix"
        ],
        "spread": false,
        "optional": false,
        "name": "m",
        "description": "the matrix from which to take the translation"
      },
      {
        "nullable": null,
        "types": [
          "jQuery",
          "SVGElement"
        ],
        "spread": false,
        "optional": false,
        "name": "coordinateSystem",
        "description": "the coordinate system for this new point"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Point2D"
      ],
      "spread": false,
      "description": "the new point"
    }
  },
  {
    "__docId__": 293,
    "kind": "method",
    "name": "in",
    "memberof": "src/util/svg.js~Point2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/svg.js~Point2D#in",
    "access": null,
    "description": "Get this point, but described in a different coordinate system.",
    "lineNumber": 283,
    "params": [
      {
        "nullable": null,
        "types": [
          "jQuery",
          "SVGElement"
        ],
        "spread": false,
        "optional": false,
        "name": "coordinateSystem",
        "description": "the coordinate system for this new point"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Point2D"
      ],
      "spread": false,
      "description": "the same point, but framed by the given coordinate system"
    }
  },
  {
    "__docId__": 294,
    "kind": "method",
    "name": "obj",
    "memberof": "src/util/svg.js~Point2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/svg.js~Point2D#obj",
    "access": null,
    "description": "A convenience function to get a plain `{x, y}` object from this point,\nbut with configurable keys.",
    "lineNumber": 302,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'x'",
        "defaultRaw": "'x'",
        "name": "xKey",
        "description": "the key for the x coordinate"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'y'",
        "defaultRaw": "'y'",
        "name": "yKey",
        "description": "the key for the y coordinate"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "an object like `{ [xKey]: 24, [yKey]: 25 }`"
    }
  },
  {
    "__docId__": 295,
    "kind": "method",
    "name": "plus",
    "memberof": "src/util/svg.js~Point2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/svg.js~Point2D#plus",
    "access": null,
    "description": "Add this point to another point, reconciling their coordinate systems.\nDoes not modify this point, but returns a new one.\nThe result of this operation might not make sense unless\nyou divide the result by 2 (or something).",
    "lineNumber": 317,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Point2D}       - the pointwise addition of both point"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "other",
        "description": "the other point"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Point2D"
      ],
      "spread": false,
      "description": "the pointwise addition of both point"
    }
  },
  {
    "__docId__": 296,
    "kind": "method",
    "name": "minus",
    "memberof": "src/util/svg.js~Point2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/svg.js~Point2D#minus",
    "access": null,
    "description": "Subtract another point from this one, reconciling their\ncoordinate systems and returning a vector.\nDoes not modify this vector, but returns a new one.",
    "lineNumber": 333,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vector2D}      - the pointwise subtraction of both point"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "other",
        "description": "the other point"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector2D"
      ],
      "spread": false,
      "description": "the pointwise subtraction of both point"
    }
  },
  {
    "__docId__": 297,
    "kind": "method",
    "name": "squaredDistanceTo",
    "memberof": "src/util/svg.js~Point2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/svg.js~Point2D#squaredDistanceTo",
    "access": null,
    "description": "",
    "lineNumber": 345,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} the Euclidean distance between the two points, squared"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "other",
        "description": "the other point"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "the Euclidean distance between the two points, squared"
    }
  },
  {
    "__docId__": 298,
    "kind": "method",
    "name": "distanceTo",
    "memberof": "src/util/svg.js~Point2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/svg.js~Point2D#distanceTo",
    "access": null,
    "description": "",
    "lineNumber": 354,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} the Euclidean distance between the two points"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "other",
        "description": "the other point"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "the Euclidean distance between the two points"
    }
  },
  {
    "__docId__": 299,
    "kind": "method",
    "name": "withFactorTo",
    "memberof": "src/util/svg.js~Point2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/svg.js~Point2D#withFactorTo",
    "access": null,
    "description": "Get a point partway between this point and another, the exact\npoint defined by a factor of the distance between them.",
    "lineNumber": 365,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "factor",
        "description": "the factor determining the location on the `this`-`other` line-segment"
      },
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "other",
        "description": "the other point"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Point2D"
      ],
      "spread": false,
      "description": "`this` * `factor` + `other` * (1 - `factor`)"
    }
  },
  {
    "__docId__": 300,
    "kind": "method",
    "name": "withDistanceTo",
    "memberof": "src/util/svg.js~Point2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/svg.js~Point2D#withDistanceTo",
    "access": null,
    "description": "Get a point partway between this point and another, the exact\npoint defined by an absolute distance from this point.",
    "lineNumber": 381,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "distance",
        "description": "the distance from this point from which to take the resulting point"
      },
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "other",
        "description": "the other point"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Point2D"
      ],
      "spread": false,
      "description": "the defined point"
    }
  },
  {
    "__docId__": 301,
    "kind": "method",
    "name": "transformedBy",
    "memberof": "src/util/svg.js~Point2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/svg.js~Point2D#transformedBy",
    "access": null,
    "description": "Transform this point by a given matrix.",
    "lineNumber": 391,
    "params": [
      {
        "nullable": null,
        "types": [
          "SVGMatrix"
        ],
        "spread": false,
        "optional": false,
        "name": "matrix",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Point2D"
      ],
      "spread": false,
      "description": "this point multiplied by `matrix`"
    }
  },
  {
    "__docId__": 302,
    "kind": "function",
    "name": "scaleFromPoint",
    "memberof": "src/util/svg.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/svg.js~scaleFromPoint",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/svg.js",
    "importStyle": "{scaleFromPoint}",
    "description": "Add a scale-from-point transformation onto an existing matrix.\nThat is, multiply the distance between the given `point` and every\nother point by the supplied `factor`.",
    "lineNumber": 410,
    "unknown": [
      {
        "tagName": "@this",
        "tagValue": "{SVGMatrix} the matrix to change"
      },
      {
        "tagName": "@returns",
        "tagValue": "{SVGMatrix} the original matrix but with the additional scaling"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "factor",
        "description": "the scaling factor"
      },
      {
        "nullable": null,
        "types": [
          "{x: number, y: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "the reference point"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SVGMatrix"
      ],
      "spread": false,
      "description": "the original matrix but with the additional scaling"
    }
  },
  {
    "__docId__": 303,
    "kind": "function",
    "name": "rotateAroundPoint",
    "memberof": "src/util/svg.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/svg.js~rotateAroundPoint",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/svg.js",
    "importStyle": "{rotateAroundPoint}",
    "description": "Add a rotate-around-point transformation onto an existing matrix.",
    "lineNumber": 422,
    "unknown": [
      {
        "tagName": "@this",
        "tagValue": "{SVGMatrix} the matrix to change"
      },
      {
        "tagName": "@returns",
        "tagValue": "{SVGMatrix} the original matrix but with the additional rotation"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{x: number, y: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "the reference point"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "angle",
        "description": "the angle by which to rotate"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SVGMatrix"
      ],
      "spread": false,
      "description": "the original matrix but with the additional rotation"
    }
  },
  {
    "__docId__": 304,
    "kind": "function",
    "name": "moveToFront",
    "memberof": "src/util/svg.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/svg.js~moveToFront",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/svg.js",
    "importStyle": "{moveToFront}",
    "description": "Move a given svg element to the front in terms of 'z-index'.",
    "lineNumber": 431,
    "unknown": [
      {
        "tagName": "@this",
        "tagValue": "{SVGElement} the element to bring to front"
      }
    ],
    "params": []
  },
  {
    "__docId__": 305,
    "kind": "function",
    "name": "snap45",
    "memberof": "src/util/svg.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/svg.js~snap45",
    "access": null,
    "export": true,
    "importPath": "boxer/src/util/svg.js",
    "importStyle": "{snap45}",
    "description": "",
    "lineNumber": 443,
    "unknown": [
      {
        "tagName": "@this",
        "tagValue": " {Point2D} the original point to snap"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "referencePoint",
        "description": "the point defining the center around which to snap"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Point2D"
      ],
      "spread": false,
      "description": "the original point snapped to the closest 45-degree line crossing the reference point"
    }
  },
  {
    "__docId__": 307,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 308,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 309,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 310,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 311,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 312,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 313,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 314,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 315,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 316,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 317,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 318,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 319,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 320,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 321,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 322,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 323,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 324,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 325,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 326,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 327,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 328,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 329,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 330,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 331,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 332,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 333,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 334,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 335,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 336,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 337,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 338,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 339,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 340,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 341,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 342,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 343,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 344,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 345,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 346,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 347,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 348,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 349,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 350,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 351,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 352,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 353,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true
  },
  {
    "__docId__": 355,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 356,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 357,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 358,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 359,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 360,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 361,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 362,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true
  },
  {
    "__docId__": 363,
    "kind": "testFile",
    "name": "test/Machine.spec.js",
    "content": "import {\n\tchai,\n\tsinon,\n\tdescribe,\n\tit,\n\tbeforeEach,\n\tafterEach,\n\texpect,\n} from './test.helper';\n\nimport {Subject} from 'rxjs';\n\nimport Machine from '../src/util/Machine';\n\n/** @test Machine */\ndescribe(\"Machine state machine\", () => {\n\t\n\tlet machine1, subject1_1, subject1_2, values1;\n\tbeforeEach(() => {\n\t\tmachine1   = new Machine('Machine 1', { state: 'STATE_1' });\n\t\tsubject1_1 = new Subject();\n\t\tsubject1_2 = new Subject();\n\t\tvalues1    = [];\n\t\tmachine1.extend(({ enterState, subscribeDuringState }) => ({\n\t\t\tSTATE_1: (v) => {\n\t\t\t\tvalues1.push(v);\n\t\t\t\tsubject1_1::enterState('STATE_2');\n\t\t\t},\n\t\t\tSTATE_2: (v) => {\n\t\t\t\tvalues1.push(v);\n\t\t\t\tsubject1_2::enterState('STATE_1');\n\t\t\t}\n\t\t}));\n\t});\n\t\n\t/** @test Machine#extend */\n\tit(\"can move from state to state\", () => {\n\t\texpect(machine1.state).to.equal('STATE_1');\n\t\texpect(values1).to.deep.equal([ undefined ]);\n\t\t\n\t\tsubject1_1.next('value 1');\n\t\t\n\t\texpect(machine1.state).to.equal('STATE_2');\n\t\texpect(values1).to.deep.equal([ undefined, 'value 1' ]);\n\t\t\n\t\tsubject1_1.next('value 2');\n\t\t\n\t\texpect(machine1.state).to.equal('STATE_2');\n\t\texpect(values1).to.deep.equal([ undefined, 'value 1' ]);\n\t\t\n\t\tsubject1_2.next('value 3');\n\t\t\n\t\texpect(machine1.state).to.equal('STATE_1');\n\t\texpect(values1).to.deep.equal([ undefined, 'value 1', 'value 3' ]);\n\t\t\n\t});\n\t\n\t\n\tlet machine2, subject2_3, subject2_4, subject2_5, values2;\n\tbeforeEach(() => {\n\t\tmachine2   = new Machine('Machine 2', { state: 'STATE_3' });\n\t\tsubject2_3 = new Subject();\n\t\tsubject2_4 = new Subject();\n\t\tsubject2_5 = new Subject();\n\t\tvalues2 = [];\n\t\tmachine2.extend(({ enterState, subscribeDuringState }) => ({\n\t\t\tSTATE_3: (v) => {\n\t\t\t\tvalues2.push(v);\n\t\t\t\tsubject2_3::enterState('STATE_4');\n\t\t\t},\n\t\t\tSTATE_4: (v) => {\n\t\t\t\tvalues2.push(v);\n\t\t\t\tsubject2_4::enterState('STATE_3');\n\t\t\t},\n\t\t\tSTATE_5: (v) => {\n\t\t\t\tvalues2.push(v);\n\t\t\t\tsubject2_5::enterState('STATE_3');\n\t\t\t}\n\t\t}));\n\t});\n\t\n\t\n\t/** @test Machine#link */\n\tit(\"can link states from multiple state machines\", () => {\n\t\t\n\t\tmachine2.link(\n\t\t\t['STATE_4', machine1.STATE_2, 'STATE_5']\n\t\t);\n\t\t\n\t\texpect(machine1.state).to.equal('STATE_1');\n\t\texpect(values1).to.deep.equal([ undefined ]);\n\t\texpect(machine2.state).to.equal('STATE_3');\n\t\texpect(values2).to.deep.equal([ undefined ]);\n\t\t\n\t\tsubject1_1.next('value 1');\n\t\t\n\t\texpect(machine1.state).to.equal('STATE_2');\n\t\texpect(values1).to.deep.equal([ undefined, 'value 1' ]);\n\t\texpect(machine2.state).to.equal('STATE_3');\n\t\texpect(values2).to.deep.equal([ undefined ]);\n\t\t\n\t\tsubject1_2.next('value 2');\n\t\t\n\t\texpect(machine1.state).to.equal('STATE_1');\n\t\texpect(values1).to.deep.equal([ undefined, 'value 1', 'value 2' ]);\n\t\texpect(machine2.state).to.equal('STATE_3');\n\t\texpect(values2).to.deep.equal([ undefined ]);\n\t\t\n\t\tsubject2_3.next('value 3');\n\t\t\n\t\texpect(machine1.state).to.equal('STATE_1');\n\t\texpect(values1).to.deep.equal([ undefined, 'value 1', 'value 2' ]);\n\t\texpect(machine2.state).to.equal('STATE_4');\n\t\texpect(values2).to.deep.equal([ undefined, 'value 3' ]);\n\t\t\n\t\tsubject1_1.next('value 4');\n\t\t\n\t\texpect(machine1.state).to.equal('STATE_2');\n\t\texpect(values1).to.deep.equal([ undefined, 'value 1', 'value 2', 'value 4' ]);\n\t\texpect(machine2.state).to.equal('STATE_5');\n\t\texpect(values2).to.deep.equal([ undefined, 'value 3', 'value 4' ]);\n\t\t\n\t\tsubject2_5.next('value 5');\n\t\t\n\t\texpect(machine1.state).to.equal('STATE_2');\n\t\texpect(values1).to.deep.equal([ undefined, 'value 1', 'value 2', 'value 4' ]);\n\t\texpect(machine2.state).to.equal('STATE_3');\n\t\texpect(values2).to.deep.equal([ undefined, 'value 3', 'value 4', 'value 5' ]);\n\t\t\n\t});\n\t\n});\n",
    "static": true,
    "longname": "test/Machine.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 364,
    "kind": "testDescribe",
    "name": "describe0",
    "testId": 0,
    "memberof": "test/Machine.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Machine.spec.js~describe0",
    "access": null,
    "description": "Machine state machine",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "Machine"
      }
    ],
    "testTargets": [
      "*"
    ]
  },
  {
    "__docId__": 365,
    "kind": "testIt",
    "name": "it1",
    "testId": 1,
    "memberof": "test/Machine.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/Machine.spec.js~describe0.it1",
    "access": null,
    "description": "can move from state to state",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "Machine#extend"
      }
    ],
    "testTargets": [
      "*"
    ]
  },
  {
    "__docId__": 366,
    "kind": "testIt",
    "name": "it2",
    "testId": 2,
    "memberof": "test/Machine.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/Machine.spec.js~describe0.it2",
    "access": null,
    "description": "can link states from multiple state machines",
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "Machine#link"
      }
    ],
    "testTargets": [
      "*"
    ]
  }
]